swagger: '2.0'
info:
  description: >-
    The Currencycloud API is a robust, predictable, easy-to-use API for
    converting money between currencies and making payments around the world.
    Dynamically register sub-accounts to provide white labeled money transfer
    services to your own customers.
  version: 2.0.0
  title: Currencycloud API
  termsOfService: 'https://www.currencycloud.com/terms-and-conditions/'
  contact:
    name: support
    email: support@currencycloud.com
externalDocs:
  description: API overview
  url: 'https://developer.currencycloud.com/overview/'
tags:
  - name: Authenticate
    description: >-
      Authenticate to gain access to the API. Provides the ability to log in to
      your Currencycloud account using your API Key and log out by terminating
      your session.
  - name: Accounts
    description: >-
      Create, search and update your Currencycloud account and any associated
      sub-accounts. Also provides you with the ability to use your own reference
      IDs for easy reconciliation with your internal systems.
  - name: Balances
    description: >-
      Provides access to view balance information. View the balances that you
      currently hold in different currencies on your Currencycloud account.
  - name: Beneficiaries
    description: >-
      Provides you with the ability to create, search and manage the list of
      individuals or companies that you send payments to.
  - name: Contacts
    description: >-
      Create, search and manage the list of users that have access in your
      Currencycloud account or associated sub-accounts.
  - name: Conversions
    description: >-
      Gives you the ability to find, retrieve and create a live currency
      conversion. You can also create and manage the live conversion of funds
      between two currencies.
  - name: IBANs
    description: >-
      Create, search and manage International Bank Account Numbers (IBANs)
      assigned to your Currencycloud account balance or your sub-accounts'
      balances. You can also retrieve and assign IBANs to the the account.
  - name: Payers
    description: >-
      Provides you with the ability to view information relating to the 'payer'
      for a payment that has been initiated through the platform.
  - name: Payments
    description: >-
      Create, search, manage and action all of your domestic and international
      payments through this API.
  - name: Rates
    description: >-
      Super fast real-time access to live foreign exchange rates through the
      Currencycloud platform.
  - name: Reference
    description: >-
      Easy access to view implortant data relevant to your Currencycloud account
      including beneficiary details, conversion dates, available currencies,
      payer required details, payment dates and settlement details.
  - name: Settlements
    description: >-
      Consolidate multiple currency conversions into a single group. Search,
      manage, delete and release these currency conversion groups.
  - name: Transactions
    description: >-
      View balances and all pending and completed transactions in your
      Currencycloud account, as well as associated sub-account balances and
      transactions.
  - name: Transfers
    description: >-
      Search, retrieve and create a transfer of funds between your Currencycloud
      account and associated sub-accounts.
  - name: VANs
    description: >-
      Create, search and manage Virtual Accounts (VANs) assigned to your
      Currencycloud account balance or your sub-accounts' balances. You can also
      retrieve and assign VANs to the the account.
schemes:
  - https
host: devapi.currencycloud.com
basePath: /v2
consumes:
  - multipart/form-data
produces:
  - application/json
paths:
  /authenticate/api:
    post:
      tags:
        - Authenticate
      x-api-group: manage
      summary: Login
      description: >-
        The Currencycloud API authentication and authorization endpoint.

        Submit a login ID and API key for a Currencycloud account. On successful
        login, a temporary authentication token is returned.

        An authentication token is required to make requests to all other
        endpoints in the Currencycloud API. Tokens expire after 30 minutes of
        inactivity.

        Token requests are limited to 10 calls per minute.

        For security, Currencycloud accounts are disabled when four unsuccessful
        login attempts are made within a short period. Account holders must
        [contact support](https://developer.currencycloud.com/support) to
        reactivate their account.
      operationId: Login
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: login_id
          in: formData
          required: true
          type: string
          description: >-
            Login ID for a Currencycloud account. This is usually an email
            address.
        - name: api_key
          in: formData
          required: true
          type: string
          description: The unique API key for the Currencycloud account.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AuthenticationToken'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/LoginError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /authenticate/close_session:
    post:
      tags:
        - Authenticate
      x-api-group: manage
      summary: Logout
      description: >-
        Authentication tokens expire automatically after 30 minutes of
        inactivity. If a session is no longer required, it is good security
        practice to retire its authentication token early rather than leave it
        to time out.
      operationId: Logout
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: >-
            Success. A 200 response with an empty payload signifies that the
            authentication token is successfully retired.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /accounts/current:
    get:
      tags:
        - Accounts
      x-api-group: manage
      summary: Get Authenticating Account
      description: Get the main account of the authenticating user.
      operationId: GetAuthenticatingAccount
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          type: string
          required: true
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-error-id_is_not_valid_uuid: 'id should be in UUID format'
          schema:
            $ref: '#/definitions/GetAuthenticatingAccountError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /accounts/find:
    get:
      tags:
        - Accounts
      x-api-group: manage
      summary: Find Accounts
      description: >-
        Get sub-accounts owned by the authenticating user. Optionally filter by
        account status and other criteria.
      operationId: FindAccounts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_name
          in: query
          required: false
          type: string
          description: Account name.
        - name: brand
          in: query
          required: false
          type: string
          description: >-
            The value of this field is used for white labeling the Currencycloud
            user interface.
        - name: your_reference
          in: query
          required: false
          type: string
          description: User-generated reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - enabled
            - enabled_no_trading
            - disabled
          description: Account status.
        - name: street
          in: query
          required: false
          type: string
          description: First line of address.
        - name: city
          in: query
          required: false
          type: string
          description: City.
        - name: state_or_province
          in: query
          required: false
          type: string
          description: State or province.
        - name: postal_code
          in: query
          required: false
          type: string
          description: Postal code.
        - name: country
          in: query
          required: false
          type: string
          description: Two-letter country code.
        - name: spread_table
          in: query
          required: false
          type: string
          description: The name of the spread table assigned to the account.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/Account'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-error-account_name_is_too_short: 'account_name can not be shorter than 1 character(s)'
          x-error-account_name_is_too_long: 'account_name can not be longer than 150 character(s)'
          x-eror-brand_is_too_short: 'brand can not be shorter than 1 character(s)'
          x-error-brand_is_too_long: 'brand can not be longer than 100 character(s)'
          x-error-your_reference_is_too_short: 'your_reference can not be shorter than 1 character(s)'
          x-error-your_reference_is_too_long: 'your_reference can not be longer than 25 character(s)'
          x-error-status_not_in_range: 'status should be in range: enabled, disabled, enabled_no_trading'
          x-error-legal_entity_type_not_in_range: 'legal_entity_type should be in range: individual, company'
          x-error-street_is_too_long: 'street can not be longer than 150 character(s)'
          x-error-city_is_too_long: 'city can not be longer than 100 character(s)'
          x-error-postal_code_is_too_long: 'postal_code can not be longer than 20 character(s)'
          x-error-country_is_too_long: 'country can not be longer than 2 character(s)'
          x-error-spread_table_is_too_short: 'country can not be shorter than 1 character(s)'
          x-error-spread_table_is_too_long: 'country can not be longer than 100 character(s)'
          schema:
            $ref: '#/definitions/FindAccountsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/accounts/{id}':
    get:
      tags:
        - Accounts
      x-api-group: manage
      summary: Get Account
      description: Get a sub-account owned by the authenticating user.
      operationId: GetAccount
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Account UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetAccountError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
    post:
      tags:
        - Accounts
      x-api-group: manage
      summary: Update Account
      description: >-
        Update a sub-account owned by the authenticating user. On success,
        returns the updated account entity.
      operationId: UpdateAccount
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Account UUID.
        - name: account_name
          in: formData
          required: false
          type: string
          description: Account name.
        - name: legal_entity_type
          in: formData
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: brand
          in: formData
          required: false
          type: string
          description: >-
            The value of this field is used for white labeling the Currencycloud
            user interface.
        - name: your_reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: status
          in: formData
          required: false
          type: string
          enum:
            - enabled
            - enabled_no_trading
            - disabled
          default: enabled
          description: Status of the account.
        - name: street
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: city
          in: formData
          required: false
          type: string
          description: City.
        - name: state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: postal_code
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: country
          in: formData
          required: false
          type: string
          description: Two-letter country code.
        - name: spread_table
          in: formData
          required: false
          type: string
          default: no_markup
          description: The name of the spread table assigned to the account.
        - name: api_trading
          in: formData
          required: false
          type: boolean
          default: true
          description: >-
            Whether trading via the Currencycloud API is to be enabled on the
            account.
        - name: online_trading
          in: formData
          required: false
          type: boolean
          default: true
          description: Whether online trading is to be enabled on the account.
        - name: phone_trading
          in: formData
          required: false
          default: true
          type: boolean
          description: Whether phone trading is to be enabled on the account.
        - name: identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: A legal document that verifies the identity of the account owner.
        - name: identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/UpdateAccountError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /accounts/create:
    post:
      tags:
        - Accounts
      x-api-group: manage
      summary: Create Account
      description: 'Create a new sub-account. On success, returns the new account entity.'
      operationId: CreateAccount
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_name
          in: formData
          required: true
          type: string
          description: Account name.
        - name: legal_entity_type
          in: formData
          required: true
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: street
          in: formData
          required: true
          type: string
          description: First line of address.
        - name: city
          in: formData
          required: true
          type: string
          description: City.
        - name: postal_code
          in: formData
          required: true
          type: string
          description: Postal code.
        - name: country
          in: formData
          required: true
          type: string
          description: Two-letter country code.
        - name: brand
          in: formData
          required: false
          type: string
          description: >-
            The value of this field is used for white labeling the Currencycloud
            user interface.
        - name: your_reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: status
          in: formData
          required: false
          type: string
          enum:
            - enabled
            - enabled_no_trading
            - disabled
          default: enabled
          description: Account status.
        - name: state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: spread_table
          in: formData
          required: false
          type: string
          default: no_markup
          description: The name of the spread table assigned to the account.
        - name: api_trading
          in: formData
          required: false
          type: boolean
          description: Allows the account to make trades via the Currencycloud API.
        - name: online_trading
          in: formData
          required: false
          type: boolean
          description: Allows the account to make trades via Currencycloud Direct.
        - name: phone_trading
          in: formData
          required: false
          type: boolean
          description: Allows the account to make trades via phone.
        - name: identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: A legal document that verifies the identity of the account owner.
        - name: identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number. Required if ``identification_type`` is provided.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreateAccountError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/balances/{currency}':
    get:
      tags:
        - Balances
      x-api-group: manage
      summary: Get Balance
      description: >-
        Get the balance for a currency from the account of the authenticating
        user.
      operationId: GetBalance
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: path
          required: true
          type: string
          description: Three-digit currency code.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Balance'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetBalanceError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /balances/find:
    get:
      tags:
        - Balances
      x-api-group: manage
      summary: Find Balances
      description: >-
        Search for currency balances in the main account or a sub-account owned
        by the authenticating user.
      operationId: FindBalances
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: amount_from
          in: query
          required: false
          type: integer
          description: Minimum balance amount.
        - name: amount_to
          in: query
          required: false
          type: integer
          description: Maximum balance amount.
        - name: as_at_date
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - clients
            - own
            - all
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          default: created_at
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  $ref: '#/definitions/Balance'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindBalancesError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /beneficiaries/find:
    get:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Find Beneficiaries
      description: >-
        Find beneficiaries attached to the account or any sub-account owned by
        the authenticating user.
      operationId: FindBeneficiaries
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: bank_account_holder_name
          in: query
          required: false
          type: string
          description: Bank account holder's name.
        - name: beneficiary_country
          in: query
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
        - name: currency
          in: query
          required: false
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: account_number
          in: query
          required: false
          type: string
          description: Bank account number.
        - name: routing_code_type
          in: query
          required: false
          type: string
          enum:
            - sort_code
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - aba
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value
          in: query
          required: false
          type: string
          description: Routing code.
        - name: bic_swift
          in: query
          required: false
          type: string
          description: BIC/SWIFT code.
        - name: iban
          in: query
          required: false
          type: string
          description: IBAN code.
        - name: default_beneficiary
          in: query
          required: false
          type: boolean
          description: >-
            Payments are made automatically to default beneficiaries when a
            beneficiary is not specified.
        - name: bank_name
          in: query
          required: false
          type: string
          description: Bank name.
        - name: bank_account_type
          in: query
          required: false
          type: string
          enum:
            - checkings
            - savings
          description: Bank account type.
        - name: name
          in: query
          required: false
          type: string
          description: Beneficiary name.
        - name: beneficiary_entity_type
          in: query
          required: false
          type: string
          enum:
            - individual
            - company
          description: Legal entity.
        - name: beneficiary_company_name
          in: query
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "company".
        - name: beneficiary_first_name
          in: query
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "individual".
        - name: beneficiary_last_name
          in: query
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "individual".
        - name: beneficiary_city
          in: query
          required: false
          type: string
          description: City.
        - name: beneficiary_postcode
          in: query
          required: false
          type: string
          description: Post code.
        - name: beneficiary_state_or_province
          in: query
          required: false
          type: string
          description: State or province.
        - name: beneficiary_date_of_birth
          in: query
          required: false
          type: string
          format: date
          description: >-
            If ``beneficiary_entity_type`` is "company", date of registration.
            If ``beneficiary_entity_type`` is "individual", date of birth. ISO
            8601 format YYYY-MM-DD.
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - own
            - clients
            - all
          default: own
          description: 'Search "own" account, "clients" sub-accounts, or "all" accounts.'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              beneficiaries:
                type: array
                items:
                  $ref: '#/definitions/Beneficiary'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindBeneficiariesError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/beneficiaries/{id}':
    get:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Get Beneficiary
      description: Get a beneficiary.
      operationId: GetBeneficiary
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Beneficiary UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetBeneficiaryError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Update Beneficiary
      description: >-
        Update an existing beneficiary. On success, returns the updated
        beneficiary entity.
      operationId: UpdateBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Beneficiary UUID.
        - name: name
          in: formData
          required: true
          type: string
          description: Beneficiary name.
        - name: bank_account_holder_name
          in: formData
          required: true
          type: string
          description: Bank account holder's name.
        - name: bank_country
          in: formData
          required: true
          type: string
          description: >-
            Country in which the beneficiary's bank account is held. Two-letter
            country code.
        - name: currency
          in: formData
          required: true
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: email
          in: formData
          required: false
          type: string
          description: Email address.
        - name: beneficiary_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: beneficiary_country
          in: formData
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
        - name: account_number
          in: formData
          required: false
          type: string
          description: Bank account number.
        - name: routing_code_type_1
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_1
          in: formData
          required: false
          type: string
          description: Routing code for ``routing_code_type_1``.
        - name: routing_code_type_2
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_2
          in: formData
          required: false
          type: string
          description: Routing code for ``routing_code_type_2``.
        - name: payment_types
          in: formData
          required: false
          type: string
          enum:
            - priority
            - regular
          default: regular
          description: >-
            Currencycloud supports two types of payment: ``priority``, made
            using the SWIFT network; and ``regular``, made using the local bank
            network.
        - name: bic_swift
          in: formData
          required: false
          type: string
          description: BIC/SWIFT code.
        - name: iban
          in: formData
          required: false
          type: string
          description: IBAN code.
        - name: default_beneficiary
          in: formData
          required: false
          type: boolean
          default: false
          description: >-
            Payments are made automatically to default beneficiaries when a
            beneficiary is not specified.
        - name: bank_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: bank_name
          in: formData
          required: false
          type: string
          description: Bank name.
        - name: bank_account_type
          in: formData
          required: false
          type: string
          enum:
            - checkings
            - savings
          description: Bank account type.
        - name: beneficiary_entity_type
          in: formData
          required: false
          type: string
          enum:
            - individual
            - company
          description: Legal entity.
        - name: beneficiary_company_name
          in: formData
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "company".
        - name: beneficiary_first_name
          in: formData
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "individual".
        - name: beneficiary_last_name
          in: formData
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "individual".
        - name: beneficiary_city
          in: formData
          required: false
          type: string
          description: City.
        - name: beneficiary_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: beneficiary_state_or_province
          in: formData
          required: false
          type: string
          format: date
          description: State or province.
        - name: beneficiary_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If ``beneficiary_entity_type`` is "company", date of registration.
            If ``beneficiary_entity_type`` is "individual", date of birth. ISO
            8601 format YYYY-MM-DD.
        - name: beneficiary_identification_type
          in: formData
          required: false
          type: string
          description: >-
            A legal document that verifies the identity of the beneficiary.
            Required documentation will vary depending on the country in which
            the beneficiary's bank account is held.
        - name: beneficiary_identification_value
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - clave_unica_de_registro_de_poblacion
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - incorporation_number
            - others
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/UpdateBeneficiaryError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /beneficiaries/create:
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Create Beneficiary
      description: >-
        Create a new beneficiary. On success, returns the new beneficiary
        entity.
      operationId: CreateBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: name
          in: formData
          required: true
          type: string
          description: Beneficiary name.
        - name: bank_account_holder_name
          in: formData
          required: true
          type: string
          description: Bank account holder's name.
        - name: bank_country
          in: formData
          required: true
          type: string
          description: >-
            Two-letter code for the country in which the beneficiary's bank
            account is held.
        - name: currency
          in: formData
          required: true
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: email
          in: formData
          required: false
          type: string
          description: Email address.
        - name: beneficiary_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: beneficiary_country
          in: formData
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
        - name: account_number
          in: formData
          required: false
          type: string
          description: Bank account number.
        - name: routing_code_type_1
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_1
          in: formData
          required: false
          type: string
          description: Routing code for ``routing_code_type_1``.
        - name: routing_code_type_2
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_2
          in: formData
          required: false
          type: string
          description: Routing code for ``routing_code_type_2``.
        - name: bic_swift
          in: formData
          required: false
          type: string
          description: BIC/SWIFT code.
        - name: iban
          in: formData
          required: false
          type: string
          description: IBAN code.
        - name: default_beneficiary
          in: formData
          required: false
          type: boolean
          default: false
          description: >-
            Payments are made automatically to default beneficiaries when a
            beneficiary is not specified.
        - name: bank_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: bank_name
          in: formData
          required: false
          type: string
          description: Bank name.
        - name: bank_account_type
          in: formData
          required: false
          type: string
          enum:
            - checkings
            - savings
          description: Bank account type.
        - name: beneficiary_entity_type
          in: formData
          required: false
          type: string
          enum:
            - individual
            - company
          description: Legal entity.
        - name: beneficiary_company_name
          in: formData
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "company".
        - name: beneficiary_first_name
          in: formData
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "individual".
        - name: beneficiary_last_name
          in: formData
          required: false
          type: string
          description: Required if ``beneficiary_entity_type`` is "individual".
        - name: beneficiary_city
          in: formData
          required: false
          type: string
          description: City.
        - name: beneficiary_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: beneficiary_state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: beneficiary_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If ``beneficiary_entity_type`` is "company", date of registration.
            If ``beneficiary_entity_type`` is "individual", date of birth. ISO
            8601 format YYYY-MM-DD.
        - name: beneficiary_identification_type
          in: formData
          required: false
          type: string
          description: >-
            A legal document that verifies the identity of the beneficiary.
            Required documentation will vary depending on the country in which
            the beneficiary's bank account is held.
        - name: beneficiary_identification_value
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - clave_unica_de_registro_de_poblacion
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - incorporation_number
            - others
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: payment_types
          in: formData
          required: false
          type: string
          enum:
            - priority
            - regular
          default: regular
          description: >-
            Currencycloud supports two types of payments: ``priority``, made
            using the SWIFT network; and ``regular``, made using the local bank
            network.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreateBeneficiaryError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/beneficiaries/{id}/delete':
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Delete Beneficiary
      description: >-
        Delete a beneficiary associated with a sub-account. If the deletion is
        successful, the beneficiary's final state is returned.
      operationId: DeleteBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Beneficiary UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/DeleteBeneficiaryError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /beneficiaries/validate:
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Validate Beneficiary
      description: >-
        Validate a new beneficiary's bank details, without actually creating a
        record of the beneficiary. On success, returns an object that represents
        the entity that would be created if the beneficiary were saved.
      operationId: ValidateBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: bank_country
          in: formData
          required: true
          type: string
          description: >-
            Two-letter code for the country in which the beneficiary's bank
            account is held.
        - name: currency
          in: formData
          required: true
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: beneficiary_country
          in: formData
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/ValidateBeneficiaryError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /contacts/current:
    get:
      tags:
        - Contacts
      x-api-group: manage
      summary: Get Authenticating Contact
      description: Get the contact record for the authenticating user.
      operationId: GetAuthenticatingContact
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /contacts/find:
    get:
      tags:
        - Contacts
      x-api-group: manage
      summary: Find Contacts
      description: Get contacts that match search parameters.
      operationId: FindContacts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_name
          in: query
          required: false
          type: string
          description: Account name.
        - name: account_id
          in: query
          required: false
          type: string
          description: Sub-account UUID.
        - name: first_name
          in: query
          required: false
          type: string
          description: Contact first name.
        - name: last_name
          in: query
          required: false
          type: string
          description: Contact last name.
        - name: email_address
          in: query
          required: false
          type: string
          description: Email address.
        - name: your_reference
          in: query
          required: false
          type: string
          description: User-generated reference code.
        - name: phone_number
          in: query
          required: false
          type: string
          description: Phone number.
        - name: login_id
          in: query
          required: false
          type: string
          description: Currencycloud login ID.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - enabled
            - disabled
          description: Contact status.
        - name: locale
          in: query
          required: false
          type: string
          description: 'Locale code (``en``, ``en-US``, ``fr-FR``).'
        - name: timezone
          in: query
          required: false
          type: string
          description: 'Timezone (``Europe/London``, ``America/New_York``).'
        - name: page
          in: query
          required: false
          type: string
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: string
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindContactsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/contacts/{id}':
    get:
      tags:
        - Contacts
      x-api-group: manage
      summary: Get Contact
      description: Get a contact.
      operationId: GetContact
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetContactError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
    post:
      tags:
        - Contacts
      x-api-group: manage
      summary: Update Contact
      description: >-
        Update an existing contact. On success, returns the updated contact
        entity.
      operationId: UpdateContact
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Contact UUID.
        - name: first_name
          in: query
          required: false
          type: string
          description: Contact first name.
        - name: last_name
          in: query
          required: false
          type: string
          description: Contact last name.
        - name: email_address
          in: query
          required: false
          type: string
          description: Email address.
        - name: your_reference
          in: query
          required: false
          type: string
          description: User-generated reference code.
        - name: phone_number
          in: query
          required: false
          type: string
          description: Phone number.
        - name: mobile_phone_number
          in: query
          required: false
          type: string
          description: Mobile phone number.
        - name: login_id
          in: query
          required: false
          type: string
          description: Currencycloud login ID.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - enabled
            - disabled
          description: Contact status.
        - name: locale
          in: query
          required: false
          type: string
          description: 'Locale code (``en``, ``en-US``, ``fr-FR``).'
        - name: timezone
          in: query
          required: false
          type: string
          description: 'Timezone (``Europe/London``, ``America/New_York``).'
        - name: date_of_birth
          in: query
          required: false
          type: string
          format: date
          description: Date of birth. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/UpdateContactError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /contacts/create:
    post:
      tags:
        - Contacts
      x-api-group: manage
      summary: Create Contact
      description: >-
        Create a new contact and attach to a sub-account. On success, returns
        the new contact entity.
      operationId: CreateContact
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_id
          in: formData
          required: true
          type: string
          description: Account UUID.
        - name: first_name
          in: formData
          required: true
          type: string
          description: Contact first name.
        - name: last_name
          in: formData
          required: true
          type: string
          description: Contact last name.
        - name: email_address
          in: formData
          required: true
          type: string
          description: Email address.
        - name: phone_number
          in: formData
          required: true
          type: string
          description: Phone number.
        - name: your_reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: mobile_phone_number
          in: formData
          required: false
          type: string
          description: Mobile phone number.
        - name: login_id
          in: formData
          required: false
          type: string
          description: Currencycloud login ID.
        - name: status
          in: formData
          required: false
          type: string
          enum:
            - enabled
            - not_enabled
          description: Contact status.
        - name: locale
          in: formData
          required: false
          type: string
          description: 'Locale code (``en``, ``en-US``, ``fr-FR``).'
        - name: timezone
          in: formData
          required: false
          type: string
          description: 'Timezone (``Europe/London``, ``America/New_York``).'
        - name: date_of_birth
          in: formData
          required: false
          type: string
          description: Date of birth. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreateContactError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /conversions/find:
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Find Conversions
      description: Find conversions based on search parameters.
      operationId: FindConversions
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - awaiting_funds
            - funds_sent
            - funds_arrived
            - trade_settled
            - closed
          description: Conversion status.
        - name: partner_status
          in: query
          required: false
          type: string
          enum:
            - awaiting_funds
            - funds_sent
            - funds_arrived
            - trade_settled
            - closed
          description: 'Conversion status, as displayed to contacts of the sub-account.'
        - name: buy_currency
          in: query
          required: false
          type: string
          description: The currency purchased. Three-digital code.
        - name: sell_currency
          in: query
          required: false
          type: string
          description: The currency sold. Three-digit code.
        - name: conversion_ids
          in: query
          required: false
          type: array
          items:
            type: string
          description: One or more conversion UUIDs to filter out of results.
        - name: created_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: created_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: conversion_date_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: conversion_date_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: currency_pair
          in: query
          required: false
          type: string
          description: 'Concatenated string of the two currencies traded, eg. "USDEUR".'
        - name: partner_buy_amount_from
          in: query
          required: false
          type: string
          description: Minimum buy amount (sub-accounts).
        - name: partner_buy_amount_to
          in: query
          required: false
          type: string
          description: Maximum buy amount (sub-accounts).
        - name: partner_sell_amount_from
          in: query
          required: false
          type: string
          description: Minimum sell amount (sub-accounts).
        - name: partner_sell_amount_to
          in: query
          required: false
          type: string
          description: Maximum sell amount (sub-accounts).
        - name: buy_amount_from
          in: query
          required: false
          type: string
          description: Minimum buy amount.
        - name: buy_amount_to
          in: query
          required: false
          type: string
          description: Maximum buy amount.
        - name: sell_amount_from
          in: query
          required: false
          type: string
          description: Minimum sell amount.
        - name: sell_amount_to
          in: query
          required: false
          type: string
          description: Maximum sell amount.
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - all
            - clients
            - own
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: settlement_date_from
          in: query
          required: false
          type: string
          description: >-
            Earliest date when sold currency debited. Any valid ISO 8601 format,
            eg. "2017-12-31T23:59:59+00:00".
        - name: settlement_date_to
          in: query
          required: false
          type: string
          description: >-
            Latest date when sold currency debited. Any valid ISO 8601 format,
            eg. "2017-12-31T23:59:59+00:00".
        - name: unique_request_id
          in: query
          required: false
          type: string
          description: User-generated idempotency key.
        - name: bulk_upload_id
          in: query
          required: false
          type: string
          description: Bulk upload reference code.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: integer
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              conversions:
                type: array
                items:
                  $ref: '#/definitions/Conversion'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindConversionsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/conversions/{id}':
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Get Conversion
      description: Get a conversion record.
      operationId: GetConversion
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Conversion UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Conversion'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /conversions/create:
    post:
      tags:
        - Conversions
      x-api-group: convert
      summary: Create Conversion
      description: 'Create a new conversion. On success, returns the new conversion entity.'
      operationId: CreateConversion
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: buy_currency
          in: formData
          required: true
          type: string
          description: Currency purchased. Three-digit code.
        - name: sell_currency
          in: formData
          required: true
          type: string
          description: Currency sold. Three-digit code.
        - name: fixed_side
          in: formData
          required: true
          type: string
          enum:
            - buy
            - sell
          description: Fix the buy or sell currency.
        - name: amount
          in: formData
          required: true
          type: string
          description: Amount of the fixed buy or sell currency.
        - name: term_agreement
          in: formData
          required: true
          type: boolean
          description: Indicates agreement to terms and conditions.
        - name: conversion_date
          in: formData
          required: false
          type: string
          format: date
          description: Earliest delivery date. ISO 8601 format YYYY-MM-DD.
        - name: client_buy_amount
          in: formData
          required: false
          type: string
          description: Client buy amount.
        - name: client_sell_amount
          in: formData
          required: false
          type: string
          description: Client sell amount.
        - name: reason
          in: formData
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: unique_request_id
          in: formData
          required: false
          type: string
          description: User-generated idempotency key.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Conversion'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreateConversionError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /ibans:
    get:
      tags:
        - IBANs
      x-api-group: collect
      summary: Get IBANs
      description: >-
        Get a list of International Bank Account Numbers attached to the
        authenticating user's account.
      operationId: GetIBANs
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: header
          required: false
          type: string
          description: Currency in which the balance is held. Three-digit currency code.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              ibans:
                type: array
                items:
                  $ref: '#/definitions/IBAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetIBANsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /ibans/subaccounts/find:
    get:
      tags:
        - IBANs
      x-api-group: collect
      summary: Get IBANs for Sub-Accounts
      description: >-
        Get a list of IBANS for all sub-accounts owned by the authenticating
        user. Optionally returns the IBANs of bank accounts that hold money in a
        specified currency.
      operationId: GetIBANsForSubAccounts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: false
          type: string
          description: Currency in which the balance is held. Three-digit currency code.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/IBAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetIBANsForSubAccountsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/ibans/subaccounts/{id}':
    get:
      tags:
        - IBANs
      x-api-group: collect
      summary: Get IBANs for Sub-Account
      description: Get a list of IBANs attached to a sub-account.
      operationId: GetIBANsForSubAccount
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Sub-account UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              ibans:
                type: array
                items:
                  $ref: '#/definitions/IBAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetIBANsForSubAccountError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/payers/{id}':
    get:
      tags:
        - Payers
      x-api-group: pay
      summary: Get Payer
      description: Get a payer record.
      operationId: GetPayer
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payer UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payer'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetPayerError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /payments/find:
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Find Payments
      description: Search for payment records.
      operationId: FindPayments
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: currency
          in: query
          required: false
          type: string
          description: Currency in which payment made. Three-digit currency code.
        - name: amount
          in: query
          required: false
          type: string
          description: Exact amount.
        - name: amount_from
          in: query
          required: false
          type: string
          description: Minimum amount.
        - name: amount_to
          in: query
          required: false
          type: string
          description: Maximum amount.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - new
            - completed
            - failed
            - released
            - suspended
            - awaiting_authorisation
            - submitted
            - authorised
          description: Payment status.
        - name: reason
          in: query
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: payment_date_from
          in: query
          required: false
          type: string
          format: date
          description: >-
            Earliest instructed payment date. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: payment_date_to
          in: query
          required: false
          type: string
          format: date
          description: >-
            Latest instructed payment date. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: transferred_at_from
          in: query
          required: false
          type: string
          format: date-time
          description: >-
            Earliest date of payment processing. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: transferred_at_to
          in: query
          required: false
          type: string
          format: date-time
          description: >-
            Latest date of payment processing. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: created_at_from
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: created_at_to
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: beneficiary_id
          in: query
          required: false
          type: string
          description: Beneficiary UUID.
        - name: conversion_id
          in: query
          required: false
          type: string
          description: Conversion UUID.
        - name: with_deleted
          in: query
          required: false
          type: boolean
          default: false
          description: Include deleted payments.
        - name: payment_group_id
          in: query
          required: false
          type: string
          description: Payment group.
        - name: unique_request_id
          in: query
          required: false
          type: string
          description: User-generated idempotency key.
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - all
            - own
            - clients
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: bulk_upload_id
          in: query
          required: false
          type: string
          description: Bulk upload reference code.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              payments:
                type: array
                items:
                  $ref: '#/definitions/Payment'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindPaymentsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/payments/{id}/submission':
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Get Payment Submission
      description: Get MT103 information for a SWIFT payment.
      operationId: GetPaymentSubmission
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: on_behalf_of
          in: query
          required: true
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PaymentSubmission'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetPaymentSubmissionError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/payments/{id}':
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Get Payment
      description: Get a payment record.
      operationId: GetPayment
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: with_deleted
          in: query
          required: false
          type: boolean
          description: Include deleted payments.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetPaymentError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
    post:
      tags:
        - Payments
      x-api-group: pay
      summary: Update Payment
      description: 'Update a payment. On success, returns the updated payment entity.'
      operationId: UpdatePayment
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: with_deleted
          in: query
          required: false
          type: boolean
          description: Include deleted payments.
        - name: currency
          in: formData
          required: false
          type: string
          description: >-
            Currency in which the payment is being made. Three-digit currency
            code.
        - name: beneficiary_id
          in: formData
          required: false
          type: string
          description: Beneficiary UUID.
        - name: amount
          in: formData
          required: false
          type: string
          description: Payment amount.
        - name: payment_date
          in: formData
          required: false
          type: string
          description: >-
            Instructed date of payment. Any valid ISO 8601 format, eg.
            "2017-12-31".
        - name: reason
          in: formData
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: payment_type
          in: formData
          required: false
          type: string
          enum:
            - priority
            - regular
          description: >-
            Currencycloud supports two types of payments: ``priority``, made
            using the SWIFT network; and ``regular``, made using the local bank
            network.
        - name: reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: conversion_id
          in: formData
          required: false
          type: string
          description: Conversion UUID.
        - name: payer_entity_type
          in: formData
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: payer_company_name
          in: formData
          required: false
          type: string
          description: Required if ``payer_entity_type`` is "company".
        - name: payer_first_name
          in: formData
          required: false
          type: string
          description: Required if ``payer_entity_type`` is "individual".
        - name: payer_last_name
          in: formData
          required: false
          type: string
          description: Required if payer_entity_type is "individual".
        - name: payer_city
          in: formData
          required: false
          type: string
          description: City.
        - name: payer_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: payer_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: payer_state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: payer_country
          in: formData
          required: false
          type: string
          description: Two-letter country code.
        - name: payer_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If ``payer_entity_type`` is "company", company registration date. If
            ``payer_entity_type`` is "individual", date of birth. ISO 8601
            format YYYY-MM-DD..
        - name: payer_identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: >-
            A legal document that verifies the identity of the payer. Required
            documentation will vary depending on the nationality or registered
            address of the payer.
        - name: payer_identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: payer_details_source
          in: formData
          required: false
          type: string
          enum:
            - account
            - payer
          description: 'Source for payer details: the "account" or "payer" record.'
        - name: unique_request_id
          in: formData
          required: false
          type: string
          description: User-generated idempotency key.
        - name: ultimate_beneficiary_name
          in: formData
          required: false
          type: string
          description: The name of the ultimate beneficiary if different.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/UpdatePaymentError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /payments/create:
    post:
      tags:
        - Payments
      x-api-group: pay
      summary: Create Payment
      description: 'Make a payment. On success, returns the new payment record.'
      operationId: CreatePayment
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: formData
          required: true
          type: string
          description: Currency in which payment is made. Three-digit currency code.
        - name: beneficiary_id
          in: formData
          required: true
          type: string
          description: Beneficiary UUID.
        - name: amount
          in: formData
          required: true
          type: string
          description: Amount.
        - name: reason
          in: formData
          required: true
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: reference
          in: formData
          required: true
          type: string
          description: User-generated reference code.
        - name: payment_date
          in: formData
          required: false
          type: string
          description: >-
            Instructed date of payment. Any valid ISO 8601 format, eg.
            "2017-12-31".
        - name: payment_type
          in: formData
          required: false
          type: string
          enum:
            - priority
            - regular
          description: >-
            Currencycloud supports two types of payments: ``priority``, made
            using the SWIFT network; and ``regular``, made using the local bank
            network.
        - name: conversion_id
          in: formData
          required: false
          type: string
          description: Conversion UUID.
        - name: payer_entity_type
          in: formData
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: payer_company_name
          in: formData
          required: false
          type: string
          description: Required if ``payer_entity_type`` is "company".
        - name: payer_first_name
          in: formData
          required: false
          type: string
          description: Required if ``payer_entity_type`` is "individual".
        - name: payer_last_name
          in: formData
          required: false
          type: string
          description: Required if ``payer_entity_type`` is "individual".
        - name: payer_city
          in: formData
          required: false
          type: string
          description: City.
        - name: payer_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: payer_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: payer_state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: payer_country
          in: formData
          required: false
          type: string
          description: Two-letter country code.
        - name: payer_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If ``payer_entity_type`` is "company", company registration date. If
            ``payer_entity_type`` is "individual", date of birth. ISO 8601
            format YYYY-MM-DD.
        - name: payer_identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: >-
            A legal document that verifies the identity of the payer. Required
            documentation will vary depending on the nationality or registered
            address of the payer.
        - name: payer_identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: unique_request_id
          in: formData
          required: false
          type: string
          description: User-generated idempotency key.
        - name: ultimate_beneficiary_name
          in: formData
          required: false
          type: string
          description: The name of the ultimate beneficiary if different.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreatePaymentError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/payments/{id}/delete':
    post:
      tags:
        - Payments
      x-api-group: pay
      summary: Delete Payment
      description: 'Delete a payment. On success, returns the final payment record state.'
      operationId: DeletePayment
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/DeletePaymentError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /rates/detailed:
    get:
      tags:
        - Rates
      x-api-group: convert
      summary: Get Detailed Rates
      description: >-
        Get a detailed quotation to convert money from one currency to another.
        The quotation will be based on the spread table of the authenticating
        user.
      operationId: GetDetailedRates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: buy_currency
          in: query
          required: true
          type: string
          description: Currency purchased. Three-digit code.
        - name: sell_currency
          in: query
          required: true
          type: string
          description: Currency sold. Three-digit code.
        - name: fixed_side
          in: query
          required: true
          type: string
          enum:
            - buy
            - sell
          description: Fix the buy or sell currency.
        - name: amount
          in: query
          required: true
          type: string
          description: Amount of the fixed buy or sell currency.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: conversion_date
          in: query
          required: false
          type: string
          format: date
          description: >-
            Date of delivery of purchase currency. ISO 8601 format YYYY-MM-DD.
            If not specified, deals settle in two working days.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/RateDetailed'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetDetailedRatesError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /rates/find:
    get:
      tags:
        - Rates
      x-api-group: convert
      summary: Get Basic Rates
      description: Get basic foreign exchange rate information for multiple currency pairs.
      operationId: GetBasicRates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency_pair
          in: query
          required: true
          type: string
          description: 'Concatenated string of the two currencies traded, eg. "USDEUR".'
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: ignore_invalid_pairs
          in: query
          required: false
          type: boolean
          description: Ignore the validation of currency pairs.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/RatesBasic'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetBasicRatesError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /reference/beneficiary_required_details:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Beneficiary Requirements
      description: >-
        Find out what information is required to make payments to beneficiaries
        in specified currencies and countries.
      operationId: GetBeneficiaryRequirements
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: false
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: bank_account_country
          in: query
          required: false
          type: string
          description: Two-letter country code.
        - name: beneficiary_country
          in: query
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              details:
                type: array
                items:
                  $ref: '#/definitions/BeneficiaryRequirements'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetBeneficiaryRequirementsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /reference/conversion_dates:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Conversion Dates
      description: Get a list of future non-trading dates for specified currency pairs.
      operationId: GetConversionDates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: conversion_pair
          in: query
          required: true
          type: string
          description: 'Concatenated string of the two currencies converted, eg. "USDEUR".'
        - name: start_date
          in: query
          required: false
          type: string
          format: date
          description: Start date of conversion. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionDates'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetConversionDatesError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /reference/currencies:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Available Currencies
      description: >-
        Get a list of all currencies that can be traded on the Currencycloud
        platform.
      operationId: GetAvailableCurrencies
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AvailableCurrencies'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetAvailableCurrenciesError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /reference/payer_required_details:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Requirements for Payers
      description: >-
        Get information on the minimum details required to create a payer.
        Requirements vary depending on the location of the payer, the type of
        payment to be made (priority or regular), and other factors.
      operationId: GetPayerRequirements
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: payer_country
          in: query
          required: true
          type: string
          description: Two-letter country code.
        - name: payer_entity_type
          in: query
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: payment_type
          in: query
          required: false
          type: string
          enum:
            - priority
            - regular
          description: >-
            Currencycloud supports two types of payments: ``priority``, made
            using the SWIFT network; and ``regular``, made using the local bank
            network.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PayerRequirements'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetPayerRequirementsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /reference/payment_dates:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Payment Dates
      description: >-
        Get a list of invalid payment dates for a given currency. A payment date
        is when a payment will be executed by Currencycloud. Payments cannot be
        made on some days, for example when banks are closed.
      operationId: GetPaymentDates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: true
          type: string
          description: Currency in which payment made. Three-digit currency code.
        - name: start_date
          in: query
          required: false
          type: string
          format: date
          description: Payment start date. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PaymentDates'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetPaymentDatesError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /reference/settlement_accounts:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Settlement Accounts
      description: >-
        Get settlement account information - a list of accounts that require
        funding in order to allow for outstanding transactions to be processed.
      operationId: GetSettlementAccounts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: false
          type: string
          description: Three-digit currency code.
        - name: account_id
          in: query
          required: false
          type: string
          description: Account UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlement_accounts:
                type: array
                items:
                  $ref: '#/definitions/SettlementAccount'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetSettlementAccountsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /settlements/find:
    get:
      tags:
        - Settlements
      x-api-group: convert
      summary: Find Settlements
      description: Get a list of settlements based on search criteria.
      operationId: FindSettlements
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - open
            - released
            - funds_arrived
            - part_paid
            - paid
          description: 'Settlement status, as shown to sub-account contacts.'
        - name: created_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: created_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: released_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: released_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindSettlementsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/settlements/{id}':
    get:
      tags:
        - Settlements
      x-api-group: convert
      summary: Get Settlement
      description: Get a settlement record.
      operationId: GetSettlement
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetSettlementError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /settlements/create:
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Create Settlement
      description: 'Create a new settlement. On success, returns the new settlement entity.'
      operationId: CreateSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: type
          in: formData
          required: false
          type: string
          description: 'Settlement type, eg. "bulk".'
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Settlement'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreateSettlementError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/settlements/{id}/add_conversion':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Add Conversion to Settlement
      description: >-
        Add a conversion to an open settlement. On success, returns the updated
        settlement entity.
      operationId: AddConversionToSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: conversion_id
          in: formData
          required: true
          type: string
          description: Conversion UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/AddConversionToSettlementError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/settlements/{id}/delete':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Delete Settlement
      description: >-
        Delete a settlement. Only open settlements can be deleted. Any
        associated conversions will not be deleted, and may be added to other
        settlements.
      operationId: DeleteSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/DeleteSettlementError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/settlements/{id}/release':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Release Settlement
      description: >-
        Move a settlemnent to “released” status. Released settlements are ready
        for processing.
      operationId: ReleaseSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/ReleaseSettlementError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/settlements/{id}/remove_conversion':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Remove Conversion from Settlement
      description: >-
        Remove a conversion from an open settlement. On success, returns the
        updated settlement entity.
      operationId: RemoveConversionFromSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: conversion_id
          in: formData
          required: true
          type: string
          description: Conversion UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Settlement'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/RemoveConversionFromSettlementError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/settlements/{id}/unrelease':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Unrelease Settlement
      description: >-
        Move a settlement status back to an “open” status, allowing conversions
        to be added and removed.
      operationId: UnreleaseSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/UnreleaseSettlementError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /transactions/find:
    get:
      tags:
        - Transactions
      x-api-group: manage
      summary: Find Transactions
      description: Search for transactions.
      operationId: FindTransactions
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: currency
          in: query
          required: false
          type: string
          description: Three-digit currency code.
        - name: amount
          in: query
          required: false
          type: integer
          description: Amount.
        - name: amount_from
          in: query
          required: false
          type: integer
          description: Minimum amount.
        - name: amount_to
          in: query
          required: false
          type: integer
          description: Maximum amount.
        - name: action
          in: query
          required: false
          type: string
          enum:
            - funding
            - conversion
            - payment
            - payment_failure
            - manual_intervention
            - manual_transaction
          description: The action that triggered the transaction.
        - name: related_entity_type
          in: query
          required: false
          type: string
          enum:
            - conversion
            - payment
            - inbound_funds
          description: The related entity that created the transaction.
        - name: related_entity_id
          in: query
          required: false
          type: string
          description: UUID of the related entity.
        - name: related_entity_short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - completed
            - pending
            - deleted
          description: Transaction status.
        - name: type
          in: query
          required: false
          type: string
          enum:
            - debit
            - credit
          description: Whether the transaction debits or credits the account balance.
        - name: reason
          in: query
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: settles_at_from
          in: query
          required: false
          type: string
          format: date
          description: >-
            Earliest processing date. Any valid ISO 8601 format, eg.
            "2017-12-31".
        - name: settles_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Latest processing date. Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: created_at_from
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: created_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: completed_at_from
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: completed_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: beneficiary_id
          in: query
          required: false
          type: string
          description: Beneficiary UUID. Required if ``related_entity_type`` is "payment".
        - name: currency_pair
          in: query
          required: false
          type: string
          description: >-
            Concatenated string of the two currencies traded, eg. "USDEUR".
            Required if ``related_entity_type`` is "conversion".
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - all
            - own
            - clients
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          default: created_at
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/Transaction'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindTransactionsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/transactions/{id}':
    get:
      tags:
        - Transactions
      x-api-group: manage
      summary: Get Transaction
      description: Get a transaction record.
      operationId: GetTransaction
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Transaction UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Transaction'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetTransactionError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /transfers/find:
    get:
      tags:
        - Transfers
      x-api-group: pay
      summary: Find Transfers
      description: Get transfer records based on search criteria.
      operationId: FindTransfers
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: source_account_id
          in: query
          required: false
          type: string
          description: Account UUID of the paying account.
        - name: destination_account_id
          in: query
          required: false
          type: string
          description: Account UUID of the receiving account.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - completed
            - pending
          description: Transfer status.
        - name: currency
          in: query
          required: false
          type: string
          description: Three-digit currency code.
        - name: amount_from
          in: query
          required: false
          type: string
          description: Minimum amount.
        - name: amount_to
          in: query
          required: false
          type: string
          description: Maximum amount.
        - name: created_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: created_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: completed_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: completed_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: creator_contact_id
          in: query
          required: false
          type: string
          description: Contact UUID of transfer instructor.
        - name: creator_account_id
          in: query
          required: false
          type: string
          description: Account UUID of transfer instructor.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          default: created_at
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              transfers:
                type: array
                items:
                  $ref: '#/definitions/Transfer'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindTransfersError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/transfers/{id}':
    get:
      tags:
        - Transfers
      x-api-group: pay
      summary: Get Transfer
      description: Get a money transfer record.
      operationId: GetTransfer
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Transfer UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Transfer'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetTransferError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /transfers/create:
    post:
      tags:
        - Transfers
      x-api-group: pay
      summary: Create Transfer
      description: >-
        Transfer funds from one account to another account. No currency
        conversion is performed, so the sending and receiving accounts must hold
        money in the same currency.
      operationId: CreateTransfer
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: source_account_id
          in: formData
          required: true
          type: string
          description: Account UUID of the paying account.
        - name: destination_account_id
          in: formData
          required: true
          type: string
          description: Account UUID of the receiving account.
        - name: currency
          in: formData
          required: true
          type: string
          description: Three-digit currency code.
        - name: amount
          in: formData
          required: true
          type: string
          description: Amount.
        - name: reason
          in: formData
          required: false
          type: string
          description: User-generated reason for transfer. Freeform text.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Transfer'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreateTransferError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /virtual_accounts:
    get:
      tags:
        - VANs
      x-api-group: collect
      summary: Get VANs
      description: >-
        Get a list of Virtual Account Numbers attached to the authenticating
        user's account.
      operationId: GetVANs
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              vans:
                type: array
                items:
                  $ref: '#/definitions/VAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetVANsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  /virtual_accounts/subaccounts/find:
    get:
      tags:
        - VANs
      x-api-group: collect
      summary: Get VANs for Sub-Accounts
      description: >-
        Get a list of VANS for all sub-accounts owned by the authenticating
        user.
      operationId: GetVANsForSubAccounts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/VAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetVANsForSubAccountsError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
  '/virtual_accounts/subaccounts/{id}':
    get:
      tags:
        - VANs
      x-api-group: collect
      summary: Get VANs for Sub-Account
      description: Get a list of VANs attached to a sub-account.
      operationId: GetVANsForSubAccount
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Sub-account ID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              ibans:
                type: array
                items:
                  $ref: '#/definitions/VAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetVANsForSubAccountError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: integer
              description: A unique reference for the request.
definitions:
  Account:
    type: object
    description: Account.
    properties:
      id:
        type: string
        description: Account ID.
      account_name:
        type: string
      brand:
        type: string
        description: >-
          The value of this field is used for white labeling the Currencycloud
          user interface.
      your_reference:
        type: string
        description: User-generated reference code.
      status:
        type: string
        enum:
          - enabled
          - enabled_no_trading
          - disabled
        description: Account status.
      street:
        type: string
        description: First line of address.
      city:
        type: string
        description: City.
      state_or_province:
        type: string
        description: State or province.
      country:
        type: string
        description: Two-letter country code.
      postal_code:
        type: string
        description: Postal code.
      spread_table:
        type: string
        description: The name of the spread table assigned to the account.
      legal_entity_type:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      identification_type:
        type: string
        description: A legal document that verifies the identity of the account owner.
      identification_value:
        type: string
        description: >-
          A unique reference code for the identification document, such as a
          passport number.
      short_reference:
        type: string
      api_trading:
        type: boolean
      online_trading:
        type: boolean
      phone_trading:
        type: boolean
      process_third_party_funds:
        type: boolean
      settlement_type:
        type: string
    example:
      id: B7DE235A-FF5D-4252-83C2-06A605267FEA
      account_name: Company PLC
      brand: currencycloud
      your_reference: 0012345564ABC
      status: enabled
      street: 1 London Road
      city: London
      state_or_province: ''
      country: GB
      postal_code: AB12 CD1
      spread_table: flat_0.5_percent
      legal_entity_type: company
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
      identification_type: green_card
      identification_value: 123456789
      short_reference: 110104-00004
      api_trading: true
      online_trading: true
      phone_trading: true
      process_third_party_funds: false
      settlement_type: bulk
  AddConversionToSettlementError:
    type: object
    description: >
      Client error information for the Add Conversion to Settlement endpoint.


      **Error codes**


      ``conversion_does_not_belong_to_account``

      - Category: ``conversion_id``

      - Message: "Conversion cannot be added to this settlement"


      ``add_closed_conversion_failed``

      - Category: ``conversion_id``

      - Message: "Cannot add conversion to a settlement as it does not have any
      open amounts"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  AuthenticationToken:
    type: object
    description: Authentication token.
    properties:
      auth_token:
        type: string
        description: >-
          A randomly-generated 64-digit authentication token. Clients must store
          this securely and destroy it when it is no longer needed.
    example:
      auth_token: 043cc6069f5e32757647641460d1d5ed
  AvailableCurrencies:
    type: object
    description: Available currencies.
    properties:
      code:
        type: string
      decimal_places:
        type: integer
      name:
        type: string
      online_trading:
        type: boolean
    example:
      code: AED
      decimal_places: 2
      name: United Arab Emirates Dirham
      online_trading: true
  Balance:
    type: object
    description: Balance.
    properties:
      id:
        type: string
        description: Balance UUID.
      account_id:
        type: string
        description: Account UUID.
      currency:
        type: string
        description: Currency code.
      amount:
        type: string
        description: Amount.
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    example:
      id: 18230F1D-648A-406A-AD1F-A09CBC02E9E9
      account_id: TcC
      currency: USD
      amount: '1000.00'
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
  Beneficiary:
    type: object
    description: Beneficiary.
    properties:
      id:
        type: string
        description: Beneficiary UUID.
      bank_account_holder_name:
        type: string
      name:
        type: string
      email:
        type: string
      payment_types:
        type: array
        items:
          type: string
          description: Example - "regular".
      beneficiary_address:
        type: array
        items:
          type: string
          description: Line of address.
      beneficiary_country:
        type: string
        description: Two-letter country code.
      beneficiary_entity_type:
        type: string
        enum:
          - company
          - individual
      beneficiary_company_name:
        type: string
        description: For companies.
      beneficiary_first_name:
        type: string
        description: For individuals.
      beneficiary_last_name:
        type: string
        description: For individuals.
      beneficiary_city:
        type: string
        description: City.
      beneficiary_postcode:
        type: string
        description: Postal code.
      beneficiary_state_or_province:
        type: string
        description: State or province.
      beneficiary_date_of_birth:
        type: string
        description: 'For companies, this is the foundation date of the company.'
      beneficiary_identification_type:
        type: string
        description: A legal document that verifies the identity of the beneficiary.
      beneficiary_identification_value:
        type: string
        description: >-
          A unique reference code for the identification document, such as a
          passport number.
      bank_country:
        type: string
        description: >-
          Two-letter code for the country in which the beneficiary's bank
          account is held.
      bank_name:
        type: string
      bank_account_type:
        type: string
      currency:
        type: string
      account_number:
        type: string
      routing_code_type_1:
        type: string
      routing_code_value_1:
        type: string
      routing_code_type_2:
        type: string
      routing_code_value_2:
        type: string
      bic_swift:
        type: string
      iban:
        type: string
      default_beneficiary:
        type: string
      creator_contact_id:
        type: string
      bank_address:
        type: array
        items:
          type: string
          description: Line of address.
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      beneficiary_external_reference:
        type: string
    example:
      id: a6000ce9-46b8-49a7-9f5b-325ed3f047c2
      bank_account_holder_name: Company PLC
      name: Sample name
      email: ''
      payment_types:
        - regular
      beneficiary_address:
        - 1 My Road
        - London
      beneficiary_country: AU
      beneficiary_entity_type: company
      beneficiary_company_name: Sample Company Name
      beneficiary_first_name: ''
      beneficiary_last_name: ''
      beneficiary_city: ''
      beneficiary_postcode: ''
      beneficiary_state_or_province: ''
      beneficiary_date_of_birth: ''
      beneficiary_identification_type: none
      beneficiary_identification_value: ''
      bank_country: AU
      bank_name: Sample Bank Name
      bank_account_type: checking
      currency: AUD
      account_number: '123456783'
      routing_code_type_1: bsb_code
      routing_code_value_1: '123456'
      routing_code_type_2: ''
      routing_code_value_2: ''
      bic_swift: ''
      iban: ''
      default_beneficiary: 'false'
      creator_contact_id: 58e78791-e0e5-012c-2dee-001e52f3c730
      bank_address:
        - Line 1
        - Line 2
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
      beneficiary_external_reference: B-5847789
  BeneficiaryRequirements:
    type: object
    description: Beneficiary requirements.
    properties:
      payment_type:
        type: string
      acct_number:
        type: string
      bic_swift:
        type: string
      aba:
        type: string
      beneficiary_address:
        type: string
      beneficiary_city:
        type: string
      beneficiary_country:
        type: string
      beneficiary_postcode:
        type: string
      beneficiary_state_or_province:
        type: string
      beneficiary_first_name:
        type: string
      beneficiary_last_name:
        type: string
      beneficiary_entity_type:
        type: string
        enum:
          - company
          - individual
    example:
      payment_type: regular
      acct_number: '^\\d{1,17}$'
      aba: '^[0-9A-Z]{9}$'
      beneficiary_address: '^.{1,255}'
      beneficiary_city: '^.{1,255}'
      beneficiary_country: '^[A-z]{2}$'
      beneficiary_postcode: '^.{1,255}'
      beneficiary_state_or_province: '^.{1,255}'
      beneficiary_first_name: '^.{1,255}'
      beneficiary_last_name: '^.{1,255}'
      beneficiary_entity_type: individual
  Contact:
    type: object
    description: Contact.
    properties:
      login_id:
        type: string
      id:
        type: string
      your_reference:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      account_id:
        type: string
      account_name:
        type: string
      status:
        type: string
      phone_number:
        type: string
      mobile_phone_number:
        type: string
      locale:
        type: string
      timezone:
        type: string
      email_address:
        type: string
      date_of_birth:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    example:
      login_id: john.smith
      id: 543477161-91de-012f-e284-1e0030c7f352
      your_reference: ACME12345
      first_name: John
      last_name: Smith
      account_id: 87077161-91de-012f-e284-1e0030c7f352
      account_name: Company PLC
      status: enabled
      phone_number: 06554 87845
      mobile_phone_number: 07564 534 54
      locale: en-US
      timezone: Europe/London
      email_address: john.smith@company.com
      date_of_birth: 1980-01-22T00:00:00.000Z
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
  Conversion:
    type: object
    description: Conversion.
    properties:
      id:
        type: string
      account_id:
        type: string
      creator_contact_id:
        type: string
      short_reference:
        type: string
      settlement_date:
        type: string
      conversion_date:
        type: string
      status:
        type: string
      partner_status:
        type: string
      currency_pair:
        type: string
      buy_currency:
        type: string
      sell_currency:
        type: string
      fixed_side:
        type: string
      partner_buy_amount:
        type: string
      partner_sell_amount:
        type: string
      client_buy_amount:
        type: string
      client_sell_amount:
        type: string
      mid_market_rate:
        type: string
      core_rate:
        type: string
      partner_rate:
        type: string
      client_rate:
        type: string
      deposit_required:
        type: string
      deposit_amount:
        type: boolean
      deposit_currency:
        type: string
      deposit_status:
        type: string
      deposit_required_at:
        type: string
      unallocated_funds:
        type: string
      payment_ids:
        type: array
        items:
          type: string
      unique_request_id:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    example:
      id: c9b6b851-10f9-4bbf-881e-1d8a49adf7d8
      account_id: 0386e472-8d2b-45a8-9c14-a393dce5bf3a
      creator_contact_id: ac743762-5860-4b78-9c6a-82c5bca68867
      short_reference: 20140507-VRTNFC
      settlement_date: 2017-12-31T23:59:59.000Z
      conversion_date: 2017-12-31T23:59:59.000Z
      status: awaiting_funds
      partner_status: awaiting_funds
      currency_pair: GBPUSD
      buy_currency: GBP
      sell_currency: USD
      fixed_side: buy
      partner_buy_amount: '1000.00'
      partner_sell_amount: '1587.80'
      client_buy_amount: '1000.00'
      client_sell_amount: '1594.90'
      mid_market_rate: '1.5868'
      core_rate: '1.5871'
      partner_rate: '1.5878'
      client_rate: '1.5949'
      deposit_required: true
      deposit_amount: '47.85'
      deposit_currency: GBP
      deposit_status: awaiting_deposit
      deposit_required_at: 2017-12-31T23:59:59.000Z
      unallocated_funds: '1000.00'
      payment_ids:
        - b934794f-d810-4b4a-b360-5a0f47b7126e
      unique_request_id: 1234567890abc
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
  ConversionDates:
    type: object
    description: Conversion dates.
    properties:
      invalid_conversion_dates:
        type: object
        additionalProperties:
          type: string
          description: >-
            Maps dates (eg. "2017-12-31") to string values that explain why
            trading is not available on the date (eg. "No trading on Sunday").
      first_conversion_date:
        type: string
        format: date
        description: Example - "2017-12-31".
      default_conversion_date:
        type: string
        format: date
        description: Example - "2017-12-31".
    example:
      invalid_conversion_dates:
        '2013-04-18': Good Friday
        '2013-04-19': No trading on Saturday
        '2013-04-20': No trading on Sunday
        '2013-04-21': Easter Monday
        '2013-04-26': No trading on Saturday
        '2013-04-27': No trading on Sunday
        '2013-05-03': No trading on Saturday
        '2013-05-04': No trading on Sunday
        '2013-05-05': Early May Bank Holiday
        '2013-05-10': No trading on Saturday
        '2013-05-11': No trading on Sunday
        '2013-05-17': No trading on Saturday
        '2013-05-18': No trading on Sunday
        '2013-05-24': No trading on Saturday
        '2013-05-25': No trading on Sunday
        '2013-05-26': Spring Bank Holiday
        '2013-05-31': No trading on Saturday
        '2013-06-01': No trading on Sunday
        '2013-06-07': No trading on Saturday
        '2013-06-08': No trading on Sunday
        '2013-06-14': No trading on Saturday
      first_conversion_date: 2013-04-15T00:00:00.000Z
      default_conversion_date: 2013-04-17T00:00:00.000Z
  CreateAccountError:
    type: object
    description: >
      Client error information for the Create Account endpoint.


      **Error codes**


      ``account_name_is_too_short``

      - Category: ``account_name``

      - Message: "account_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``account_name_is_too_long``

      - Category: ``account_name``

      - Message: "account_name can not be longer than 150 character(s)"

      - Params: { "maxlength" => 150 }


      ``account_name_is_required``

      - Category: ``account_name``

      - Message: "account_name is required"


      ``brand_is_too_short``

      - Category: ``brand``

      - Message: "brand can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``brand_is_too_long``

      - Category: ``brand``

      - Message: "brand can not be longer than 100 character(s)"

      - Params: { "maxlength" => 255 }


      ``brand_not_found``

      - Category: ``brand``

      - Message: "Brand non_existing_brand wasn't found"

      - Params: { "brand" => "non_existing_brand" }


      ``brand_account_not_broker``

      - Category: ``brand``

      - Message: "Account doesn't have broker permissions"

      - Params: { "brand" => "wrong_brand" }


      ``your_reference_is_too_long``

      - Category: ``your_reference``

      - Message: "your_reference can not be longer than 25 character(s)"

      - Params: { "maxlength" => 25 }


      ``status_not_in_range``

      - Category: ``status``

      - Message: "status should be in range: enabled, disabled,
      enabled_no_trading"

      - Params: { "range" => "enabled, disabled, enabled_no_trading" }


      ``legal_entity_type_not_in_range``

      - Category: ``legal_entity_type``

      - Message: "legal_entity_type should be in range: individual, company"

      - Params: { "range" => "individual, company" }


      ``street_is_too_long``

      - Category: ``street``

      - Message: "street can not be longer than 150 character(s)"

      - Params: { "maxlength" => 150 }


      ``street_is_required``

      - Category: ``street``

      - Message: "Street is required"


      ``city_is_too_long``

      - Category: ``city``

      - Message: "city can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``city_is_required``

      - Category: ``city``

      - Message: "City is required"


      ``postal_code_is_too_long``

      - Category: ``postal_code``

      - Message: "postal_code can not be longer than 20 character(s)"

      - Params: { "maxlength" => 20 }


      ``postal_code_is_required``

      - Category: ``postal_code``

      - Message: "Postal code is required"


      ``country_is_too_long``

      - Category: ``country``

      - Message: "country can not be longer than 2 character(s)"

      - Params: { "maxlength" => 2 }


      ``country_is_required``

      - Category: ``country``

      - Message: "Country is required"


      ``spread_table_is_too_long``

      - Category: ``spread_table``

      - Message: "country can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``identification_type_is_missing``

      - Category: ``identification_type``

      - Message: "identification_type is missing"


      ``identification_type_is_invalid``

      - Category: ``identification_type``

      - Message: "identification_type is invalid"


      ``identification_value_is_missing``

      - Category: ``identification_value``

      - Message: "identification_value is missing"


      ``identification_value_is_invalid``

      - Category: ``identification_value``

      - Message: "identification_value is invalid"


      ``state_or_province_is_required``

      - Category: ``state_or_province``

      - Message: "State or province is required for US, CA and MX"


      ``invalid_extra_parameters``

      - Category: ``base``

      - Message: "Invalid extra parameters extra_parameter"

      - Params: { "parameters" => "extra_parameter" }
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateBeneficiaryError:
    type: object
    description: >
      Client error information for the Create Beneficiary endpoint.


      **Error codes**


      ``bank_account_holder_name_is_required``

      - Category: ``bank_account_holder_name``

      - Message: "bank_account_holder_name is required"


      ``bank_account_holder_name_is_too_short``

      - Category: ``bank_account_holder_name``

      - Message: "bank_account_holder_name can not be shorter than 1
      character(s)"

      - Params: { "minlength" => 1 }


      ``bank_account_holder_name_is_too_long``

      - Category: ``bank_account_holder_name``

      - Message: "bank_account_holder_name can not be longer than 255
      character(s)"

      - Params: { "maxlength" => 255 }


      ``email_is_too_short``

      - Category: ``email``

      - Message: "email can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``email_is_too_long``

      - Category: ``email``

      - Message: "email can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``beneficiary_address_is_too_short``

      - Category: ``beneficiary_address``

      - Message: "beneficiary_address can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``beneficiary_address_is_too_long``

      - Category: ``beneficiary_address``

      - Message: "beneficiary_address can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``beneficiary_address_is_missing``

      - Category: ``beneficiary_address``

      - Message: "Beneficiary address is missing"


      ``account_number_is_too_short``

      - Category: ``account_number``

      - Message: "account_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``account_number_is_too_long``

      - Category: ``account_number``

      - Message: "account_number can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``account_number_is_missing``

      - Category: ``account_number``

      - Message: "Account number is missing"


      ``account_number_is_invalid``

      - Category: ``account_number``

      - Message: "Account number is in invalid format"


      ``routing_code_value_1_is_too_short``

      - Category: ``routing_code_value_1``

      - Message: "routing_code_value_1 can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``routing_code_value_1_is_too_long``

      - Category: ``routing_code_value_1``

      - Message: "routing_code_value_1 can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``routing_code_value_2_is_too_short``

      - Category: ``routing_code_value_2``

      - Message: "routing_code_value_2 can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``routing_code_value_2_is_too_long``

      - Category: ``routing_code_value_2``

      - Message: "routing_code_value_2 can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``iban_is_too_short``

      - Category: ``iban``

      - Message: "iban can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``iban_is_too_long``

      - Category: ``iban``

      - Message: "iban can not be longer than 34 character(s)"

      - Params: { "maxlength" => 34 }


      ``iban_is_missing``

      - Category: ``iban``

      - Message: "IBAN is missing"


      ``iban_is_invalid``

      - Category: ``iban``

      - Message: "IBAN is in invalid format"


      ``bic_swift_is_too_short``

      - Category: ``bic_swift``

      - Message: "bic_swift can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bic_swift_is_too_long``

      - Category: ``bic_swift``

      - Message: "bic_swift can not be longer than 11 character(s)"

      - Params: { "maxlength" => 11 }


      ``bic_swift_is_missing``

      - Category: ``bic_swift``

      - Message: "BIC/SWIFT is missing"


      ``bic_swift_is_invalid``

      - Category: ``bic_swift``

      - Message: "BIC/SWIFT is in invalid format"


      ``bank_address_is_missing``

      - Category: ``bank_address``

      - Message: "Bank address is missing"


      ``bank_address_is_too_short``

      - Category: ``bank_address``

      - Message: "bank_address can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bank_address_is_too_long``

      - Category: ``bank_address``

      - Message: "bank_address can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``bank_name_is_too_short``

      - Category: ``bank_name``

      - Message: "bank_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bank_name_is_too_long``

      - Category: ``bank_name``

      - Message: "bank_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``bank_name_is_missing``

      - Category: ``bank_name``

      - Message: "Bank name is missing"


      ``bank_name_is_invalid``

      - Category: ``bank_name``

      - Message: "Bank name is in invalid format"


      ``bank_account_type_not_in_range``

      - Category: ``bank_account_type``

      - Message: "bank_account_type should be in range: checking, savings"

      - Params: { "range" => "checking, savings" }


      ``bank_account_type_is_missing``

      - Category: ``bank_account_type``

      - Message: "Beneficiary bank account type is missing"


      ``name_is_too_short``

      - Category: ``name``

      - Message: "name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``name_is_too_long``

      - Category: ``name``

      - Message: "name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``default_beneficiary_type_is_wrong``

      - Category: ``default_beneficiary``

      - Message: "default_beneficiary should be of boolean type"

      - Params: { "type" => "boolean" }


      ``routing_code_type_1_not_in_range``

      - Category: ``routing_code_type_1``

      - Message: "routing_code_type_1 should be in range: sort_code, bsb_code,
      institution_no, bank_code, branch_code, aba, clabe, cnaps"

      - Params: { "range" => "sort_code, bsb_code, institution_no, bank_code,
      branch_code, aba, clabe, cnaps" }


      ``routing_code_type_2_not_in_range``

      - Category: ``routing_code_type_2``

      - Message: "routing_code_type_2 should be in range: sort_code, bsb_code,
      institution_no, bank_code, branch_code, aba, clabe, cnaps"

      - Params: { "range => "sort_code, bsb_code, institution_no, bank_code,
      branch_code, aba, clabe, cnaps" }


      ``beneficiary_country_is_required``

      - Category: ``beneficiary_country is required``

      - Message: "beneficiary_country"


      ``beneficiary_country_is_in_invalid_format``

      - Category: ``beneficiary_country``

      - Message: "beneficiary_country is in invalid format"


      ``beneficiary_entity_type_not_in_range``

      - Category: ``beneficiary_entity_type``

      - Message: "beneficiary_entity_type should be in range: individual,
      company"

      - Params: { "range" => "individual, company" }


      ``beneficiary_entity_type_is_missing``

      - Category: ``beneficiary_entity_type``

      - Message: "Beneficiary entity type is missing"


      ``beneficiary_company_name_is_missing``

      - Category: ``beneficiary_company_name``

      - Message: "Beneficiary company name is missing"


      ``beneficiary_first_name_is_missing``

      - Category: ``beneficiary_first_name``

      - Message: "Beneficiary first name is missing"


      ``beneficiary_last_name_is_missing``

      - Category: ``beneficiary_last_name``

      - Message: "Beneficiary last name is missing"


      ``beneficiary_city_is_missing``

      - Category: ``beneficiary_city``

      - Message: "Beneficiary city is missing"


      ``beneficiary_state_or_province_is_missing``

      - Category: ``beneficiary_state_or_province``

      - Message: "Beneficiary state or province is missing"


      ``beneficiary_state_or_province_is_not_supported``

      - Category: ``beneficiary_state_or_province``

      - Message: "Beneficiary state or province is not supported"


      ``beneficiary_postcode_is_missing``

      - Category: ``beneficiary_postcode``

      - Message: "Beneficiary postcode is missing"


      ``beneficiary_date_of_birth_type_is_wrong``

      - Category: ``beneficiary_date_of_birth``

      - Message: "beneficiary_date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``identification_type_is_missing``

      - Category: ``beneficiary_identification_type``

      - Message: "identification_type is missing"


      ``identification_type_is_invalid``

      - Category: ``beneficiary_identification_type``

      - Message: "identification_type is invalid"


      ``identification_value_is_missing``

      - Category: ``beneficiary_identification_value``

      - Message: "identification_value is missing"


      ``identification_value_is_invalid``

      - Category: ``beneficiary_identification_value``

      - Message: "identification_value is invalid"


      ``bank_country_is_required``

      - Category: ``bank_country``

      - Message: "bank_country is required"


      ``bank_country_is_in_invalid_format``

      - Category: ``bank_country``

      - Message: "bank_country is in invalid format"


      ``bank_country_is_not_supported``

      - Category: ``bank_country``

      - Message: "bank_country is not supported"


      ``currency_is_required``

      - Category: ``currency``

      - Message: "currency is required"


      ``currency_is_in_invalid_format``

      - Category: ``currency``

      - Message: "currency is in invalid format"


      ``currency_code_is_invalid``

      - Category: ``currency``

      - Message: "You can not use this currency with beneficiaries"


      ``unique_value_parameters``

      - Category: ``base``

      - Message: "Following parameters should not have same values:
      routing_code_type_1, routing_code_type_2"

      - Params: { "parameters" => "routing_code_type_1, routing_code_type_2" }


      ``unsupported_beneficiary_country_code``

      - Category: ``base``

      - Message: "Beneficiary country is not supported"


      ``beneficiary_create_failed``

      - Category: ``beneficiary``

      - Message: "Beneficiary was not created"


      ``beneficiary_details_are_missing``

      - Category: ``beneficiary``

      - Message: "Following beneficiary details are missing:
      beneficiary_company_name"

      - Params: { "missing_details" => ["beneficiary_company_name"] }


      ``payment_types_not_in_range``

      - Category: ``payment_types``

      - Message: "payment_types should be in range: priority, regular"

      - Params: { "range" => "priority, regular" }


      ``sort_code_is_missing``

      - Category: ``routing_code``

      - Message: "Sort code is missing"


      ``sort_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Sort code is in invalid format"


      ``aba_is_missing``

      - Category: ``routing_code``

      - Message: "ABA is missing"


      ``aba_is_invalid``

      - Category: ``routing_code``

      - Message: "ABA is in invalid format"


      ``bsb_code_is_missing``

      - Category: ``routing_code``

      - Message: "BSB code is missing"


      ``bsb_code_is_invalid``

      - Category: ``routing_code``

      - Message: "BSB code is in invalid format"


      ``branch_code_is_missing``

      - Category: ``routing_code``

      - Message: "Branch code is missing"


      ``branch_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Branch code is in invalid format"


      ``institution_no_is_missing``

      - Category: ``routing_code``

      - Message: "Institution no is missing"


      ``institution_no_is_invalid``

      - Category: ``routing_code``

      - Message: "Institution no is in invalid format"


      ``bank_code_is_missing``

      - Category: ``routing_code``

      - Message: "Bank code is missing"


      ``bank_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Bank code is in invalid format"


      ``clabe_is_missing``

      - Category: ``routing_code``

      - Message: "CLABE is missing"


      ``clabe_is_invalid``

      - Category: ``CLABE is in invalid format``

      - Message: "routing_code"


      ``cnaps_is_missing``

      - Category: ``CNAPS number is missing``

      - Message: "routing_code"


      ``cnaps_is_invalid``

      - Category: ``routing_code``

      - Message: "CNAPS number is in invalid format"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateContactError:
    type: object
    description: >
      Client error information for the Create Contact endpoint.


      **Error codes**


      ``account_id_is_in_invalid_format``

      - Category: ``account_id``

      - Message: "account_id is in invalid format"


      ``first_name_is_too_short``

      - Category: ``first_name``

      - Message: "first_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``first_name_is_too_long``

      - Category: ``first_name``

      - Message: "first_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``last_name_is_too_short``

      - Category: ``last_name``

      - Message: "last_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``last_name_is_too_long``

      - Category: ``last_name``

      - Message: "last_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``email_address_is_too_short``

      - Category: ``email_address``

      - Message: "email_address can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``email_address_is_too_long``

      - Category: ``email_address``

      - Message: "email_address can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``email_address_is_in_invalid_format``

      - Category: ``email_address``

      - Message: "email_address is in invalid format"


      ``phone_number_is_too_short``

      - Category: ``phone_number``

      - Message: "phone_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``phone_number_is_too_long``

      - Category: ``phone_number``

      - Message: "phone_number can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``mobile_phone_number_is_too_short``

      - Category: ``mobile_phone_number``

      - Message: "mobile_phone_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``mobile_phone_number_is_too_long``

      - Category: ``mobile_phone_number``

      - Message: "mobile_phone_number can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``login_id_is_too_short``

      - Category: ``login_id``

      - Message: "login_id can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``login_id_in_use``

      - Category: ``login_id``

      - Message: "login_id already in use: 'john.smith@company.com'"


      ``login_id_is_too_long``

      - Category: ``login_id``

      - Message: "login_id can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``locale_is_too_short``

      - Category: ``locale``

      - Message: "locale can not be shorter than 2 character(s)"

      - Params: { "minlength" => 2 }


      ``locale_is_too_long``

      - Category: ``locale``

      - Message: "locale can not be longer than 5 character(s)"

      - Params: { "maxlength" => 5 }


      ``timezone_is_too_short``

      - Category: ``timezone``

      - Message: "timezone can not be shorter than 2 character(s)"

      - Params: { "minlength" => 2 }


      ``timezone_is_too_long``

      - Category: ``timezone``

      - Message: "timezone can not be longer than 5 character(s)"

      - Params: { "maxlength" => 5 }


      ``status_not_in_range``

      - Category: ``status``

      - Message: "status should be in range: enabled, not_enabled"


      ``date_of_birth_type_is_wrong``

      - Category: ``date_of_birth``

      - Message: "date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``date_of_birth_is_required``

      - Category: ``date_of_birth``

      - Message: "Date of Birth is a required field. Please provide date of
      birth (YYYY-MM-DD)"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateConversionError:
    type: object
    description: >
      Client error information for the Create Conversion endpoint.


      **Error codes**


      ``invalid_extra_parameters``

      - Category: ``base``

      - Message: "Invalid extra parameters"

      - Params: { "parameters" => { "extra_param" => "extra_value" } }


      ``buy_currency_is_in_invalid_format``

      - Category: ``buy_currency``

      - Message: "buy_currency is not a valid ISO 4217 currency code"

      - Params: { "type" => "currency" }


      ``buy_currency_is_required``

      - Category: ``buy_currency``

      - Message: "buy_currency is required"


      ``invalid_buy_currency``

      - Category: ``buy_currency``

      - Message: "buy_currency is invalid"


      ``sell_currency_is_required``

      - Category: ``sell_currency``

      - Message: "sell_currency is required"


      ``sell_currency_is_in_invalid_format``

      - Category: ``sell_currency``

      - Message: "sell_currency is not a valid ISO 4217 currency code"

      - Params: { "type" => "currency" }


      ``invalid_sell_currency``

      - Category: ``sell_currency``

      - Message: "sell_currency is invalid"


      ``amount_is_required``

      - Category: ``amount``

      - Message: "amount is required"


      ``conversion_above_limit``

      - Category: ``amount``

      - Message: "Conversion of GBP equivalent 30000.01 exceeds your limit of
      30000.00"

      - Params: { "amount" => "30000.01", "limit_amount" => "30000.00", "ccy" =>
      "GBP" }


      ``conversion_above_limit``

      - Category: ``amount``

      - Message: "Trading is not enabled as your upper api trading limit has not
      been set - please contact us to set this for you"

      - Params: { "channel" => "api" }


      ``conversion_above_limit``

      - Category: ``amount``

      - Message: "Sorry - you are currently only setup to trade up to 3 months
      forward, with a limit of 20000.00 GBP. Please contact us on the phone if
      you want to change this."

      - Params: { "months" => 3, "limit_amount" => "20000.00", "ccy" => "GBP" }


      ``conversion_above_limit``

      - Category: ``amount``

      - Message: "Sorry - your maximum trading limit up to 3 months forward is
      20000.00 GBP. Please contact us on the phone if you want to change this."

      - Params: { "months" => 3, "limit_amount" => "20000.00", "ccy" => "GBP",
      "amount" => "20000.01" }


      ``conversion_below_limit``

      - Category: ``amount``

      - Message: "Conversion of GBP equivalent 999.99 is less than your lower
      limit of 1000.00"

      - Params: { "amount" => "999.99", "limit_amount" => "1000.00", "ccy" =>
      "GBP" }


      ``conversion_below_limit``

      - Category: ``amount``

      - Message: "Trading is not enabled as your lower %{channel} trading limit
      has not been set - please contact us to set this for you."

      - Params: { "channel" => "api" }


      ``amount_type_is_wrong``

      - Category: ``amount``

      - Message: "amount should be of numeric type"

      - Params: { "type" => "numeric" }


      ``reason_is_required``

      - Category: ``reason``

      - Message: "reason is required"


      ``reason_is_too_short``

      - Category: ``reason``

      - Message: "reason can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``client_rate_is_in_invalid_format``

      - Category: ``client_rate``

      - Message: "client_rate should be of numeric type with 4 dp"

      - Params: { "type" => "numeric_with_precision", "precision" => 4 }


      ``invalid_client_rate``

      - Category: ``client_rate``

      - Message: "client_rate is invalid"

      - Params: { "client_rate" => "1.455543..1.778997" }


      ``client_rate_is_required``

      - Category: ``client_rate``

      - Message: "The client_rate is required if you supply currency_pair"


      ``fixed_side_is_required``

      - Category: ``fixed_side``

      - Message: "fixed_side is required"


      ``fixed_side_not_in_range``

      - Category: ``fixed_side``

      - Message: "fixed_side should be in range: buy, sell"

      - Params: { "range" => "buy, sell" }


      ``term_agreement_is_required``

      - Category: ``term_agreement``

      - Message: "term_agreement is required"


      ``term_agreement_type_is_wrong``

      - Category: ``term_agreement``

      - Message: "term_agreement should be of boolean type"

      - Params: { "type" => "boolean" }


      ``conversion_create_failed``

      - Category: ``conversion_create_failed``

      - Message: "Conversion create failed"


      ``currency_pair_is_in_invalid_format``

      - Category: ``currency_pair``

      - Message: "currency_pair is not a valid ISO 4217 currency code"

      - Params: { "type" => "currency_pair" }


      ``invalid_currency_pair``

      - Category: ``invalid_currency_pair``

      - Message: "The currency_pair should be the real market pair of the
      buy_currency and sell_currency"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"


      ``on_behalf_of_is_not_valid_uuid``

      - Category: ``on_behalf_of``

      - Message: "on_behalf_of should be in UUID format"


      ``on_behalf_of_is_required``

      - Category: ``on_behalf_of_is_required``

      - Message: "You should do this conversion on behalf of someone if you
      supply client_rate"


      ``currency_pair_is_required``

      - Category: ``currency_pair_is_required``

      - Message: "The currency_pair is required if you supply client_rate"


      ``client_rate_is_required``

      - Category: ``client_rate_is_required``

      - Message: "The client_rate is required if you supply currency_pair"


      ``variable_value_dates_not_permitted``

      - Category: ``variable_value_dates_not_permitted``

      - Message: "Sorry - you are not currently setup to trade with variable
      value dates, please contact us on the phone if you want to change this or
      wish to trade now on the phone."


      ``client_buy_amount_is_in_invalid_format``

      - Category: ``client_buy_amount``

      - Message: "client_buy_amount should be of numeric type with 2 dp"

      - Params: { "type" => "client_buy_amount" }


      ``client_sell_amount_is_in_invalid_format``

      - Category: ``client_sell_amount``

      - Message: "client_sell_amount should be of numeric type with 2 dp"

      - Params: { "type" => "client_sell_amount" }


      ``cannot_fix_client_sell_on_fixed_sell_side``

      - Category: ``cannot_fix_client_sell_on_fixed_sell_side``

      - Message: "You cannot specify a fixed client_sell_amount when the fixed
      side for a conversion is the sell side"

      - Params: { "type" => "client_sell_amount" }


      ``client_buy_amount_exceeds_partner_buy_amount``

      - Category: ``client_buy_amount_exceeds_partner_buy_amount``

      - Message: "The client buy amount specified is greater than the amount
      that you would be buying and is thus invalid"

      - Params: { "type" => "client_buy_amount" }


      ``partner_sell_amount_exceeds_client_sell_amount``

      - Category: ``partner_sell_amount_exceeds_client_sell_amount``

      - Message: "The client sell amount specified is less than the amount that
      you would be selling and is thus invalid"

      - Params: { "type" => "client_sell_amount" }


      ``missing_partner_spread_table_data``

      - Category: ``missing_partner_spread_table_data``

      - Message: "Sorry, the online partner pricing for the amount of the
      currency pair you are trying to trade has not been set up"


      ``missing_client_spread_table_data``

      - Category: ``missing_client_spread_table_data``

      - Message: "Sorry, the online client pricing for the amount of the
      currency pair you are trying to trade has not been set up"


      ``fixed_amounts_not_permitted_for_this_user``

      - Category: ``fixed_amounts_not_permitted_for_this_user``

      - Message: "You are not permitted to specify a fixed client_buy_amount or
      client_sell_amount for this customer"


      ``invalid_client_rate_combination``

      - Category: ``invalid_client_rate_combination``

      - Message: "You cannot specify a client rate and client currency pair
      alongside a client buy amount or client sell amount"


      ``duplicate_request``

      - Category: ``duplicate_request``

      - Message: "The unique_request_id provided for this conversion has already
      been used, please provide a new unique_request_id to successfully submit
      this conversion"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreatePaymentError:
    type: object
    description: >
      Client error information for the Create Payment endpoint.


      **Error codes**


      ``invalid_type``

      - Category: ``type``

      - Message: "Invalid Payment type"


      ``currency_length_is_invalid``

      - Category: ``currency``

      - Message: "currency should be 3 character(s) long"

      - Params: { "length" => 3 }


      ``currency_is_required``

      - Category: ``currency``

      - Message: "currency is required"


      ``invalid_currency``

      - Category: ``currency``

      - Message: "You cannot make payments with this currency"


      ``beneficiary_id_is_not_valid_uuid``

      - Category: ``beneficiary_id``

      - Message: "beneficiary_id should be in UUID format"


      ``beneficiary_id_is_required``

      - Category: ``beneficiary_id``

      - Message: "beneficiary_id is required"


      ``invalid_beneficiary_id``

      - Category: ``beneficiary_id``

      - Message: "Unknown beneficiary_id"


      ``payment_above_limit``

      - Category: ``amount``

      - Message: "3000.00 EUR exceeds the maximum amount of 2500.00 EUR for a
      local payment."

      - Params: { "amount" => 3000.0, "ccy" => "EUR", "limit" => 2500.0 }


      ``payer_entity_type_not_in_range``

      - Category: ``payer_entity_type``

      - Message: "payer_entity_type should be in range: individual, company"

      - Params: { "range" => "individual, company" }


      ``payer_entity_type_is_missing``

      - Category: ``payer_entity_type``

      - Message: "Payer entity type is missing"


      ``payer_company_name_is_missing``

      - Category: ``payer_company_name``

      - Message: "Payer company name is missing"


      ``payer_first_name_is_missing``

      - Category: ``payer_first_name``

      - Message: "Payer first name is missing"


      ``payer_last_name_is_missing``

      - Category: ``payer_last_name``

      - Message: "Payer last name is missing"


      ``payer_city_is_missing``

      - Category: ``payer_city``

      - Message: "Payer city is missing"


      ``unsupported_payer_country_code``

      - Category: ``payer_country_code``

      - Message: "Payer country is not supported"


      ``payer_state_or_province_is_missing``

      - Category: ``payer_state_or_province``

      - Message: "Payer state or province is missing"


      ``payer_postcode_is_missing``

      - Category: ``payer_postcode``

      - Message: "Payer postcode is missing"


      ``payer_date_of_birth_type_is_wrong``

      - Category: ``payer_date_of_birth``

      - Message: "payer_date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``identification_type_is_missing``

      - Category: ``payer_identification_type``

      - Message: "identification_type is missing"


      ``identification_type_is_invalid``

      - Category: ``payer_identification_type``

      - Message: "identification_type is invalid"


      ``identification_value_is_missing``

      - Category: ``payer_identification_value``

      - Message: "identification_value is missing"


      ``identification_value_is_invalid``

      - Category: ``payer_identification_value``

      - Message: "identification_value is invalid"


      ``invalid_conversion_id``

      - Category: ``conversion_id``

      - Message: "Conversion could not be found


      ``conversion_is_already_settled``

      - Category: ``conversion_id``

      - Message: "The conversion is already settled"


      ``payment_date_is_too_early``

      - Category: ``payment_date``

      - Message: "The payment date cannot be sooner than the conversion date"


      ``reference_is_too_long``

      - Category: ``reference``

      - Message: "reference can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"


      ``duplicate_request``

      - Category: ``duplicate_request``

      - Message: "The unique_request_id provided for this payment has already
      been used, please provide a new unique_request_id to successfully submit
      this payment"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateSettlementError:
    type: object
    description: |
      Client error information for the Create Settlement endpoint.

      **Error codes**

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateTransferError:
    type: object
    description: Client error information for the Create Transfer endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  DeleteBeneficiaryError:
    type: object
    description: |
      Client error information for the Delete Beneficiary endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``beneficiary_not_found``
      - Category: ``id``
      - Message: "Beneficiary was not found for this id"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  DeletePaymentError:
    type: object
    description: |
      Client error information for the Delete Payment endpoint.

      **Error codes**

      ``invalid_id``
      - Category: ``id``
      - Message: "ID has invalid format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``payment_not_found``
      - Category: ``id``
      - Message: "Payment was not found for this id"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  DeleteSettlementError:
    type: object
    description: |
      Client error information for the Delete Settlement endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"

      ``settlement_not_found``
      - Category: ``id``
      - Message: "Settlement was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindAccountsError:
    type: object
    description: >
      Client error information for the Find Accounts endpoint.


      **Error codes**


      ``account_name_is_too_short``

      - Category: ``account_name``

      - Message: "account_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``account_name_is_too_long``

      - Category: ``account_name``

      - Message: "account_name can not be longer than 150 character(s)"

      - Params: { "maxlength" => 255 }


      ``brand_is_too_short``

      - Category: ``brand``

      - Message: "brand can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``brand_is_too_long``

      - Category: ``brand``

      - Message: "brand can not be longer than 100 character(s)"

      - Params: { "maxlength" => 255 }


      ``your_reference_is_too_short``

      - Category: ``your_reference``

      - Message: "your_reference can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``your_reference_is_too_long``

      - Category: ``your_reference``

      - Message: "your_reference can not be longer than 25 character(s)"

      - Params: { "maxlength" => 25 }


      ``status_not_in_range``

      - Category: ``status``

      - Message: "status should be in range: enabled, disabled,
      enabled_no_trading"

      - Params: { "range" => "enabled, disabled, enabled_no_trading" }


      ``legal_entity_type_not_in_range``

      - Category: ``legal_entity_type``

      - Message: "legal_entity_type should be in range: individual, company"

      - Params: { "range" => "individual, company" }


      ``street_is_too_long``

      - Category: ``street``

      - Message: "street can not be longer than 150 character(s)"

      - Params: { "maxlength" => 150 }


      ``city_is_too_long``

      - Category: ``city``

      - Message: "city can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``postal_code_is_too_long``

      - Category: ``postal_code``

      - Message: "postal_code can not be longer than 20 character(s)"

      - Params: { "maxlength" => 20 }


      ``country_is_too_long``

      - Category: ``country``

      - Message: "country can not be longer than 2 character(s)"

      - Params: { "maxlength" => 2 }


      ``spread_table_is_too_short``

      - Category: ``spread_table``

      - Message: "country can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``spread_table_is_too_long``

      - Category: ``spread_table``

      - Message: "country can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindBalancesError:
    type: object
    description: |
      Client error information for the Find Balances endpoint.

      **Error codes**

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindBeneficiariesError:
    type: object
    description: >
      Client error information for the Find Beneficiaries endpoint.


      **Error codes**


      ``bank_account_holder_name_is_too_short``

      - Category: ``bank_account_holder_name``

      - Message: "bank_account_holder_name can not be shorter than 1
      character(s)"

      - Params: { "minlength" => 1 }


      ``bank_account_holder_name_is_too_long``

      - Category: ``bank_account_holder_name``

      - Message: "bank_account_holder_name can not be longer than 255
      character(s)"

      - Params: { "maxlength" => 255 }


      ``beneficiary_country_is_in_invalid_format``

      - Category: ``beneficiary_country``

      - Message: "beneficiary_country is in invalid format"


      ``currency_is_in_invalid_format``

      - Category: ``currency``

      - Message: "currency is in invalid format"


      ``bank_name_is_too_short``

      - Category: ``bank_name``

      - Message: "bank_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bank_name_is_too_long``

      - Category: ``bank_name``

      - Message: "bank_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``bank_account_type_not_in_range``

      - Category: ``bank_account_type``

      - Message: "bank_account_type should be in range: checking, savings"

      - Params: { "range" => "checking, savings" }


      ``account_number_is_too_short``

      - Category: ``account_number``

      - Message: "account_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``account_number_is_too_long``

      - Category: ``account_number``

      - Message: "account_number can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``incorrect_mapping``

      - Category: ``base``

      - Message: "Following parameters must have same keys"

      - Params: { "parameters" => "routing_code_value,routing_code_type" }


      ``routing_code_type_is_too_short``

      - Category: ``routing_code_type``

      - Message: "routing_code_type can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1, "indices" => ["0", "1"] }


      ``routing_code_type_is_too_long``

      - Category: ``routing_code_type``

      - Message: "routing_code_type can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50, "indices" => ["0", "1"] }


      ``routing_code_type_type_is_wrong``

      - Category: ``routing_code_type``

      - Message: "routing_code_type should be of hash type"

      - Params: { "type" => "hash" }


      ``routing_code_type_not_included_in_list``

      - Category: ``routing_code_type``

      - Message: "One or more of routing_code_type items are not included in
      list"

      - Params: { "list" =>
      "sort_code,bsb_code,institution_no,bank_code,branch_code,aba,clabe }


      ``routing_code_type_too_many_items``

      - Category: ``routing_code_type``

      - Message: "routing_code_type should have less than 50 items"

      - Params: { "maxcount" => 50 }


      ``beneficiary_date_of_birth_type_is_wrong``

      - Category: ``beneficiary_date_of_birth``

      - Message: "beneficiary_date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``routing_code_value_is_too_short``

      - Category: ``routing_code_value``

      - Message: "routing_code_value can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1, "indices" => ["0", "1"] }


      ``routing_code_value_is_too_long``

      - Category: ``routing_code_value``

      - Message: "routing_code_value can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50, "indices" => ["0", "1"] }


      ``routing_code_value_type_is_wrong``

      - Category: ``routing_code_value``

      - Message: "routing_code_value should be of hash type"

      - Params: { "type" => "hash" }


      ``routing_code_type_too_many_items``

      - Category: ``routing_code_value``

      - Message: "routing_code_type should have less than 50 items"

      - Params: { "maxcount" => 50 }


      ``bic_swift_is_in_invalid_format``

      - Category: ``bic_swift``

      - Message: "bic_swift is in invalid format"


      ``iban_is_too_long``

      - Category: ``iban``

      - Message: "iban can not be longer than 34 character(s)"

      - Params: { "maxlength" => 34 }


      ``iban_is_too_short``

      - Category: ``iban``

      - Message: "iban can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``default_beneficiary_type_is_wrong``

      - Category: ``default_beneficiary``

      - Message: "default_beneficiary should be of boolean type"

      - Params: { "type" => "boolean" }


      ``name_is_too_short``

      - Category: ``name``

      - Message: "name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``name_is_too_long``

      - Category: ``name``

      - Message: "name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``order_asc_desc_not_in_range``

      - Category: ``order_asc_desc``

      - Message: "order_asc_desc should be in range: asc, desc"

      - Params: { "range" => "asc, desc" }


      ``order_not_in_range``

      - Category: ``order``

      - Message: "order should be in range: bank_account_holder_name,
      beneficiary_country, currency, account_number, bic_swift, iban,
      default_beneficiary, bank_address, name, created_at"

      - Params: { "range" => "order should be in range:
      bank_account_holder_name, beneficiary_country, currency, account_number,
      bic_swift, iban, default_beneficiary, bank_address, name, created_at" }


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindContactsError:
    type: object
    description: |
      Client error information for the Find Contacts endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindConversionsError:
    type: object
    description: |
      Client error information for the Find Conversions endpoint.

      **Error codes**

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindPaymentsError:
    type: object
    description: |
      Client error information for the Get Payments endpoint.

      **Error codes**

      ``invalid_currency``
      - Category: ``id``
      - Message: "currency has invalid format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindSettlementsError:
    type: object
    description: |
      Client error information for the Find Settlements endpoint.

      **Error codes**

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindTransactionsError:
    type: object
    description: |
      Client error information for the Find Transactions endpoint.

      **Error codes**

      ``transaction_not_found``
      - Category: ``id``
      - Message: "No Transaction found for 21b552e0-d97c-612d-2335-34203ab3f267"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindTransfersError:
    type: object
    description: |
      Client error information for the Find Transfers endpoint.

      **Error codes**

      ``source_account_id_is_not_valid_uuid``
      - Category: ``source_account_id``
      - Message: "source_account_id should be in UUID format"

      ``destination_account_id_is_not_valid_uuid``
      - Category: ``destination_account_id``
      - Message: "destination_account_id should be in UUID format"

      ``amount_from_type_is_wrong``
      - Category: ``amount_from``
      - Message: "amount_from should be of numeric type"
      - Params: { "type" => "numeric" }

      ``amount_to_type_is_wrong``
      - Category: ``amount_to``
      - Message: "amount_to should be of numeric type"
      - Params: { "type" => "numeric" }

      ``status_not_in_range``
      - Category: ``status``
      - Message: "status should be in range: pending, completed"
      - Params: { "range" => "pending, completed" }

      ``created_at_from_is_in_invalid_format``
      - Category: ``created_at_from``
      - Message: "created_at_from should be in ISO 8601 format"
      - Params: { "type" => "datetime" }

      ``created_at_to_is_in_invalid_format``
      - Category: ``created_at_to``
      - Message: "created_at_to should be in ISO 8601 format"
      - Params: { "type" => "datetime" }

      ``updated_at_from_is_in_invalid_format``
      - Category: ``updated_at_from``
      - Message: "updated_at_from should be in ISO 8601 format"
      - Params: { "type" => "datetime" }

      ``updated_at_to_is_in_invalid_format``
      - Category: ``updated_at_to``
      - Message: "updated_at_to should be in ISO 8601 format"
      - Params: { "type" => "datetime" }

      ``completed_at_from_is_in_invalid_format``
      - Category: ``completed_at_from``
      - Message: "completed_at_from should be in ISO 8601 format"
      - Params: { "type" => "datetime" }

      ``completed_at_to_is_in_invalid_format``
      - Category: ``completed_at_to``
      - Message: "completed_at_to should be in ISO 8601 format"
      - Params: { "type" => "datetime }

      ``creator_contact_id_is_not_valid_uuid``
      - Category: ``creator_contact_id``
      - Message: "creator_contact_id should be in UUID format"

      ``creator_account_id_is_not_valid_uuid``
      - Category: ``creator_account_id``
      - Message: "creator_account_id should be in UUID format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetAccountError:
    type: object
    description: |
      Client error information for the Get Account endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``account_not_found``
      - Category: ``id``
      - Message: "Account was not found for this id"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetAuthenticatingAccountError:
    type: object
    description: |
      Client error information for the Get Authenticating Account endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetAvailableCurrenciesError:
    type: object
    description: |
      Client error information for the Get Available Currencies endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBalanceError:
    type: object
    description: |
      Client error information for the Get Balance endpoint.

      **Error codes**

      ``invalid_currency``
      - Category: ``currency``
      - Message: "XYZ is not a valid ISO 4217 currency code"

      ``currency_is_in_invalid_format``
      - Category: ``currency``
      - Message: "currency is not a valid ISO 4217 currency code"
      - Params: { "type" => "currency" }

      ``on_behalf_of_is_not_valid_uuid``
      - Category: ``on_behalf_of``
      - Message: "on_behalf_of should be in UUID format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"

      ``unsupported_currency``
      - Category: ``currency``
      - Message: "Unsupported currency XYZ"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBasicRatesError:
    type: object
    description: |
      Client error information for the Get Basic Rates endpoint.

      **Error codes**

      ``currency_pair_is_too_short``
      - Category: ``currency_pair``
      - Message: "currency_pair can not be shorter than 6 letter(s)"
      - Params: { "minlength" => 6 }

      ``currency_pair_is_required``
      - Category: ``currency_pair``
      - Message: "currency_pair is required"

      ``invalid_currency_pair``
      - Category: ``currency_pair``
      - Message: "Invalid currency pair"
      - Params: { "currency_pair" => ["AAABBB"] }

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBeneficiaryError:
    type: object
    description: |
      Client error information for the Get Beneficiary endpoint.

      **Error codes**

      ``beneficiary_not_found``
      - Category: ``id``
      - Message: "Beneficiary was not found for this id"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBeneficiaryRequirementsError:
    type: object
    description: >
      Client error information for the Get Beneficiary Requirements endpoint.


      **Error codes**


      ``bank_account_country_is_in_invalid_format``

      - Category: ``bank_account_country``

      - Message: "Bank account country is not a valid ISO 3166-1 Alpha-2 country
      code"


      ``currency_is_in_invalid_format``

      - Category: ``currency``

      - Message: "Currency is not a valid ISO 4217 currency code"


      ``beneficiary_country_is_in_invalid_format``

      - Category: ``beneficiary_country``

      - Message: "Beneficiary country is not a valid ISO 3166-1 Alpha-2 country
      code"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetContactError:
    type: object
    description: |
      Client error information for the Get Contact endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``contact_not_found``
      - Category: ``id``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetConversionDatesError:
    type: object
    description: |
      Client error information for the Get Conversion Dates endpoint.

      **Error codes**

      ``conversion_pair_is_required``
      - Category: ``conversion_pair``
      - Message: "conversion_pair is required"

      ``invalid_conversion_pair``
      - Category: ``conversion_pair``
      - Message: "The conversion pair specified was invalid"

      ``conversion_pair_is_too_short``
      - Category: ``conversion_pair``
      - Message: "conversion_pair can not be shorter than 6 character(s)"
      - Params: { "minlength" => 6 }

      ``conversion_pair_is_too_long``
      - Category: ``conversion_pair``
      - Message: "conversion_pair can not be longer than 6 character(s)"
      - Params: { "maxlength" => 6 }

      ``start_date_is_too_far_in_future``
      - Category: ``start_date``
      - Message: "Date is too far in the future (more than 1 year)"
      - Params: { "maxdate" => "2015-04-04T00:00:00Z", "period" => "1 year" }

      ``start_date_is_in_invalid_format``
      - Category: ``start_date``
      - Message: "start_date should be in ISO 8601 format"
      - Params: { "type" => "date" }

      ``start_date_is_too_far_in_future``
      - Category: ``start_date``
      - Message: "Date is too far in the future (more than 1 year)"
      - Params: { "maxdate" => "2015-04-04T00:00:00Z", "period" => "1 year" }
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetConversionError:
    type: object
    description: |
      Client error information for the Get Conversion endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetDetailedRatesError:
    type: object
    description: >
      Client error information for the Get Detailed Rates endpoint.


      **Error codes**


      ``unique_value_parameters``

      - Category: ``base``

      - Message: "Following parameters should not have same values:
      sell_currency, buy_currency"

      - Params: { "parameters" => "sell_currency, buy_currency" }


      ``rate_could_not_be_retrieved``

      - Category: ``base``

      - Message: "Rate could not be retrieved"


      ``ccy_pair_is_not_tradeable``

      - Category: ``base``

      - Message: "Given currency pair is not tradeable"


      ``fixed_side_not_in_range``

      - Category: ``fixed_side``

      - Message: "fixed_side should be in range: sell, buy"

      - Params: { "range" => "sell, buy" }


      ``fixed_side_is_required``

      - Category: ``fixed_side``

      - Message: "fixed_side is required"


      ``conversion_date_type_is_wrong``

      - Category: ``conversion_date``

      - Message: "conversion_date should be of date type"

      - Params: { "type" => "date" }


      ``invalid_delivery_date``

      - Category: ``conversion_date``

      - Message: "The delivery date you have requested cannot be met for this
      currency pair"


      ``sell_currency_is_in_invalid_format``

      - Category: ``sell_currency``

      - Message: "sell_currency is in invalid format"


      ``sell_currency_is_required``

      - Category: ``sell_currency``

      - Message: "sell_currency is required"


      ``amount_type_is_wrong``

      - Category: ``amount``

      - Message: "amount should be of numeric type"

      - Params: { "type" => "numeric" }


      ``amount_is_required``

      - Category: ``amount``

      - Message: "amount is required"


      ``amount_is_too_small``

      - Category: ``amount``

      - Message: "amount can not be smaller than 1"

      - Params: { "minvalue" => 1 }


      ``buy_currency_is_in_invalid_format``

      - Category: ``buy_currency``

      - Message: "buy_currency is in invalid format"


      ``buy_currency_is_required``

      - Category: ``buy_currency``

      - Message: "buy_currency is required"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetIBANsError:
    type: object
    description: |
      Client error information for the Get IBANs endpoint.

      **Error codes**

      ``ibans_not_found``
      - Category: ``base``
      - Message: "IBANs were not found"

      ``iban_not_found_for_currency``
      - Category: ``base``
      - Message: "IBAN was not found for the selected currency"

      ``currency_is_in_invalid_format``
      - Category: ``currency``
      - Message: "currency is not a valid ISO 4217 currency code"
      - Params: { "type" => "currency" }

      ``currency_is_not_supported``
      - Category: ``currency``
      - Message: "currency is not supported"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetIBANsForSubAccountsError:
    type: object
    description: |
      Client error information for the Get IBANs for Sub-Accounts endpoint.

      **Error codes**

      ``ibans_not_found``
      - Category: ``base``
      - Message: "IBANs were not found"

      ``currency_is_in_invalid_format``
      - Category: ``currency``
      - Message: "currency is not a valid ISO 4217 currency code"
      - Params: { "type" => "currency" }

      ``currency_is_not_supported``
      - Category: ``currency``
      - Message: "currency is not supported"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetIBANsForSubAccountError:
    type: object
    description: |
      Client error information for the Get IBANs for Sub-Account endpoint.

      **Error codes**

      ``ibans_not_found``
      - Category: ``base``
      - Message: "IBANs were not found"

      ``account_not_found``
      - Category: ``base``
      - Message: "Account was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPayerError:
    type: object
    description: |
      Client error information for the Get Payer endpoint.

      **Error codes**

      ``payer_not_found``
      - Category: ``id``
      - Message: "Payer was not found for this id"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPayerRequirementsError:
    type: object
    description: |
      Client error information for the Get Payer Requirements endpoint.

      **Error codes**

      ``payer_country_is_required``
      - Category: ``payer_country``
      - Message: "payer_country is required"

      ``payer_country_is_in_invalid_format``
      - Category: ``payer_country``
      - Message: "payer_country is not a valid ISO 3166-1 Alpha-2 country code"
      - Params: { "type" => "country_code" }

      ``payment_type_not_in_range``
      - Category: ``payment_type``
      - Message: "payment_type should be in range: priority, regular"
      - Params: { "range" => "priority, regular" }

      ``payer_entity_type_not_in_range``
      - Category: ``payer_entity_type``
      - Message: "payer_entity_type should be in range: company, individual"
      - Params: { "range" => "company, individual" }
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentDatesError:
    type: object
    description: |
      Client error information for the Get Payment Dates endpoint.

      **Error codes**

      ``currency_is_required``
      - Category: ``currency``
      - Message: "currency is required"

      ``invalid_currency``
      - Category: ``currency``
      - Message: "The currency specified was invalid"

      ``currency_is_too_short``
      - Category: ``currency``
      - Message: "currency can not be shorter than 3 character(s)"
      - Params: { "minlength" => 3 }

      ``currency_is_too_long``
      - Category: ``currency``
      - Message: "currency can not be longer than 3 character(s)"
      - Params: { "maxlength" => 3 }

      ``start_date_is_too_far_in_future``
      - Category: ``start_date``
      - Message: "Date is too far in the future (more than 1 year)"
      - Params: { "maxdate" => "2015-04-04T00:00:00Z", "period" => "1 year" }

      ``start_date_is_in_invalid_format``
      - Category: ``start_date``
      - Message: "start_date should be in ISO 8601 format"
      - Params: { "type" => "date" }
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentError:
    type: object
    description: |
      Client error information for the Get Payment endpoint.

      **Error codes**

      ``invalid_id``
      - Category: ``id``
      - Message: "ID has invalid format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``payment_not_found``
      - Category: ``id``
      - Message: "Payment was not found for this id"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentSubmissionError:
    type: object
    description: |
      Client error information for the Get Payment Submission endpoint.

      **Error codes**

      ``invalid_id``
      - Category: ``id``
      - Message: "ID has invalid format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``payment_not_found``
      - Category: ``id``
      - Message: "Payment was not found for this id"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetSettlementAccountsError:
    type: object
    description: |
      Client error information for the Get Settlement Accounts endpoint.

      **Error codes**

      ``account_not_found``
      - Category: ``id``
      - Message: "Account was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetSettlementError:
    type: object
    description: |
      Client error information for the Get Settlement endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"

      ``settlement_not_found``
      - Category: ``id``
      - Message: "Settlement was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetTransactionError:
    type: object
    description: |
      Client error information for the Get Transaction endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetTransferError:
    type: object
    description: |
      Client error information for the Get Transfer endpoint.

      **Error codes**

      ``id_is_not_valid_uuid``
      - Category: ``id``
      - Message: "id should be in UUID format"

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``transfer_not_found``
      - Category: ``id``
      - Message: "Transfer was not found for this ID"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetVANsError:
    type: object
    description: |
      Client error information for the Get VANs endpoint.

      **Error codes**

      ``vans_not_found``
      - Category: ``base``
      - Message: "VANs were not found"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetVANsForSubAccountsError:
    type: object
    description: |
      Client error information for the Get VANs for Sub-Accounts endpoint.

      **Error codes**

      ``vans_not_found``
      - Category: ``base``
      - Message: "VANs were not found"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetVANsForSubAccountError:
    type: object
    description: |
      Client error information for the Get VANs for Sub-Account endpoint.

      **Error codes**

      ``vans_not_found``
      - Category: ``base``
      - Message: "VANs were not found"

      ``account_not_found``
      - Category: ``base``
      - Message: "Account was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  IBAN:
    type: object
    description: IBAN.
    properties:
      uuid:
        type: string
      iban_code:
        type: string
      account_id:
        type: string
      currency:
        type: string
      account_holder_name:
        type: string
      bank_institution_name:
        type: string
      bank_institution_address:
        type: string
      bank_institution_country:
        type: string
      bic_swift:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    example:
      uuid: 01d8c0bc-7f0c-4cdd-bc7e-ef81f68500fe
      iban_code: GB51TCCL00997997989489
      account_id: 87077161-91de-012f-e284-1e0030c7f352
      currency: EUR
      account_holder_name: Account-IGGLNHYTWFKI
      bank_institution_name: The Currency Cloud
      bank_institution_address: '12 Steward Street, The Steward Building, London, E1 6FQ, GB'
      bank_institution_country: United Kingdom
      bic_swift: TCCLGB31
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
  LoginError:
    type: object
    description: |
      Login error.

      **Error codes**

      ``login_id_is_required``
      - Category:  ``login_id``
      - Message: "login_id is required"

      ``login_id_is_too_short``
      - Category: ``login_id``
      - Message: "login_id can not be shorter than 1 character(s)"
      - Params: { "minlength" => 1 }

      ``login_id_is_too_long``
      - Category: ``login_id``
      - Message: "login_id can not be longer than 255 character(s)"
      - Params: { "maxlength" => 255 }

      ``api_key_is_required``
      - Category: ``api_key``
      - Message: "api_key is required"

      ``api_key_length_is_invalid``
      - Category: ``api_key``
      - Message: "api_key should be 64 character(s) long"
      - Params: { "length" => 64 }
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
    example:
      error_code: auth_invalid_user_login_details
      error_messages:
        api_key:
          - code: api_key_length_is_invalid
            message: api_key should be 64 character(s) long
            params:
              length: 64
  NotFoundError:
    type: object
    description: Resource not found.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  Pagination:
    type: object
    description: Pagination.
    properties:
      total_entries:
        type: integer
      total_pages:
        type: integer
      current_page:
        type: integer
      per_page:
        type: integer
        description: Number of results per page.
      previous_page:
        type: integer
      next_page:
        type: integer
      order:
        type: string
        description: The field name by which the results are sorted.
      order_asc_desc:
        type: string
        enum:
          - asc
          - desc
        default: asc
        description: Whether results are sorted in ascending or descending order.
    example:
      total_entries: 1
      total_pages: 1
      current_page: 1
      per_page: 25
      previous_page: -1
      next_page: 2
      order: created_at
      order_asc_desc: asc
  Payer:
    type: object
    description: Payer.
    properties:
      id:
        type: string
      legal_entity_type:
        type: string
      company_name:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      address:
        type: array
        items:
          type: string
          description: Line of address.
      city:
        type: string
      state_or_province:
        type: string
      country:
        type: string
      identification_type:
        type: string
        description: A legal document that verifies the identity of the payer.
      identification_value:
        type: string
        description: >-
          A unique reference code for the identification document, such as a
          passport number.
      postcode:
        type: string
      date_of_birth:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    example:
      id: 543477161-91de-012f-e284-1e0030c7f3123
      legal_entity_type: company
      company_name: Acme Corporation
      first_name: ''
      last_name: ''
      address:
        - 164 Bishopsgate
        - London
      city: London
      state_or_province: ''
      country: GB
      identification_type: incorporation_number
      identification_value: 123123
      postcode: EC2M 4LX
      date_of_birth: 2017-12-31T23:59:59.000Z
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
  PayerRequirements:
    type: object
    description: Payer requirements.
    properties:
      payer_entity_type:
        type: string
      payment_type:
        type: string
      required_fields:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            validation_rule:
              type: string
    example:
      payer_entity_type: company
      payment_type: priority
      required_fields:
        - name: payer_country
          validation_rule: '^[A-z]{2}$'
        - name: payer_city
          validation_rule: '^.{1,255}'
        - name: payer_address
          validation_rule: '^.{1,255}'
        - name: payer_postcode
          validation_rule: '^.{1,255}'
        - name: payer_company_name
          validation_rule: '^.{1,255}'
  Payment:
    type: object
    description: Payment.
    properties:
      id:
        type: string
      short_reference:
        type: string
      beneficiary_id:
        type: string
      conversion_id:
        type: string
      amount:
        type: string
      currency:
        type: string
      status:
        type: string
      payment_type:
        type: string
      reference:
        type: string
      reason:
        type: string
      payment_date:
        type: string
      transferred_at:
        type: string
      authorisation_steps_required:
        type: string
      creator_contact_id:
        type: string
      last_updater_contact_id:
        type: string
      failure_reason:
        type: string
      payer_id:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      payment_group_id:
        type: string
      unique_request_id:
        type: string
      failure_returned_amount:
        type: string
      ultimate_beneficiary_name:
        type: string
    example:
      id: 543477161-91de-012f-e284-1e0030c7f3123
      short_reference: 140416-GGJBNQ001
      beneficiary_id: 543477161-91de-012f-e284-1e0030c7f352
      conversion_id: 049bab6d-fe2a-42e1-be0f-531c59f838ea
      amount: '1250000.00'
      currency: GBP
      status: ready_to_send
      payment_type: regular
      reference: INVOICE 9876
      reason: Salary for March
      payment_date: 2017-12-31T23:59:59.000Z
      transferred_at: 2017-12-31T23:59:59.000Z
      authorisation_steps_required: '0'
      creator_contact_id: ab3477161-91de-012f-e284-1e0030c7f35c
      last_updater_contact_id: ab3477161-91de-012f-e284-1e0030c7f35c
      failure_reason: ''
      payer_id: ''
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
      payment_group_id: 20140428-CJRRJM
      unique_request_id: 1234567890abc
      failure_returned_amount: ''
      ultimate_beneficiary_name: Some beneficiary name
  PaymentDates:
    type: object
    description: Payment dates.
    properties:
      invalid_payment_dates:
        type: object
        additionalProperties:
          type: string
          description: >-
            Maps dates (eg. "2017-12-31") to string values that explains why
            payments cannot be made on this date (eg. "No trading on Sunday").
      first_payment_date:
        type: string
    example:
      invalid_payment_dates:
        '2013-04-18': Good Friday
        '2013-04-19': No trading on Saturday
        '2013-04-20': No trading on Sunday
        '2013-04-21': Easter Monday
        '2013-04-26': No trading on Saturday
        '2013-04-27': No trading on Sunday
        '2013-05-03': No trading on Saturday
        '2013-05-04': No trading on Sunday
        '2013-05-05': Early May Bank Holiday
        '2013-05-10': No trading on Saturday
        '2013-05-11': No trading on Sunday
        '2013-05-17': No trading on Saturday
        '2013-05-18': No trading on Sunday
        '2013-05-24': No trading on Saturday
        '2013-05-25': No trading on Sunday
        '2013-05-26': Spring Bank Holiday
        '2013-05-31': No trading on Saturday
        '2013-06-01': No trading on Sunday
        '2013-06-07': No trading on Saturday
        '2013-06-08': No trading on Sunday
        '2013-06-14': No trading on Saturday
      first_payment_date: 2013-04-15T00:00:00.000Z
  PaymentSubmission:
    type: object
    description: Payment submission.
    properties:
      mt103:
        type: string
      status:
        type: string
      submission_ref:
        type: string
    example:
      mt103: >-
        {1:F01TCCLGB20AXXX0090000004}{2:I103BARCGB22XXXXN}{4:
        :20:20160617-ZSYWVY :23B:CRED :32A:160617GBP3000,0 :33B:GBP3000,0
        :50K:/150618-00026 PCOMAPNY address New-York Province 555222 GB
        :53B:/20060513071472 :57C://SC200605 :59:/200605000 First Name Last Name
        e03036bf6c325dd12c58 London GB :70:test reference Test reason Payment
        group: 0160617-ZSYWVY :71A:SHA -}
      status: pending
      submission_ref: MXGGYAGJULIIQKDV
  RatesBasic:
    properties:
      rates:
        type: object
        description: >-
          Maps currency pairs (eg. "EURUSD", "GBPZAR") to rates. The first
          number is the bid amount, and the second is the rate currently offered
          by Currencycloud.
        additionalProperties:
          type: array
          items:
            type: string
            description: >-
              A list of currency pairs that are not currently available for
              exchange via the Currencycloud platform.
        example:
          EURUSD:
            - '1.3803'
            - '1.3809'
          GBPZAR:
            - '17.5271'
            - '17.5279'
  RateDetailed:
    type: object
    description: Detailed rate information.
    properties:
      settlement_cut_off_time:
        type: string
      currency_pair:
        type: string
      client_buy_currency:
        type: string
      client_sell_currency:
        type: string
      client_buy_amount:
        type: string
      client_sell_amount:
        type: string
      fixed_side:
        type: string
      mid_market_rate:
        type: string
      core_rate:
        type: string
      partner_rate:
        type: string
      client_rate:
        type: string
      deposit_required:
        type: string
      deposit_amount:
        type: string
      deposit_currency:
        type: string
    example:
      settlement_cut_off_time: 2017-12-31T23:59:59.000Z
      currency_pair: GBPUSD
      client_buy_currency: GBP
      client_sell_currency: USD
      client_buy_amount: '1000.00'
      client_sell_amount: '1594.90'
      fixed_side: buy
      mid_market_rate: '1.5868'
      core_rate: '1.587'
      partner_rate: '1.5878'
      client_rate: '1.5949'
      deposit_required: 'true'
      deposit_amount: '316.96'
      deposit_currency: USD
  RateLimitError:
    type: object
    description: Too many requests.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: A unique code that identifies this validation/error.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  ReleaseSettlementError:
    type: object
    description: |
      Client error information for the Release Settlement endpoint.

      **Error codes**

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  RemoveConversionFromSettlementError:
    type: object
    description: >
      Client error information for the Remove Conversion from Settlement
      endpoint.


      **Error codes**


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  Settlement:
    type: object
    description: Settlement.
    properties:
      id:
        type: string
      short_reference:
        type: string
      status:
        type: string
      conversion_ids:
        type: array
        items:
          type: string
      entries:
        type: object
        additionalProperties:
          type: object
          description: >-
            Maps currency codes (eg. "GBP", "USD") to an object containing send
            and receive amounts.
          properties:
            send_amount:
              type: string
            receive_amount:
              type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      released_at:
        type: string
        format: date-time
    example:
      id: a937f05e-e9fd-442e-a46f-11e84ba37806
      short_reference: 20140101-BCDFGH
      status: open
      conversion_ids:
        - c9b6b851-10f9-4bbf-881e-1d8a49adf7d8
      entries:
        GBP:
          send_amount: '0.00'
          receive_amount: '1000.00'
        USD:
          send_amount: '1587.80'
          receive_amount: '0.00'
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
      released_at: 2017-12-31T23:59:59.000Z
  SettlementAccount:
    type: object
    description: Settlement accounts.
    properties:
      bank_account_holder_name:
        type: string
      beneficiary_address:
        type: array
        items:
          type: string
          description: Line of address.
      beneficiary_country:
        type: string
      bank_name:
        type: string
      bank_address:
        type: array
        items:
          type: string
          description: Line of address.
      bank_country:
        type: string
        description: Two-letter country code.
      currency:
        type: string
      bic_swift:
        type: string
      iban:
        type: string
      account_number:
        type: string
      routing_code_type_1:
        type: string
      routing_code_value_1:
        type: string
      routing_code_type_2:
        type: string
      routing_code_value_2:
        type: string
    example:
      bank_account_holder_name: The Currency Cloud GBP - Client Seg A/C
      beneficiary_address:
        - 1 Churchill Place London E14 5HP
      beneficiary_country: GB
      bank_name: Barclays Bank Plc.
      bank_address:
        - 164 Bishopsgate London EC2M 4LX
      bank_country: GB
      currency: GBP
      bic_swift: BARCGB22
      iban: GB06 BARC 2006 0513 0714 72
      account_number: '13071472'
      routing_code_type_1: sort_code
      routing_code_value_1: '200605'
      routing_code_type_2: ''
      routing_code_value_2: ''
  Transaction:
    type: object
    description: Transaction.
    properties:
      id:
        type: string
      balance_id:
        type: string
      account_id:
        type: string
      currency:
        type: string
      amount:
        type: string
      balance_amount:
        type: string
      type:
        type: string
      action:
        type: string
      related_entity_type:
        type: string
      related_entity_id:
        type: string
      related_entity_short_reference:
        type: string
      status:
        type: string
      reason:
        type: string
      settles_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      completed_at:
        type: string
        format: date-time
    example:
      id: c5a990eb-d4d7-482f-bfb1-695261fb1e4d
      balance_id: c5f1f54e-d6d8-4140-8110-f5b99bbc80c3
      account_id: 7b9757a8-eee9-4572-86e6-77f4d711eaa6
      currency: USD
      amount: '1000.00'
      balance_amount: '2000.00'
      type: credit
      action: conversion
      related_entity_type: conversion
      related_entity_id: e93e322f-93aa-4d31-b050-449da723db0b
      related_entity_short_reference: 140416-GGJBNQ001
      status: completed
      reason: Reason for Transaction
      settles_at: 2017-12-31T23:59:59.000Z
      created_at: 2017-12-31T23:59:59.000Z
      updated_at: 2017-12-31T23:59:59.000Z
      completed_at: 2017-12-31T23:59:59.000Z
  Transfer:
    type: object
    description: Transfer.
    properties:
      id:
        type: string
      short_reference:
        type: string
      source_account_id:
        type: string
      destination_account_id:
        type: string
      currency:
        type: string
      amount:
        type: string
      status:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      completed_at:
        type: string
      creator_account_id:
        type: string
      creator_contact_id:
        type: string
      reason:
        type: string
    example:
      id: 993d63bd-e151-11e6-a5af-080027a79e8f
      short_reference: BT-20170118-VMSCBS
      source_account_id: a7117404-e150-11e6-a5af-080027a79e8f
      destination_account_id: 946f2d58-e150-11e6-a5af-080027a79e8f
      currency: GBP
      amount: '1250.00'
      status: completed
      created_at: 2017-01-18T14:08:34.000Z
      updated_at: 2017-01-18T14:08:34.000Z
      completed_at: 2017-01-18T14:08:34.000Z
      creator_account_id: 30cb8632-e152-11e6-a5af-080027a79e8f
      creator_contact_id: 262e3d2a-e152-11e6-a5af-080027a79e8f
      reason: Director's fees for March
  UnauthorizedError:
    type: object
    description: Authorization error.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
        enum:
          - auth_failed
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
    example:
      error_code: auth_failed
      error_messages:
        api_key:
          - code: invalid_supplied_credentials
            message: Authentication failed with the supplied credentials
            params: {}
  UnreleaseSettlementError:
    type: object
    description: |
      Client error information for the Unrelease Settlement endpoint.

      **Error codes**

      ``on_behalf_of_self``
      - Category: ``on_behalf_of``
      - Message: "You cannot act on behalf of your own Contact"

      ``contact_not_found``
      - Category: ``on_behalf_of``
      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdateAccountError:
    type: object
    description: >
      Client error information for the Update Account endpoint.


      **Error codes**


      ``at_least_one_parameter``

      - Category: ``base``

      - Message: "At least one parameter should be present: account_name, brand,
      your_reference, status, street, city, country, postal_code, spread_table"


      ``id_is_not_valid_uuid``

      - Category: ``id``

      - Message: "id should be in UUID format"


      ``account_name_is_too_long``

      - Category: ``account_name``

      - Message: "account_name can not be longer than 150 character(s)"

      - Params: { "maxlength" => 150 }


      ``brand_is_too_long``

      - Category: ``brand``

      - Message: "brand can not be longer than 100 character(s)"

      - Params: { "maxlength" => 255 }


      ``brand_not_found``

      - Category: ``brand``

      - Message: "Brand non_existing_brand wasn't found"

      - Params: { "brand" => ""non_existing_brand"" }


      ``brand_account_not_broker``

      - Category: ``brand``

      - Message: "Account doesn't have broker permissions"

      - Params: { "brand" => "wrong_brand" }


      ``your_reference_is_too_long``

      - Category: ``your_reference``

      - Message: "your_reference can not be longer than 25 character(s)"

      - Params: { "maxlength" => 25 }


      ``legal_entity_type_not_in_range``

      - Category: ``legal_entity_type``

      - Message: "legal_entity_type should be in range: individual, company"

      - Params: { "range" => "individual, company" }


      ``status_not_in_range``

      - Category: ``status``

      - Message: "status should be in range: enabled, disabled,
      enabled_no_trading"

      - Params: { "range" => "enabled, disabled, enabled_no_trading" }


      ``street_is_too_long``

      - Category: ``street``

      - Message: "street can not be longer than 150 character(s)"

      - Params: { "maxlength" => 150 }


      ``city_is_too_long``

      - Category: ``city``

      - Message: "city can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``postal_code_is_too_long``

      - Category: ``postal_code``

      - Message: "postal_code can not be longer than 20 character(s)"

      - Params: { "maxlength" => 20 }


      ``country_is_too_long``

      - Category: ``country``

      - Message: "country can not be longer than 2 character(s)"

      - Params: { "maxlength" => 2 }


      ``spread_table_is_too_long``

      - Category: ``spread_table``

      - Message: "spread_table can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``identification_type_is_missing``

      - Category: ``identification_type``

      - Message: "identification_type is missing"


      ``identification_type_is_invalid``

      - Category: ``identification_type``

      - Message: "identification_type is invalid"


      ``identification_value_is_missing``

      - Category: ``identification_value``

      - Message: "identification_value is missing"


      ``identification_value_is_invalid``

      - Category: ``identification_value``

      - Message: "identification_value is invalid"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdateBeneficiaryError:
    type: object
    description: >
      Client error information for the Update Beneficiary endpoint.


      **Error codes**


      ``id_is_not_valid_uuid``

      - Category: ``id``

      - Message: "id should be in UUID format"


      ``beneficiary_not_found``

      - Category: ``id``

      - Message: "Beneficiary was not found for this id"


      ``bank_account_holder_name_is_too_short``

      - Category: ``bank_account_holder_name``

      - Message: "bank_account_holder_name can not be shorter than 1
      character(s)"

      - Params: { "minlength" => 1 }


      ``bank_account_holder_name_is_too_long``

      - Category: ``bank_account_holder_name``

      - Message: "bank_account_holder_name can not be longer than 255
      character(s)"

      - Params: { "maxlength" => 255 }


      ``email_is_too_short``

      - Category: ``email``

      - Message: "email can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``email_is_too_long``

      - Category: ``email``

      - Message: "email can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``beneficiary_address_is_too_short``

      - Category: ``beneficiary_address``

      - Message: "beneficiary_address can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``beneficiary_address_is_too_long``

      - Category: ``beneficiary_address``

      - Message: "beneficiary_address can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``beneficiary_address_is_missing``

      - Category: ``beneficiary_address``

      - Message: "Beneficiary address is missing"


      ``account_number_is_too_short``

      - Category: ``account_number``

      - Message: "account_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``account_number_is_too_long``

      - Category: ``account_number``

      - Message: "account_number can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``account_number_is_missing``

      - Category: ``account_number``

      - Message: "Account number is missing"


      ``account_number_is_invalid``

      - Category: ``account_number``

      - Message: "Account number is in invalid format"


      ``routing_code_value_1_is_too_short``

      - Category: ``routing_code_value_1``

      - Message: "routing_code_value_1 can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``routing_code_value_1_is_too_long``

      - Category: ``routing_code_value_1``

      - Message: "routing_code_value_1 can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``routing_code_value_2_is_too_short``

      - Category: ``routing_code_value_2``

      - Message: "routing_code_value_2 can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``routing_code_value_2_is_too_long``

      - Category: ``routing_code_value_2``

      - Message: "routing_code_value_2 can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``iban_is_too_short``

      - Category: ``iban``

      - Message: "iban can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``iban_is_too_long``

      - Category: ``iban``

      - Message: "iban can not be longer than 34 character(s)"

      - Params: { "maxlength" => 34 }


      ``iban_is_missing``

      - Category: ``iban``

      - Message: "IBAN is missing"


      ``iban_is_invalid``

      - Category: ``iban``

      - Message: "IBAN is in invalid format"


      ``bic_swift_is_too_short``

      - Category: ``bic_swift``

      - Message: "bic_swift can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bic_swift_is_too_long``

      - Category: ``bic_swift``

      - Message: "bic_swift can not be longer than 11 character(s)"

      - Params: { "maxlength" => 11 }


      ``bic_swift_is_missing``

      - Category: ``bic_swift``

      - Message: "BIC/SWIFT is missing"


      ``bic_swift_is_invalid``

      - Category: ``bic_swift``

      - Message: "BIC/SWIFT is in invalid format"


      ``bank_address_is_missing``

      - Category: ``bank_address``

      - Message: "Bank address is missing"


      ``bank_address_is_too_short``

      - Category: ``bank_address``

      - Message: "bank_address can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bank_address_is_too_long``

      - Category: ``bank_address``

      - Message: "bank_address can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``bank_name_is_too_short``

      - Category: ``bank_name``

      - Message: "bank_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bank_name_is_too_long``

      - Category: ``bank_name``

      - Message: "bank_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``bank_name_is_missing``

      - Category: ``bank_name``

      - Message: "Bank name is missing"


      ``bank_name_is_invalid``

      - Category: ``bank_name``

      - Message: "Bank name is in invalid format"


      ``bank_account_type_not_in_range``

      - Category: ``bank_account_type``

      - Message: "bank_account_type should be in range: checking, savings"

      - Params: { "range" => "checking, savings" }


      ``bank_account_type_is_missing``

      - Category: ``bank_account_type``

      - Message: "Beneficiary bank account type is missing"


      ``name_is_too_short``

      - Category: ``name``

      - Message: "name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``name_is_too_long``

      - Category: ``name``

      - Message: "name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``default_beneficiary_type_is_wrong``

      - Category: ``default_beneficiary``

      - Message: "default_beneficiary should be of boolean type"

      - Params: { "type" => "boolean" }


      ``routing_code_type_1_not_in_range``

      - Category: ``routing_code_type_1``

      - Message: "routing_code_type_1 should be in range: sort_code, bsb_code,
      institution_no, bank_code, branch_code, aba, clabe, cnaps"

      - Params: { "range" => "sort_code, bsb_code, institution_no, bank_code,
      branch_code, aba, clabe, cnaps" }


      ``routing_code_type_2_not_in_range``

      - Category: ``routing_code_type_2``

      - Message: "routing_code_type_2 should be in range: sort_code, bsb_code,
      institution_no, bank_code, branch_code, aba, clabe, cnaps"

      - Params: { "range => "sort_code, bsb_code, institution_no, bank_code,
      branch_code, aba, clabe, cnaps" }


      ``beneficiary_country_is_required``

      - Category: ``beneficiary_country is required``

      - Message: "beneficiary_country"


      ``beneficiary_country_is_in_invalid_format``

      - Category: ``beneficiary_country``

      - Message: "beneficiary_country is in invalid format"


      ``beneficiary_entity_type_not_in_range``

      - Category: ``beneficiary_entity_type``

      - Message: "beneficiary_entity_type should be in range: individual,
      company"

      - Params: { "range" => "individual, company" }


      ``beneficiary_entity_type_is_missing``

      - Category: ``beneficiary_entity_type``

      - Message: "Beneficiary entity type is missing"


      ``beneficiary_company_name_is_missing``

      - Category: ``beneficiary_company_name``

      - Message: "Beneficiary company name is missing"


      ``beneficiary_first_name_is_missing``

      - Category: ``beneficiary_first_name``

      - Message: "Beneficiary first name is missing"


      ``beneficiary_last_name_is_missing``

      - Category: ``beneficiary_last_name``

      - Message: "Beneficiary last name is missing"


      ``beneficiary_city_is_missing``

      - Category: ``beneficiary_city``

      - Message: "Beneficiary city is missing"


      ``beneficiary_state_or_province_is_missing``

      - Category: ``beneficiary_state_or_province``

      - Message: "Beneficiary state or province is missing"


      ``beneficiary_state_or_province_is_not_supported``

      - Category: ``beneficiary_state_or_province``

      - Message: "Beneficiary state or province is not supported"


      ``beneficiary_postcode_is_missing``

      - Category: ``beneficiary_postcode``

      - Message: "Beneficiary postcode is missing"


      ``beneficiary_date_of_birth_type_is_wrong``

      - Category: ``beneficiary_date_of_birth``

      - Message: "beneficiary_date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``identification_type_is_missing``

      - Category: ``beneficiary_identification_type``

      - Message: "identification_type is missing"


      ``identification_type_is_invalid``

      - Category: ``beneficiary_identification_type``

      - Message: "identification_type is invalid"


      ``identification_value_is_missing``

      - Category: ``beneficiary_identification_value``

      - Message: "identification_value is missing"


      ``identification_value_is_invalid``

      - Category: ``beneficiary_identification_value``

      - Message: "identification_value is invalid"


      ``bank_country_is_in_invalid_format``

      - Category: ``bank_country``

      - Message: "bank_country is in invalid format"


      ``bank_country_is_not_supported``

      - Category: ``bank_country``

      - Message: "bank_country is not supported"


      ``currency_is_in_invalid_format``

      - Category: ``currency``

      - Message: "currency is in invalid format"


      ``currency_code_is_invalid``

      - Category: ``currency``

      - Message: "You can not use this currency with beneficiaries"


      ``unique_value_parameters``

      - Category: ``base``

      - Message: "Following parameters should not have same values:
      routing_code_type_1, routing_code_type_2"

      - Params: { "parameters" => "routing_code_type_1, routing_code_type_2" }


      ``at_least_one_parameter``

      - Category: ``base``

      - Message: "At least one parameter should be present:
      bank_account_holder_name, beneficiary_country, bank_country, currency,
      email, beneficiary_address, account_number, routing_code_type_1,
      routing_code_type_2, routing_code_value_1, routing_code_value_2,
      bic_swift, iban, default_beneficiary, bank_address, bank_name, name"

      - Params: { "parameters" => "bank_account_holder_name,
      beneficiary_country, bank_country, currency, email, beneficiary_address,
      account_number, routing_code_type_1, routing_code_type_2,
      routing_code_value_1, routing_code_value_2, bic_swift, iban,
      default_beneficiary, bank_address, bank_name, name" }


      ``payment_types_not_in_range``

      - Category: ``payment_types``

      - Message: "payment_types should be in range: priority, regular"

      - Params: { "range" => "priority, regular" }


      ``sort_code_is_missing``

      - Category: ``routing_code``

      - Message: "Sort code is missing"


      ``sort_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Sort code is in invalid format"


      ``aba_is_missing``

      - Category: ``routing_code``

      - Message: "ABA is missing"


      ``aba_is_invalid``

      - Category: ``routing_code``

      - Message: "ABA is in invalid format"


      ``bsb_code_is_missing``

      - Category: ``routing_code``

      - Message: "BSB code is missing"


      ``bsb_code_is_invalid``

      - Category: ``routing_code``

      - Message: "BSB code is in invalid format"


      ``branch_code_is_missing``

      - Category: ``routing_code``

      - Message: "Branch code is missing"


      ``branch_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Branch code is in invalid format"


      ``institution_no_is_missing``

      - Category: ``routing_code``

      - Message: "Institution no is missing"


      ``institution_no_is_invalid``

      - Category: ``routing_code``

      - Message: "Institution no is in invalid format"


      ``bank_code_is_missing``

      - Category: ``routing_code``

      - Message: "Bank code is missing"


      ``bank_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Bank code is in invalid format"


      ``clabe_is_missing``

      - Category: ``routing_code``

      - Message: "CLABE is missing"


      ``clabe_is_invalid``

      - Category: ``CLABE is in invalid format``

      - Message: "routing_code"


      ``beneficiary_update_failed``

      - Category: ``beneficiary``

      - Message: "Beneficiary was not updated"


      ``beneficiary_details_are_missing``

      - Category: ``beneficiary``

      - Message: "Following beneficiary details are missing:
      beneficiary_company_name"

      - Params: { "missing_details" => ["beneficiary_company_name"] }


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdateContactError:
    type: object
    description: >
      Client error information for the Update Contact endpoint.


      **Error codes**


      ``at_least_one_parameter``

      - Category: ``base``

      - Message: "At least one parameter should be present: first_name,
      last_name, email_address, phone_number, mobile_phone_number, login_id,
      locale, timezone, status"


      ``id_is_not_valid_uuid``

      - Category: ``id``

      - Message: "id should be in UUID format"


      ``first_name_is_too_short``

      - Category: ``first_name``

      - Message: "first_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``first_name_is_too_long``

      - Category: ``first_name``

      - Message: "first_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``last_name_is_too_short``

      - Category: ``last_name``

      - Message: "last_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``last_name_is_too_long``

      - Category: ``last_name``

      - Message: "last_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``email_address_is_too_short``

      - Category: ``email_address``

      - Message: "email_address can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``email_address_is_too_long``

      - Category: ``email_address``

      - Message: "email_address can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``email_address_is_in_invalid_format``

      - Category: ``email_address``

      - Message: "email_address is in invalid format"


      ``phone_number_is_too_short``

      - Category: ``phone_number``

      - Message: "phone_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``phone_number_is_too_long``

      - Category: ``phone_number``

      - Message: "phone_number can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``mobile_phone_number_is_too_short``

      - Category: ``mobile_phone_number``

      - Message: "mobile_phone_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``mobile_phone_number_is_too_long``

      - Category: ``mobile_phone_number``

      - Message: "mobile_phone_number can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``login_id_in_use``

      - Category: ``login_id``

      - Message: "login_id already in use: 'john.smith@company.com'"


      ``login_id_is_too_long``

      - Category: ``login_id``

      - Message: "login_id can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``locale_is_too_short``

      - Category: ``locale``

      - Message: "locale can not be shorter than 2 character(s)"

      - Params: { "minlength" => 2 }


      ``locale_is_too_long``

      - Category: ``locale``

      - Message: "locale can not be longer than 5 character(s)"

      - Params: { "maxlength" => 5 }


      ``timezone_is_too_short``

      - Category: ``timezone``

      - Message: "timezone can not be shorter than 2 character(s)"

      - Params: { "minlength" => 2 }


      ``timezone_is_too_long``

      - Category: ``timezone``

      - Message: "timezone can not be longer than 5 character(s)"

      - Params: { "maxlength" => 5 }


      ``status_not_in_range``

      - Category: ``status``

      - Message: "status should be in range: enabled, not_enabled"


      ``date_of_birth_type_is_wrong``

      - Category: ``date_of_birth``

      - Message: "date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``contact_not_found``

      - Category: ``id``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdatePaymentError:
    type: object
    description: >
      Client error information for the Update Payment endpoint.


      **Error codes**


      ``currency_type_is_wrong``

      - Category: ``currency``

      - Message: "XYZ is not a valid ISO 4217 currency code"


      ``invalid_currency``

      - Category: ``currency``

      - Message: "You cannot make payments with this currency"


      ``id_is_not_valid_uuid``

      - Category: ``id``

      - Message: "id should be in UUID format"


      ``beneficiary_id_is_not_valid_uuid``

      - Category: ``beneficiary_id``

      - Message: "beneficiary_id should be in UUID format"


      ``invalid_beneficiary_id``

      - Category: ``beneficiary_id``

      - Message: "Unknown beneficiary_id"


      ``invalid_beneficiary_currency``

      - Category: ``beneficiary_currency``

      - Message: "You cannot assign this Beneficiary to the Payment as it is the
      incorrect currency"


      ``amount_type_is_wrong``

      - Category: ``amount``

      - Message: "amount should be of numeric type"

      - Params: { "type" => "numeric" }


      ``payment_above_limit``

      - Category: ``amount``

      - Message: "3000.00 EUR exceeds the maximum amount of 2500.00 EUR for a
      local payment."

      - Params: { "amount" => 3000.0, "ccy" => "EUR", "limit" => 2500.0 }


      ``invalid_amount_for_order``

      - Category: ``amount_for_order``

      - Message: "The payment amount is more than the value of the order"


      ``payment_type_not_in_range``

      - Category: ``payment_type``

      - Message: "payment_type should be in range: priority, regular"


      ``invalid_conversion_id``

      - Category: ``conversion_id``

      - Message: "Conversion could not be found."


      ``conversion_id_is_not_valid_uuid``

      - Category: ``conversion_id``

      - Message: "conversion_id should be in UUID format"


      ``invalid_payment_date``

      - Category: ``payment_date``

      - Message: "The payment date is invalid"


      ``payment_date_is_in_invalid_format``

      - Category: ``payment_date``

      - Message: "payment_date should be in ISO 8601 format"


      ``payment_date_is_too_early``

      - Category: ``payment_date``

      - Message: "The payment date cannot be sooner than the conversion date"


      ``reference_is_too_long``

      - Category: ``reference``

      - Message: "reference can not be longer than 255 character(s)"

      - Params: { "maxlength" => 255 }


      ``payment_can_not_be_edited``

      - Category: ``can_not_be_edited``

      - Message: "Sorry this Payment has already been processed and you are
      unable to Edit it"


      ``extra_dependent_params``

      - Category: ``base``

      - Message: "Parameters payer_entity_type, payer_company_name,
      payer_first_name, payer_last_name, payer_address, payer_country,
      payer_postcode, payer_state_or_province, payer_date_of_birth,
      payer_identification_type, payer_identification_value can't be provided in
      the same request with 'payer_details_source' with value 'account'"


      ``payer_entity_type_not_in_range``

      - Category: ``payer_entity_type``

      - Message: "payer_entity_type should be in range: individual, company"

      - Params: { "range" => "individual, company" }


      ``payer_entity_type_is_missing``

      - Category: ``payer_entity_type``

      - Message: "Payer entity type is missing"


      ``payer_company_name_is_missing``

      - Category: ``payer_company_name``

      - Message: "Payer company name is missing"


      ``payer_first_name_is_missing``

      - Category: ``payer_first_name``

      - Message: "Payer first name is missing"


      ``payer_last_name_is_missing``

      - Category: ``payer_last_name``

      - Message: "Payer last name is missing"


      ``payer_city_is_missing``

      - Category: ``payer_city``

      - Message: "Payer city is missing"


      ``payer_state_or_province_is_missing``

      - Category: ``payer_state_or_province``

      - Message: "Payer state or province is missing"


      ``payer_postcode_is_missing``

      - Category: ``payer_postcode``

      - Message: "Payer postcode is missing"


      ``payer_date_of_birth_type_is_wrong``

      - Category: ``payer_date_of_birth``

      - Message: "payer_date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``identification_type_is_missing``

      - Category: ``payer_identification_type``

      - Message: "identification_type is missing"


      ``identification_type_is_invalid``

      - Category: ``payer_identification_type``

      - Message: "identification_type is invalid"


      ``identification_value_is_missing``

      - Category: ``payer_identification_value``

      - Message: "identification_value is missing"


      ``identification_value_is_invalid``

      - Category: ``payer_identification_value``

      - Message: "identification_value is invalid"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``payment_not_found``

      - Category: ``id``

      - Message: "Payment was not found for this id"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  ValidateBeneficiaryError:
    type: object
    description: >
      Client error information for the Validate Beneficiary endpoint.


      **Error codes**


      ``beneficiary_country_is_required``

      - Category: ``beneficiary_country is required``

      - Message: "beneficiary_country"


      ``beneficiary_country_is_in_invalid_format``

      - Category: ``beneficiary_country``

      - Message: "beneficiary_country is in invalid format"


      ``beneficiary_entity_type_not_in_range``

      - Category: ``beneficiary_entity_type``

      - Message: "beneficiary_entity_type should be in range: individual,
      company"

      - Params: { "range" => "individual, company" }


      ``beneficiary_entity_type_is_missing``

      - Category: ``beneficiary_entity_type``

      - Message: "Beneficiary entity type is missing"


      ``beneficiary_company_name_is_missing``

      - Category: ``beneficiary_company_name``

      - Message: "Beneficiary company name is missing"


      ``beneficiary_first_name_is_missing``

      - Category: ``beneficiary_first_name``

      - Message: "Beneficiary first name is missing"


      ``beneficiary_last_name_is_missing``

      - Category: ``beneficiary_last_name``

      - Message: "Beneficiary last name is missing"


      ``beneficiary_city_is_missing``

      - Category: ``beneficiary_city``

      - Message: "Beneficiary city is missing"


      ``beneficiary_state_or_province_is_missing``

      - Category: ``beneficiary_state_or_province``

      - Message: "Beneficiary state or province is missing"


      ``beneficiary_state_or_province_is_not_supported``

      - Category: ``beneficiary_state_or_province``

      - Message: "Beneficiary state or province is not supported"


      ``beneficiary_postcode_is_missing``

      - Category: ``beneficiary_postcode``

      - Message: "Beneficiary postcode is missing"


      ``beneficiary_date_of_birth_type_is_wrong``

      - Category: ``beneficiary_date_of_birth``

      - Message: "beneficiary_date_of_birth should be of date type"

      - Params: { "type" => "date" }


      ``account_number_is_too_short``

      - Category: ``account_number``

      - Message: "account_number can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``account_number_is_too_long``

      - Category: ``account_number``

      - Message: "account_number can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``account_number_is_missing``

      - Category: ``account_number``

      - Message: "Account number is missing"


      ``account_number_is_invalid``

      - Category: ``account_number``

      - Message: "Account number is in invalid format"


      ``routing_code_value_1_is_too_short``

      - Category: ``routing_code_value_1``

      - Message: "routing_code_value_1 can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``routing_code_value_1_is_too_long``

      - Category: ``routing_code_value_1``

      - Message: "routing_code_value_1 can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``routing_code_value_2_is_too_short``

      - Category: ``routing_code_value_2``

      - Message: "routing_code_value_2 can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``routing_code_value_2_is_too_long``

      - Category: ``routing_code_value_2``

      - Message: "routing_code_value_2 can not be longer than 50 character(s)"

      - Params: { "maxlength" => 50 }


      ``iban_is_too_short``

      - Category: ``iban``

      - Message: "iban can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``iban_is_too_long``

      - Category: ``iban``

      - Message: "iban can not be longer than 34 character(s)"

      - Params: { "maxlength" => 34 }


      ``iban_is_missing``

      - Category: ``iban``

      - Message: "IBAN is missing"


      ``iban_is_invalid``

      - Category: ``iban``

      - Message: "IBAN is in invalid format"


      ``bic_swift_is_too_short``

      - Category: ``bic_swift``

      - Message: "bic_swift can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bic_swift_is_too_long``

      - Category: ``bic_swift``

      - Message: "bic_swift can not be longer than 11 character(s)"

      - Params: { "maxlength" => 11 }


      ``bic_swift_is_missing``

      - Category: ``bic_swift``

      - Message: "BIC/SWIFT is missing"


      ``bic_swift_is_invalid``

      - Category: ``bic_swift``

      - Message: "BIC/SWIFT is in invalid format"


      ``bank_address_is_missing``

      - Category: ``bank_address``

      - Message: "Bank address is missing"


      ``bank_address_is_too_short``

      - Category: ``bank_address``

      - Message: "bank_address can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bank_address_is_too_long``

      - Category: ``bank_address``

      - Message: "bank_address can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``bank_name_is_too_short``

      - Category: ``bank_name``

      - Message: "bank_name can not be shorter than 1 character(s)"

      - Params: { "minlength" => 1 }


      ``bank_name_is_too_long``

      - Category: ``bank_name``

      - Message: "bank_name can not be longer than 100 character(s)"

      - Params: { "maxlength" => 100 }


      ``bank_name_is_missing``

      - Category: ``bank_name``

      - Message: "Bank name is missing"


      ``bank_name_is_invalid``

      - Category: ``bank_name``

      - Message: "Bank name is in invalid format"


      ``bank_account_type_not_in_range``

      - Category: ``bank_account_type``

      - Message: "bank_account_type should be in range: checking, savings"

      - Params: { "range" => "checking, savings" }


      ``bank_account_type_is_missing``

      - Category: ``bank_account_type``

      - Message: "Beneficiary bank account type is missing"


      ``routing_code_type_1_not_in_range``

      - Category: ``routing_code_type_1``

      - Message: "routing_code_type_1 should be in range: sort_code, bsb_code,
      institution_no, bank_code, branch_code, aba, clabe, cnaps"

      - Params: { "range" => "sort_code, bsb_code, institution_no, bank_code,
      branch_code, aba, clabe, cnaps" }


      ``routing_code_type_2_not_in_range``

      - Category: ``routing_code_type_2``

      - Message: "routing_code_type_2 should be in range: sort_code, bsb_code,
      institution_no, bank_code, branch_code, aba, clabe, cnaps"

      - Params: { "range => "sort_code, bsb_code, institution_no, bank_code,
      branch_code, aba, clabe, cnaps" }


      ``bank_country_is_required``

      - Category: ``bank_country``

      - Message: "bank_country is required"


      ``bank_country_is_in_invalid_format``

      - Category: ``bank_country``

      - Message: "bank_country is in invalid format"


      ``bank_country_is_not_supported``

      - Category: ``bank_country``

      - Message: "bank_country is not supported"


      ``currency_is_required``

      - Category: ``currency``

      - Message: "currency is required"


      ``currency_is_in_invalid_format``

      - Category: ``currency``

      - Message: "currency is in invalid format"


      ``currency_code_is_invalid``

      - Category: ``currency``

      - Message: "You can not use this currency with beneficiaries"


      ``unique_value_parameters``

      - Category: ``base``

      - Message: "Following parameters should not have same values:
      routing_code_type_1, routing_code_type_2"

      - Params: { "parameters" => "routing_code_type_1, routing_code_type_2" }


      ``beneficiary_create_failed``

      - Category: ``beneficiary``

      - Message: "Beneficiary was not created"


      ``beneficiary_details_are_missing``

      - Category: ``beneficiary``

      - Message: "Following beneficiary details are missing:
      beneficiary_company_name"

      - Params: { "missing_details" => ["beneficiary_company_name"] }


      ``payment_types_not_in_range``

      - Category: ``payment_types``

      - Message: "payment_types should be in range: priority, regular"

      - Params: { "range" => "priority, regular" }


      ``sort_code_is_missing``

      - Category: ``routing_code``

      - Message: "Sort code is missing"


      ``sort_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Sort code is in invalid format"


      ``aba_is_missing``

      - Category: ``routing_code``

      - Message: "ABA is missing"


      ``aba_is_invalid``

      - Category: ``routing_code``

      - Message: "ABA is in invalid format"


      ``bsb_code_is_missing``

      - Category: ``routing_code``

      - Message: "BSB code is missing"


      ``bsb_code_is_invalid``

      - Category: ``routing_code``

      - Message: "BSB code is in invalid format"


      ``branch_code_is_missing``

      - Category: ``routing_code``

      - Message: "Branch code is missing"


      ``branch_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Branch code is in invalid format"


      ``institution_no_is_missing``

      - Category: ``routing_code``

      - Message: "Institution no is missing"


      ``institution_no_is_invalid``

      - Category: ``routing_code``

      - Message: "Institution no is in invalid format"


      ``bank_code_is_missing``

      - Category: ``routing_code``

      - Message: "Bank code is missing"


      ``bank_code_is_invalid``

      - Category: ``routing_code``

      - Message: "Bank code is in invalid format"


      ``clabe_is_missing``

      - Category: ``routing_code``

      - Message: "CLABE is missing"


      ``clabe_is_invalid``

      - Category: ``CLABE is in invalid format``

      - Message: "routing_code"


      ``beneficiary_update_failed``

      - Category: ``beneficiary``

      - Message: "Beneficiary was not updated"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"


      ``on_behalf_of_self``

      - Category: ``on_behalf_of``

      - Message: "You cannot act on behalf of your own Contact"


      ``contact_not_found``

      - Category: ``on_behalf_of``

      - Message: "Contact was not found for this id"
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  VAN:
    type: object
    description: VAN.
    properties:
      id:
        type: string
      account_id:
        type: string
      virtual_account_number:
        type: string
      account_holder_name:
        type: string
      bank_institution_name:
        type: string
      bank_institution_address:
        type: string
      bank_institution_country:
        type: string
      routing_code:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    example:
      id: 00d272ee-fae5-4f97-b425-993a2d6e3a46
      account_id: 2090939e-b2f7-3f2b-1363-4d235b3f58af
      virtual_account_number: 8303723297
      account_holder_name: Account-ZXOANNAMKPRQ
      bank_institution_name: Community Federal Savings Bank
      bank_institution_address: 'Seventh Avenue, New York, NY 10019, US'
      bank_institution_country: United States
      routing_code: 5797480
      created_at: 2014-01-12T00:00:00.000Z
      updated_at: 2014-01-12T00:00:00.000Z
