swagger: '2.0'
info:
  description: >-
    The Currencycloud API is a robust, predictable, easy-to-use API for
    converting money between currencies and making payments around the world.
    Dynamically register sub-accounts to provide white labeled money transfer
    services to your own customers.
  version: 2.3.0
  title: Currencycloud API
  termsOfService: 'https://www.currencycloud.com/terms-and-conditions/'
  contact:
    name: support
    email: support@currencycloud.com
externalDocs:
  description: API overview
  url: 'https://www.currencycloud.com/developers/'
tags:
  - name: Authenticate
    description: >-
      Authenticate to gain access to the API. Provides the ability to log in to
      your Currencycloud account using your API Key and log out by terminating
      your session.
  - name: Accounts
    description: >-
      Create, search and update your Currencycloud account and any associated
      sub-accounts. Also provides you with the ability to use your own reference
      IDs for easy reconciliation with your internal systems.
  - name: Balances
    description: >-
      Provides access to view balance information. View the balances that you
      currently hold in different currencies on your Currencycloud account.
  - name: Beneficiaries
    description: >-
      Provides you with the ability to create, search and manage the list of
      individuals or companies that you send payments to.
  - name: Contacts
    description: >-
      Create, search and manage the list of users that have access in your
      Currencycloud account or associated sub-accounts.
  - name: Conversions
    description: >-
      Gives you the ability to find, retrieve and create a live currency
      conversion. You can also create and manage the live conversion of funds
      between two currencies.
  - name: IBANs
    description: >-
      Create, search and manage International Bank Account Numbers (IBANs)
      assigned to your Currencycloud account balance or your sub-accounts'
      balances. You can also retrieve and assign IBANs to the the account.
  - name: Payers
    description: >-
      Provides you with the ability to view information relating to the 'payer'
      for a payment that has been initiated through the platform.
  - name: Payments
    description: >-
      Create, search, manage and action all of your domestic and international
      payments through this API.
  - name: Rates
    description: >-
      Super fast real-time access to live foreign exchange rates through the
      Currencycloud platform.
  - name: Reference
    description: >-
      Easy access to view important data relevant to your Currencycloud account
      including beneficiary details, conversion dates, available currencies,
      payer required details, payment dates and settlement details.
  - name: Reporting
    description: Ability to create and retrieve reports.
  - name: Sender
    description: Sender of funds.
  - name: Settlements
    description: >-
      Consolidate multiple currency conversions into a single group. Search,
      manage, delete and release these currency conversion groups.
  - name: Transactions
    description: >-
      View balances and all pending and completed transactions in your
      Currencycloud account, as well as associated sub-account balances and
      transactions.
  - name: Transfers
    description: >-
      Search, retrieve and create a transfer of funds between your Currencycloud
      account and associated sub-accounts.
  - name: VANs
    description: >-
      Create, search and manage Virtual Accounts (VANs) assigned to your
      Currencycloud account balance or your sub-accounts' balances. You can also
      retrieve and assign VANs to the account.
schemes:
  - https
host: devapi.currencycloud.com
basePath: /v2
consumes:
  - multipart/form-data
produces:
  - application/json
paths:
  /authenticate/api:
    post:
      tags:
        - Authenticate
      x-api-group: manage
      summary: Login
      description: >-
        The Currencycloud API authentication and authorization endpoint.

        Submit a login ID and API key for a Currencycloud account. On successful
        login, a temporary authentication token is returned.

        An authentication token is required to make requests to all other
        endpoints in the Currencycloud API. Tokens expire after 30 minutes of
        inactivity.

        Token requests are limited to 10 calls per minute.

        For security, Currencycloud accounts are disabled when four unsuccessful
        login attempts are made within a short period. Account holders must
        [contact support](https://developer.currencycloud.com/support) to
        reactivate their account.
      operationId: Login
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: login_id
          in: formData
          required: true
          type: string
          description: >-
            Login ID for a Currencycloud account. This is usually an email
            address.
        - name: api_key
          in: formData
          required: true
          type: string
          description: The unique API key for the Currencycloud account.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AuthenticationToken'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: login_id_is_required
              category: login_id
              message: login_id is required
              params: ''
            - code: login_id_is_too_short
              category: login_id
              message: login_id can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: login_id_is_too_long
              category: login_id
              message: login_id can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: api_key_is_required
              category: api_key
              message: api_key is required
              params: ''
            - code: api_key_length_is_invalid
              category: api_key
              message: api_key should be 64 character(s) long
              params: '{ "length" => 64 }'
          schema:
            $ref: '#/definitions/LoginError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /authenticate/close_session:
    post:
      tags:
        - Authenticate
      x-api-group: manage
      summary: Logout
      description: >-
        Authentication tokens expire automatically after 30 minutes of
        inactivity. If a session is no longer required, it is good security
        practice to retire its authentication token early rather than leave it
        to time out.
      operationId: Logout
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: >-
            Success. A 200 response with an empty payload signifies that the
            authentication token is successfully retired.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /accounts/current:
    get:
      tags:
        - Accounts
      x-api-group: manage
      summary: Get Authenticating Account
      description: Get the main account of the authenticating user.
      operationId: GetAuthenticatingAccount
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          type: string
          required: true
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
          schema:
            $ref: '#/definitions/GetAuthenticatingAccountError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /accounts/find:
    get:
      tags:
        - Accounts
      x-api-group: manage
      summary: Find Accounts
      description: >-
        Get sub-accounts owned by the authenticating user. Optionally filter by
        account status and other criteria.
      operationId: FindAccounts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_name
          in: query
          required: false
          type: string
          description: Account name.
        - name: brand
          in: query
          required: false
          type: string
          description: >-
            The value of this field is used for white labeling the Currencycloud
            user interface.
        - name: your_reference
          in: query
          required: false
          type: string
          description: User-generated reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - enabled
            - enabled_no_trading
            - disabled
          description: Account status.
        - name: street
          in: query
          required: false
          type: string
          description: First line of address.
        - name: city
          in: query
          required: false
          type: string
          description: City.
        - name: state_or_province
          in: query
          required: false
          type: string
          description: State or province.
        - name: postal_code
          in: query
          required: false
          type: string
          description: Postal code.
        - name: country
          in: query
          required: false
          type: string
          description: Two-letter country code.
        - name: spread_table
          in: query
          required: false
          type: string
          description: The name of the spread table assigned to the account.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            properties:
              accounts:
                type: array
                items:
                  $ref: '#/definitions/Account'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: account_name_is_too_short
              category: account_name
              message: account_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: account_name_is_too_long
              category: account_name
              message: account_name can not be longer than 150 character(s)
              params: '{ "maxlength" => 255 }'
            - code: brand_is_too_short
              category: brand
              message: brand can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: brand_is_too_long
              category: brand
              message: brand can not be longer than 100 character(s)
              params: '{ "maxlength" => 255 }'
            - code: your_reference_is_too_short
              category: your_reference
              message: your_reference can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: your_reference_is_too_long
              category: your_reference
              message: your_reference can not be longer than 25 character(s)
              params: '{ "maxlength" => 25 }'
            - code: status_not_in_range
              category: status
              message: 'status should be in range: enabled, disabled, enabled_no_trading'
              params: '{ "range" => "enabled, disabled, enabled_no_trading" }'
            - code: legal_entity_type_not_in_range
              category: legal_entity_type
              message: 'legal_entity_type should be in range: individual, company'
              params: '{ "range" => "individual, company" }'
            - code: street_is_too_long
              category: street
              message: street can not be longer than 150 character(s)
              params: '{ "maxlength" => 150 }'
            - code: city_is_too_long
              category: city
              message: city can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: postal_code_is_too_long
              category: postal_code
              message: postal_code can not be longer than 20 character(s)
              params: '{ "maxlength" => 20 }'
            - code: country_is_too_long
              category: country
              message: country can not be longer than 2 character(s)
              params: '{ "maxlength" => 2 }'
            - code: spread_table_is_too_short
              category: spread_table
              message: country can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: spread_table_is_too_long
              category: spread_table
              message: country can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
          schema:
            $ref: '#/definitions/FindAccountsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/accounts/{id}':
    get:
      tags:
        - Accounts
      x-api-group: manage
      summary: Get Account
      description: Get a sub-account owned by the authenticating user.
      operationId: GetAccount
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Account UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: account_not_found
              category: id
              message: Account was not found for this id
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetAccountError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
    post:
      tags:
        - Accounts
      x-api-group: manage
      summary: Update Account
      description: >-
        Update a sub-account owned by the authenticating user. On success,
        returns the updated account entity.
      operationId: UpdateAccount
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Account UUID.
        - name: account_name
          in: formData
          required: false
          type: string
          description: Account name.
        - name: legal_entity_type
          in: formData
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: brand
          in: formData
          required: false
          type: string
          description: >-
            The value of this field is used for white labeling the Currencycloud
            user interface.
        - name: your_reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: status
          in: formData
          required: false
          type: string
          enum:
            - enabled
            - enabled_no_trading
            - disabled
          default: enabled
          description: Status of the account.
        - name: street
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: city
          in: formData
          required: false
          type: string
          description: City.
        - name: state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: postal_code
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: country
          in: formData
          required: false
          type: string
          description: Two-letter country code.
        - name: spread_table
          in: formData
          required: false
          type: string
          default: no_markup
          description: The name of the spread table assigned to the account.
        - name: api_trading
          in: formData
          required: false
          type: boolean
          default: true
          description: >-
            Whether trading via the Currencycloud API is to be enabled on the
            account.
        - name: online_trading
          in: formData
          required: false
          type: boolean
          default: true
          description: Whether online trading is to be enabled on the account.
        - name: phone_trading
          in: formData
          required: false
          default: true
          type: boolean
          description: Whether phone trading is to be enabled on the account.
        - name: identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: A legal document that verifies the identity of the account owner.
        - name: identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: at_least_one_parameter
              category: base
              message: >-
                At least one parameter should be present: account_name, brand,
                your_reference, status, street, city, country, postal_code,
                spread_table
              params: ''
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: account_name_is_too_long
              category: account_name
              message: account_name can not be longer than 150 character(s)
              params: '{ "maxlength" => 150 }'
            - code: brand_is_too_long
              category: brand
              message: brand can not be longer than 100 character(s)
              params: '{ "maxlength" => 255 }'
            - code: brand_not_found
              category: brand
              message: Brand non_existing_brand wasn't found
              params: '{ "brand" => "non_existing_brand" }'
            - code: brand_account_not_broker
              category: brand
              message: Account doesn't have broker permissions
              params: '{ "brand" => "wrong_brand" }'
            - code: your_reference_is_too_long
              category: your_reference
              message: your_reference can not be longer than 25 character(s)
              params: '{ "maxlength" => 25 }'
            - code: legal_entity_type_not_in_range
              category: legal_entity_type
              message: 'legal_entity_type should be in range: individual, company'
              params: '{ "range" => "individual, company" }'
            - code: status_not_in_range
              category: status
              message: 'status should be in range: enabled, disabled, enabled_no_trading'
              params: '{ "range" => "enabled, disabled, enabled_no_trading" }'
            - code: street_is_too_long
              category: street
              message: street can not be longer than 150 character(s)
              params: '{ "maxlength" => 150 }'
            - code: city_is_too_long
              category: city
              message: city can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: postal_code_is_too_long
              category: postal_code
              message: postal_code can not be longer than 20 character(s)
              params: '{ "maxlength" => 20 }'
            - code: state_or_province_invalid_format
              category: state_or_province
              message: state or province should be a two-letter ISO 3166 code
              params: '{ "maxlength" => 2 }'
            - code: country_is_too_long
              category: country
              message: country can not be longer than 2 character(s)
              params: '{ "maxlength" => 2 }'
            - code: spread_table_is_too_long
              category: spread_table
              message: spread_table can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: identification_type_is_missing
              category: identification_type
              message: identification_type is missing
              params: ''
            - code: identification_type_is_invalid
              category: identification_type
              message: identification_type is invalid
              params: ''
            - code: identification_value_is_missing
              message: identification_value is missing
              category: identification_value
              params: ''
            - code: identification_value_is_invalid
              category: identification_value
              message: identification_value is invalid
              params: ''
          schema:
            $ref: '#/definitions/UpdateAccountError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/accounts/{account_id}/payment_charges_settings':
    get:
      tags:
      - Accounts
      x-api-group: manage
      summary: Get Payment Charges Settings
      description: Retrieve payment charges settings for given account.
      operationId: GetAccountPaymentChargesSettings
      produces:
      - application/json
      parameters:
      - name: X-Auth-Token
        in: header
        required: true
        type: string
        description: Authentication token.
      - name: account_id
        in: path
        required: true
        type: string
        description: An UUID of a sub-account or house account available in current visibility scope.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              payment_charges_settings:
                type: array
                items:
                  $ref: '#/definitions/AccountPaymentChargesSetting'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
          - code: id_is_not_valid_uuid
            category: account_id
            message: id should be in UUID format
            params: ''
          - code: account_not_found
            category: account_id
            message: Account was not found for this id
            params: ''
          schema:
            $ref: '#/definitions/GetAccountPaymentChargesSettingsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
          - code: invalid_supplied_credentials
            category: username
            message: Authentication failed with the supplied credentials
            params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
          - code: too_many_requests
            category: base
            message: Too many requests have been made to the api. Please refer to the Developer Center for more information
            params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
          - code: internal_server_error
            category: base
            message: Internal server error
            params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
          - code: service_unavailable
            category: base
            message: Service is temporary unavailable
            params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/accounts/{account_id}/payment_charges_settings/{charge_settings_id}':
    post:
      tags:
      - Accounts
      x-api-group: manage
      summary: Manage Account Payment Charges Settings
      description: Manage given Account's Payment Charge Settings (enable, disable, set default).
      operationId: ManageAccountPaymentChargesSettings
      produces:
      - application/json
      parameters:
      - name: X-Auth-Token
        in: header
        required: true
        type: string
        description: Authentication token.
      - name: account_id
        in: path
        required: true
        type: string
        description: Account UUID.
      - name: charge_settings_id
        in: path
        required: true
        type: string
        description: Account Payment Charges Setting UUID. Can be retrieved via appropriate GET call for given Account UUID.
      - name: enabled
        in: formData
        required: false
        type: boolean
        description: Enable or disable given Account Payment Charges Setting
      - name: default
        in: formData
        required: false
        type: boolean
        description: Set given Account Payment Charges Setting as default (for the cases when 'charge_type' parameter is not specified for payment).
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AccountPaymentChargesSetting'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
          - code: id_is_not_valid_uuid
            category: account_id
            message: id should be in UUID format
            params: ''
          - code: account_not_found
            category: account_id
            message: Account was not found for this id
            params: ''
          - code: edit_not_allowed
            category: permission
            message: You are not allowed to change your 'payment_charges_settings'. In order to be enabled for additional type(s) of payment charges please contact Customer Support
            params: ''
          - code: banking_charges_settings_not_found
            category: charge_settings_id
            message: Bank Charges Settings were not found for the provided ChargeSettingsId
            params: ''
          - code: unavailable_charge_type
            category: permission
            message: You are not enabled to switch on this type of charges. In order to be enabled for this option - please contact Customer Support
            params: ''
          - code: disable_and_default_charge_not_allowed
            category: invalid_value
            message: You can not disable and then default setting.
            params: ''
          - code: default_disabled_charge_not_allowed
            category: invalid_value
            message: You cannot default disabled setting.
            params: ''
          - code: disable_default_charge_not_allowed
            category: invalid_value
            message: You can not disable default settings.
            params: ''
          - code: set_default_to_false_not_allowed
            category: invalid_value
            message: You cannot disable default charge type. Please update the charge type not to be default and then disable it.
            params: ''
          schema:
            $ref: '#/definitions/ManageAccountPaymentChargesSettingsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
          - code: invalid_supplied_credentials
            category: username
            message: Authentication failed with the supplied credentials
            params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
          - code: too_many_requests
            category: base
            message: Too many requests have been made to the api. Please refer to the Developer Center for more information
            params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
          - code: internal_server_error
            category: base
            message: Internal server error
            params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
          - code: service_unavailable
            category: base
            message: Service is temporary unavailable
            params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /accounts/create:
    post:
      tags:
        - Accounts
      x-api-group: manage
      summary: Create Account
      description: 'Create a new sub-account. On success, returns the new account entity.'
      operationId: CreateAccount
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_name
          in: formData
          required: true
          type: string
          description: Account name.
        - name: legal_entity_type
          in: formData
          required: true
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: street
          in: formData
          required: true
          type: string
          description: First line of address.
        - name: city
          in: formData
          required: true
          type: string
          description: City.
        - name: postal_code
          in: formData
          required: true
          type: string
          description: Postal code.
        - name: country
          in: formData
          required: true
          type: string
          description: Two-letter country code.
        - name: brand
          in: formData
          required: false
          type: string
          description: >-
            The value of this field is used for white labeling the Currencycloud
            user interface.
        - name: your_reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: status
          in: formData
          required: false
          type: string
          enum:
            - enabled
            - enabled_no_trading
            - disabled
          default: enabled
          description: Account status.
        - name: state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: spread_table
          in: formData
          required: false
          type: string
          default: no_markup
          description: The name of the spread table assigned to the account.
        - name: api_trading
          in: formData
          required: false
          type: boolean
          description: Allows the account to make trades via the Currencycloud API.
        - name: online_trading
          in: formData
          required: false
          type: boolean
          description: Allows the account to make trades via Currencycloud Direct.
        - name: phone_trading
          in: formData
          required: false
          type: boolean
          description: Allows the account to make trades via phone.
        - name: identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: A legal document that verifies the identity of the account owner.
        - name: identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number. Required if "identification_type" is provided.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Account'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: account_name_is_too_short
              category: account_name
              message: account_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: account_name_is_too_long
              category: account_name
              message: account_name can not be longer than 150 character(s)
              params: '{ "maxlength" => 150 }'
            - code: account_name_is_required
              category: account_name
              message: account_name is required
              params: ''
            - code: brand_is_too_short
              category: brand
              message: brand can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: brand_is_too_long
              category: brand
              message: brand can not be longer than 100 character(s)
              params: '{ "maxlength" => 255 }'
            - code: brand_not_found
              category: brand
              message: Brand non_existing_brand wasn't found
              params: '{ "brand" => "non_existing_brand" }'
            - code: brand_account_not_broker
              category: brand
              message: Account doesn't have broker permissions
              params: '{ "brand" => "wrong_brand" }'
            - code: your_reference_is_too_long
              category: your_reference
              message: your_reference can not be longer than 25 character(s)
              params: '{ "maxlength" => 25 }'
            - code: status_not_in_range
              category: status
              message: 'status should be in range: enabled, disabled, enabled_no_trading'
              params: '{ "range" => "enabled, disabled, enabled_no_trading" }'
            - code: legal_entity_type_not_in_range
              category: legal_entity_type
              message: 'legal_entity_type should be in range: individual, company'
              params: '{ "range" => "individual, company" }'
            - code: street_is_too_long
              category: street
              message: street can not be longer than 150 character(s)
              params: '{ "maxlength" => 150 }'
            - code: street_is_required
              category: street
              message: Street is required
              params: ''
            - code: city_is_too_long
              category: city
              message: city can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: city_is_required
              category: city
              message: City is required
              params: ''
            - code: postal_code_is_too_long
              category: postal_code
              message: postal_code can not be longer than 20 character(s)
              params: '{ "maxlength" => 20 }'
            - code: postal_code_is_required
              category: postal_code
              message: Postal code is required
              params: ''
            - code: state_or_province_invalid_format
              category: state_or_province
              message: state or province should be a two-letter ISO 3166 code
              params: '{ "maxlength" => 2 }'
            - code: country_is_too_long
              category: country
              message: country can not be longer than 2 character(s)
              params: '{ "maxlength" => 2 }'
            - code: country_is_required
              category: country
              message: Country is required
              params: ''
            - code: spread_table_is_too_long
              category: spread_table
              message: spread_table can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: identification_type_is_missing
              category: identification_type
              message: identification_type is missing
              params: ''
            - code: identification_type_is_invalid
              category: identification_type
              message: identification_type is invalid
              params: ''
            - code: identification_value_is_missing
              category: identification_value
              message: identification_value is missing
              params: ''
            - code: identification_value_is_invalid
              category: identification_value
              message: identification_value is invalid
              params: ''
            - code: state_or_province_is_required
              category: state_or_province
              message: 'State or province is required for US, CA and MX'
              params: ''
            - code: invalid_extra_parameters
              category: base
              message: Invalid extra parameters extra_parameter
              params: '{ "parameters" => "extra_parameter" }'
          schema:
            $ref: '#/definitions/CreateAccountError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/balances/{currency}':
    get:
      tags:
        - Balances
      x-api-group: manage
      summary: Get Balance
      description: >-
        Get the balance for a currency from the account of the authenticating
        user.
      operationId: GetBalance
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: path
          required: true
          type: string
          description: Three-digit currency code.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Balance'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_currency
              category: currency
              message: XYZ is not a valid ISO 4217 currency code
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: currency is not a valid ISO 4217 currency code
              params: '{ "type" => "currency" }'
            - code: on_behalf_of_is_not_valid_uuid
              category: on_behalf_of
              message: on_behalf_of should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: unsupported_currency
              category: currency
              message: Unsupported currency XYZ
              params: ''
          schema:
            $ref: '#/definitions/GetBalanceError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /balances/find:
    get:
      tags:
        - Balances
      x-api-group: manage
      summary: Find Balances
      description: >-
        Search for currency balances in the main account or a sub-account owned
        by the authenticating user.
      operationId: FindBalances
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: amount_from
          in: query
          required: false
          type: number
          description: Minimum balance amount.
        - name: amount_to
          in: query
          required: false
          type: number
          description: Maximum balance amount.
        - name: as_at_date
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - clients
            - own
            - all
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          default: created_at
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  $ref: '#/definitions/Balance'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
          schema:
            $ref: '#/definitions/FindBalancesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /beneficiaries/find:
    get:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Find Beneficiaries
      description: >-
        Find beneficiaries attached to the account or any sub-account owned by
        the authenticating user.
      operationId: FindBeneficiaries
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: bank_account_holder_name
          in: query
          required: false
          type: string
          description: Bank account holder's name.
        - name: beneficiary_country
          in: query
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
        - name: currency
          in: query
          required: false
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: account_number
          in: query
          required: false
          type: string
          description: Bank account number.
        - name: routing_code_type
          in: query
          required: false
          type: string
          enum:
            - sort_code
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - aba
            - clabe
            - cnaps
            - ifsc
          description: Local payment routing system.
        - name: routing_code_value
          in: query
          required: false
          type: string
          description: Routing code.
        - name: bic_swift
          in: query
          required: false
          type: string
          description: BIC/SWIFT code.
        - name: iban
          in: query
          required: false
          type: string
          description: IBAN code.
        - name: default_beneficiary
          in: query
          required: false
          type: boolean
          description: >-
            Payments are made automatically to default beneficiaries when a
            beneficiary is not specified.
        - name: bank_name
          in: query
          required: false
          type: string
          description: Bank name.
        - name: bank_account_type
          in: query
          required: false
          type: string
          enum:
            - checkings
            - savings
          description: Bank account type.
        - name: name
          in: query
          required: false
          type: string
          description: Beneficiary name.
        - name: beneficiary_entity_type
          in: query
          required: false
          type: string
          enum:
            - individual
            - company
          description: Legal entity.
        - name: beneficiary_company_name
          in: query
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "company".
        - name: beneficiary_first_name
          in: query
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_last_name
          in: query
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_city
          in: query
          required: false
          type: string
          description: City.
        - name: beneficiary_postcode
          in: query
          required: false
          type: string
          description: Post code.
        - name: beneficiary_state_or_province
          in: query
          required: false
          type: string
          description: State or province.
        - name: beneficiary_date_of_birth
          in: query
          required: false
          type: string
          format: date
          description: >-
            If "beneficiary_entity_type" is "company", date of registration. If
            "beneficiary_entity_type" is "individual", date of birth. ISO 8601
            format YYYY-MM-DD.
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - own
            - clients
            - all
          default: own
          description: 'Search "own" account, "clients" sub-accounts, or "all" accounts.'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
        - name: beneficiary_external_reference
          in: query
          required: false
          type: string
          description: Beneficiary external reference
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              beneficiaries:
                type: array
                items:
                  $ref: '#/definitions/Beneficiary'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: bank_account_holder_name_is_too_short
              category: bank_account_holder_name
              message: bank_account_holder_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_account_holder_name_is_too_long
              category: bank_account_holder_name
              message: bank_account_holder_name can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_country_is_in_invalid_format
              category: beneficiary_country
              message: beneficiary_country is in invalid format
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: currency is in invalid format
              params: ''
            - code: bank_name_is_too_short
              category: bank_name
              message: bank_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_name_is_too_long
              category: bank_name
              message: bank_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: bank_account_type_not_in_range
              category: bank_account_type
              message: 'bank_account_type should be in range: checking, savings'
              params: '{ "range" => "checking, savings" }'
            - code: account_number_is_too_short
              category: account_number
              message: account_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: account_number_is_too_long
              category: account_number
              message: account_number can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: incorrect_mapping
              category: base
              message: Following parameters must have same keys
              params: '{ "parameters" => "routing_code_value,routing_code_type" }'
            - code: routing_code_type_is_too_short
              category: routing_code_type
              message: routing_code_type can not be shorter than 1 character(s)
              params: '{ "minlength" => 1, "indices" => ["0", "1"] }'
            - code: routing_code_type_is_too_long
              category: routing_code_type
              message: routing_code_type can not be longer than 50 character(s)
              params: '{ "maxlength" => 50, "indices" => ["0", "1"] }'
            - code: routing_code_type_type_is_wrong
              category: routing_code_type
              message: routing_code_type should be of hash type
              params: '{ "type" => "hash" }'
            - code: routing_code_type_not_included_in_list
              category: routing_code_type
              message: One or more of routing_code_type items are not included in list
              params: >-
                { "list" =>
                "sort_code,bsb_code,institution_no,bank_code,branch_code,aba,clabe
                }
            - code: routing_code_type_too_many_items
              category: routing_code_type
              message: routing_code_type should have less than 50 items
              params: '{ "maxcount" => 50 }'
            - code: beneficiary_date_of_birth_type_is_wrong
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: beneficiary_date_of_birth_is_incorrect
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth is incorrect
              params: ''
            - code: beneficiary_date_of_birth_is_earlier
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be later than 1900-01-01
              params: '{ "min_date" => "1900-01-01" }'
            - code: beneficiary_date_of_birth_is_after
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be earlier than todays date
              params: '{ "max_date" => "Todays Date" }'
            - code: routing_code_value_is_too_short
              category: routing_code_value
              message: routing_code_value can not be shorter than 1 character(s)
              params: '{ "minlength" => 1, "indices" => ["0", "1"] }'
            - code: routing_code_value_is_too_long
              category: routing_code_value
              message: routing_code_value can not be longer than 50 character(s)
              params: '{ "maxlength" => 50, "indices" => ["0", "1"] }'
            - code: routing_code_value_type_is_wrong
              category: routing_code_value
              message: routing_code_value should be of hash type
              params: '{ "type" => "hash" }'
            - code: bic_swift_is_in_invalid_format
              category: bic_swift
              message: bic_swift is in invalid format
              params: ''
            - code: iban_is_too_long
              category: iban
              message: iban can not be longer than 34 character(s)
              params: '{ "maxlength" => 34 }'
            - code: iban_is_too_short
              category: iban
              message: iban can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: iban_is_in_invalid_format
              category: iban
              message: iban is in invalid format
              params: ''
            - code: default_beneficiary_type_is_wrong
              category: default_beneficiary
              message: default_beneficiary should be of boolean type
              params: '{ "type" => "boolean" }'
            - code: name_is_too_short
              category: name
              message: name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: name_is_too_long
              category: name
              message: name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: order_asc_desc_not_in_range
              category: order_asc_desc
              message: 'order_asc_desc should be in range: asc, desc'
              params: '{ "range" => "asc, desc" }'
            - code: order_not_in_range
              category: order
              message: >-
                order should be in range: bank_account_holder_name, beneficiary_country, currency, account_number,
                bic_swift, iban, default_beneficiary, bank_address, name, bank_account_type, beneficiary_entity_type,
                beneficiary_city, beneficiary_address, beneficiary_company_name, beneficiary_first_name,
                beneficiary_last_name, beneficiary_state_or_province, beneficiary_postcode, created_at, updated_at
              params: >-
                { "range" => "bank_account_holder_name, beneficiary_country, currency, account_number, bic_swift, iban,
                default_beneficiary, bank_address, name, bank_account_type, beneficiary_entity_type, beneficiary_city,
                beneficiary_address, beneficiary_company_name, beneficiary_first_name, beneficiary_last_name,
                beneficiary_state_or_province, beneficiary_postcode, created_at, updated_at" }
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_is_not_valid_uuid
              category: on_behalf_of
              message: on_behalf_of should be in UUID format
              params: ''
            - code: beneficiary_external_reference_is_too_short
              category: beneficiary_external_reference
              message: beneficiary_external_reference can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_external_reference_is_too_long
              category: beneficiary_external_reference
              message: beneficiary_external_reference can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: cope_not_in_range
              category: scope
              message: >-
                scope should be in range: own, all, clients
              params: '{ "range" => "own, all, clients" }'
            - code: beneficiary_entity_type_not_in_range
              category: beneficiary_entity_type
              message: >-
                beneficiary_entity_type should be in range: individual, company
              params: '{ "range" => "individual, company" }'
            - code: beneficiary_company_name_is_too_short
              category: beneficiary_company_name
              message: beneficiary_company_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_company_name_is_too_long
              category: beneficiary_company_name
              message: beneficiary_company_name can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_first_name_is_too_short
              category: beneficiary_first_name
              message: beneficiary_first_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_first_name_is_too_long
              category: beneficiary_first_name
              message: beneficiary_first_name can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_last_name_is_too_short
              category: beneficiary_last_name
              message: beneficiary_last_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_last_name_is_too_long
              category: beneficiary_last_name
              message: beneficiary_last_name can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_city_is_too_short
              category: beneficiary_city
              message: beneficiary_city can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_city_is_too_long
              category: beneficiary_city
              message: beneficiary_city can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_postcode_is_too_short
              category: beneficiary_postcode
              message: beneficiary_postcode can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_postcode_is_too_long
              category: beneficiary_postcode
              message: beneficiary_postcode can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_state_or_province_is_too_short
              category: beneficiary_state_or_province
              message: beneficiary_state_or_province can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_state_or_province_is_too_long
              category: beneficiary_state_or_province
              message: beneficiary_state_or_province can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: page_type_is_wrong
              category: page
              message: page should be of integer type
              params: '{ "type" => "integer" }'
            - code: page_is_too_small
              category: page
              message: page can not be smaller than 1
              params: '{ "minvalue" => 1 }'
            - code: per_page_type_is_wrong
              category: per_page
              message: per_page should be of integer type
              params: '{ "type" => "integer" }'
            - code: per_page_is_too_small
              category: per_page
              message: per_page can not be smaller than 1
              params: '{ "minvalue" => 1 }'
            - code: order_asc_desc_not_in_range
              category: order_asc_desc
              message: >-
                order_asc_desc should be in range: asc, desc
              params: '{ "range" => "asc, desc" }'
          schema:
            $ref: '#/definitions/FindBeneficiariesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/beneficiaries/{id}':
    get:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Get Beneficiary
      description: Get a beneficiary.
      operationId: GetBeneficiary
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Beneficiary UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: beneficiary_not_found
              category: id
              message: Beneficiary was not found for this id
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
          schema:
            $ref: '#/definitions/GetBeneficiaryError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Update Beneficiary
      description: >-
        Update an existing beneficiary. On success, returns the updated
        beneficiary entity.
      operationId: UpdateBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Beneficiary UUID.
        - name: name
          in: formData
          required: false
          type: string
          description: Beneficiary name.
        - name: bank_account_holder_name
          in: formData
          required: false
          type: string
          description: Bank account holder's name.
        - name: bank_country
          in: formData
          required: false
          type: string
          description: >-
            Country in which the beneficiary's bank account is held. Two-letter
            country code.
        - name: currency
          in: formData
          required: false
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: email
          in: formData
          required: false
          type: string
          description: Email address.
        - name: beneficiary_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: beneficiary_country
          in: formData
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
        - name: account_number
          in: formData
          required: false
          type: string
          description: Bank account number.
        - name: routing_code_type_1
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
            - ifsc
          description: Local payment routing system.
        - name: routing_code_value_1
          in: formData
          required: false
          type: string
          description: Routing code for "routing_code_type_1".
        - name: routing_code_type_2
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_2
          in: formData
          required: false
          type: string
          description: Routing code for "routing_code_type_2".
        - name: 'payment_types[]'
          in: formData
          required: false
          type: array
          items:
            type: string
            enum:
              - priority
              - regular
          default:
            - regular
          description: >-
            Currencycloud supports two types of payment: "priority", made using
            the SWIFT network; and "regular", made using the local bank network.
        - name: bic_swift
          in: formData
          required: false
          type: string
          description: BIC/SWIFT code.
        - name: iban
          in: formData
          required: false
          type: string
          description: IBAN code.
        - name: default_beneficiary
          in: formData
          required: false
          type: boolean
          default: false
          description: >-
            Payments are made automatically to default beneficiaries when a
            beneficiary is not specified.
        - name: bank_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: bank_name
          in: formData
          required: false
          type: string
          description: Bank name.
        - name: bank_account_type
          in: formData
          required: false
          type: string
          enum:
            - checkings
            - savings
          description: Bank account type.
        - name: beneficiary_entity_type
          in: formData
          required: false
          type: string
          enum:
            - individual
            - company
          description: Legal entity.
        - name: beneficiary_company_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "company".
        - name: beneficiary_first_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_last_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_city
          in: formData
          required: false
          type: string
          description: City.
        - name: beneficiary_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: beneficiary_state_or_province
          in: formData
          required: false
          type: string
          format: date
          description: State or province.
        - name: beneficiary_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If "beneficiary_entity_type" is "company", date of registration. If
            "beneficiary_entity_type" is "individual", date of birth. ISO 8601
            format YYYY-MM-DD.
        - name: beneficiary_identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - clave_unica_de_registro_de_poblacion
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - incorporation_number
            - others
          description: >-
            A legal document that verifies the identity of the beneficiary.
            Required documentation will vary depending on the country in which
            the beneficiary's bank account is held.
        - name: beneficiary_identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: beneficiary_not_found
              category: id
              message: Beneficiary was not found for this id
              params: ''
            - code: bank_account_holder_name_is_too_short
              category: bank_account_holder_name
              message: bank_account_holder_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_account_holder_name_is_too_long
              category: bank_account_holder_name
              message: bank_account_holder_name can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: email_is_too_short
              category: email
              message: email can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: email_is_too_long
              category: email
              message: email can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_address_is_too_short
              category: beneficiary_address
              message: beneficiary_address can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_address_is_too_long
              category: beneficiary_address
              message: beneficiary_address can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_address_is_missing
              category: beneficiary_address
              message: Beneficiary address is missing
              params: ''
            - code: account_number_is_too_short
              category: account_number
              message: account_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: account_number_is_too_long
              category: account_number
              message: account_number can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: account_number_is_missing
              category: account_number
              message: Account number is missing
              params: ''
            - code: account_number_is_invalid
              category: account_number
              message: Account number is in invalid format
              params: ''
            - code: routing_code_value_1_is_too_short
              category: routing_code_value_1
              message: routing_code_value_1 can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: routing_code_value_1_is_too_long
              category: routing_code_value_1
              message: routing_code_value_1 can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: routing_code_value_2_is_too_short
              category: routing_code_value_2
              message: routing_code_value_2 can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: routing_code_value_2_is_too_long
              category: routing_code_value_2
              message: routing_code_value_2 can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: iban_is_too_short
              category: iban
              message: iban can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: iban_is_too_long
              category: iban
              message: iban can not be longer than 34 character(s)
              params: '{ "maxlength" => 34 }'
            - code: iban_is_missing
              category: iban
              message: IBAN is missing
              params: ''
            - code: iban_is_invalid
              category: iban
              message: IBAN is in invalid format
              params: ''
            - code: bic_swift_is_too_short
              category: bic_swift
              message: bic_swift can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bic_swift_is_too_long
              category: bic_swift
              message: bic_swift can not be longer than 11 character(s)
              params: '{ "maxlength" => 11 }'
            - code: bic_swift_is_missing
              category: bic_swift
              message: BIC/SWIFT is missing
              params: ''
            - code: bic_swift_is_invalid
              category: bic_swift
              message: BIC/SWIFT is in invalid format
              params: ''
            - code: bank_address_is_missing
              category: bank_address
              message: Bank address is missing
              params: ''
            - code: bank_address_is_too_short
              category: bank_address
              message: bank_address can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_address_is_too_long
              category: bank_address
              message: bank_address can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: bank_name_is_too_short
              category: bank_name
              message: bank_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_name_is_too_long
              category: bank_name
              message: bank_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: bank_name_is_missing
              category: bank_name
              message: Bank name is missing
              params: ''
            - code: bank_name_is_invalid
              category: bank_name
              message: Bank name is in invalid format
              params: ''
            - code: bank_account_type_not_in_range
              category: bank_account_type
              message: 'bank_account_type should be in range: checking, savings'
              params: '{ "range" => "checking, savings" }'
            - code: bank_account_type_is_missing
              category: bank_account_type
              message: Beneficiary bank account type is missing
              params: ''
            - code: name_is_too_short
              category: name
              message: name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: name_is_too_long
              category: name
              message: name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: default_beneficiary_type_is_wrong
              category: default_beneficiary
              message: default_beneficiary should be of boolean type
              params: '{ "type" => "boolean" }'
            - code: routing_code_type_1_not_in_range
              category: routing_code_type_1
              message: >-
                routing_code_type_1 should be in range: sort_code, bsb_code,
                institution_no, bank_code, branch_code, aba, clabe, cnaps
              params: >-
                { "range" => "sort_code, bsb_code, institution_no, bank_code,
                branch_code, aba, clabe, cnaps" }
            - code: routing_code_type_2_not_in_range
              category: routing_code_type_2
              message: >-
                routing_code_type_2 should be in range: sort_code, bsb_code,
                institution_no, bank_code, branch_code, aba, clabe, cnaps
              params: >-
                { "range => "sort_code, bsb_code, institution_no, bank_code,
                branch_code, aba, clabe, cnaps" }
            - code: beneficiary_country_is_required
              category: beneficiary_country
              message: beneficiary_country is required
              params: ''
            - code: beneficiary_country_is_in_invalid_format
              category: beneficiary_country
              message: beneficiary_country is in invalid format
              params: ''
            - code: beneficiary_entity_type_not_in_range
              category: beneficiary_entity_type
              message: 'beneficiary_entity_type should be in range: individual, company'
              params: '{ "range" => "individual, company" }'
            - code: beneficiary_entity_type_is_missing
              category: beneficiary_entity_type
              message: Beneficiary entity type is missing
              params: ''
            - code: beneficiary_company_name_is_missing
              category: beneficiary_company_name
              message: Beneficiary company name is missing
              params: ''
            - code: beneficiary_first_name_is_missing
              category: beneficiary_first_name
              message: Beneficiary first name is missing
              params: ''
            - code: beneficiary_last_name_is_missing
              category: beneficiary_last_name
              message: Beneficiary last name is missing
              params: ''
            - code: beneficiary_city_is_missing
              category: beneficiary_city
              message: Beneficiary city is missing
              params: ''
            - code: beneficiary_state_or_province_is_missing
              category: beneficiary_state_or_province
              message: Beneficiary state or province is missing
              params: ''
            - code: beneficiary_state_or_province_is_not_supported
              category: beneficiary_state_or_province
              message: Beneficiary state or province is not supported
              params: ''
            - code: beneficiary_postcode_is_missing
              category: beneficiary_postcode
              message: Beneficiary postcode is missing
              params: ''
            - code: beneficiary_date_of_birth_type_is_wrong
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: beneficiary_date_of_birth_is_incorrect
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth is incorrect
              params: ''
            - code: beneficiary_date_of_birth_is_earlier
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be later
              params: ''
            - code: beneficiary_date_of_birth_is_after
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be earlier
              params: ''
            - code: identification_type_is_missing
              category: beneficiary_identification_type
              message: identification_type is missing
              params: ''
            - code: identification_type_is_invalid
              category: beneficiary_identification_type
              message: identification_type is invalid
              params: ''
            - code: identification_value_is_missing
              category: beneficiary_identification_value
              message: identification_value is missing
              params: ''
            - code: identification_value_is_invalid
              category: beneficiary_identification_value
              message: identification_value is invalid
              params: ''
            - code: bank_country_is_in_invalid_format
              category: bank_country
              message: bank_country is in invalid format
              params: ''
            - code: bank_country_is_not_supported
              category: bank_country
              message: bank_country is not supported
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: currency is in invalid format
              params: ''
            - code: currency_code_is_invalid
              category: currency
              message: You can not use this currency with beneficiaries
              params: ''
            - code: unique_value_parameters
              category: base
              message: >-
                Following parameters should not have same values:
                routing_code_type_1, routing_code_type_2
              params: '{ "parameters" => "routing_code_type_1, routing_code_type_2" }'
            - code: at_least_one_parameter
              category: base
              message: >-
                At least one parameter should be present:
                bank_account_holder_name, beneficiary_country, bank_country,
                currency, email, beneficiary_address, account_number,
                routing_code_type_1, routing_code_type_2, routing_code_value_1,
                routing_code_value_2, bic_swift, iban, default_beneficiary,
                bank_address, bank_name, name
              params: >-
                { "parameters" => "bank_account_holder_name,
                beneficiary_country, bank_country, currency, email,
                beneficiary_address, account_number, routing_code_type_1,
                routing_code_type_2, routing_code_value_1, routing_code_value_2,
                bic_swift, iban, default_beneficiary, bank_address, bank_name,
                name" }
            - code: payment_types_not_in_range
              category: payment_types
              message: 'payment_types should be in range: priority, regular'
              params: '{ "range" => "priority, regular" }'
            - code: sort_code_is_missing
              category: routing_code
              message: Sort code is missing
              params: ''
            - code: sort_code_is_invalid
              category: routing_code
              message: Sort code is in invalid format
              params: ''
            - code: aba_is_missing
              category: routing_code
              message: ABA is missing
              params: ''
            - code: aba_is_invalid
              category: routing_code
              message: ABA is in invalid format
              params: ''
            - code: bsb_code_is_missing
              category: routing_code
              message: BSB code is missing
              params: ''
            - code: bsb_code_is_invalid
              category: routing_code
              message: BSB code is in invalid format
              params: ''
            - code: branch_code_is_missing
              category: routing_code
              message: Branch code is missing
              params: ''
            - code: branch_code_is_invalid
              category: routing_code
              message: Branch code is in invalid format
              params: ''
            - code: institution_no_is_missing
              category: routing_code
              message: Institution no is missing
              params: ''
            - code: institution_no_is_invalid
              category: routing_code
              message: Institution no is in invalid format
              params: ''
            - code: bank_code_is_missing
              category: routing_code
              message: Bank code is missing
              params: ''
            - code: bank_code_is_invalid
              category: routing_code
              message: Bank code is in invalid format
              params: ''
            - code: clabe_is_missing
              category: routing_code
              message: CLABE is missing
              params: ''
            - code: clabe_is_invalid
              category: routing_code
              message: CLABE is in invalid format
              params: ''
            - code: beneficiary_update_failed
              category: beneficiary
              message: Beneficiary was not updated
              params: ''
            - code: beneficiary_details_are_missing
              category: beneficiary
              message: >-
                Following beneficiary details are missing:
                beneficiary_company_name
              params: '{ "missing_details" => ["beneficiary_company_name"] }'
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/UpdateBeneficiaryError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /beneficiaries/create:
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Create Beneficiary
      description: >-
        Create a new beneficiary. On success, returns the new beneficiary
        entity.
      operationId: CreateBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: name
          in: formData
          required: true
          type: string
          description: Beneficiary name.
        - name: bank_account_holder_name
          in: formData
          required: true
          type: string
          description: Bank account holder's name.
        - name: bank_country
          in: formData
          required: true
          type: string
          description: >-
            Two-letter code for the country in which the beneficiary's bank
            account is held.
        - name: currency
          in: formData
          required: true
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: email
          in: formData
          required: false
          type: string
          description: Email address.
        - name: beneficiary_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: beneficiary_country
          in: formData
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
        - name: account_number
          in: formData
          required: false
          type: string
          description: Bank account number.
        - name: routing_code_type_1
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
            - ifsc
          description: Local payment routing system.
        - name: routing_code_value_1
          in: formData
          required: false
          type: string
          description: Routing code for "routing_code_type_1".
        - name: routing_code_type_2
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_2
          in: formData
          required: false
          type: string
          description: Routing code for "routing_code_type_2".
        - name: bic_swift
          in: formData
          required: false
          type: string
          description: BIC/SWIFT code.
        - name: iban
          in: formData
          required: false
          type: string
          description: IBAN code.
        - name: default_beneficiary
          in: formData
          required: false
          type: boolean
          default: false
          description: >-
            Payments are made automatically to default beneficiaries when a
            beneficiary is not specified.
        - name: bank_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: bank_name
          in: formData
          required: false
          type: string
          description: Bank name.
        - name: bank_account_type
          in: formData
          required: false
          type: string
          enum:
            - checkings
            - savings
          description: Bank account type.
        - name: beneficiary_entity_type
          in: formData
          required: false
          type: string
          enum:
            - individual
            - company
          description: Legal entity.
        - name: beneficiary_company_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "company".
        - name: beneficiary_first_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_last_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_city
          in: formData
          required: false
          type: string
          description: City.
        - name: beneficiary_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: beneficiary_state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: beneficiary_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If "beneficiary_entity_type" is "company", date of registration. If
            "beneficiary_entity_type" is "individual", date of birth. ISO 8601
            format YYYY-MM-DD.
        - name: beneficiary_identification_type
          in: formData
          required: false
          type: string
          enum:
          - none
          - drivers_license
          - social_security_number
          - green_card
          - passport
          - visa
          - matricula_consular
          - registro_federal_de_contribuyentes
          - clave_unica_de_registro_de_poblacion
          - credential_de_elector
          - social_insurance_number
          - citizenship_papers
          - drivers_license_canadian
          - existing_credit_card_details
          - employer_identification_number
          - national_id
          - incorporation_number
          - others
          description: >-
            A legal document that verifies the identity of the beneficiary.
            Required documentation will vary depending on the country in which
            the beneficiary's bank account is held.
        - name: beneficiary_identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: 'payment_types[]'
          in: formData
          required: false
          type: array
          items:
            type: string
            enum:
              - priority
              - regular
          default:
            - regular
          description: >-
            Currencycloud supports two types of payments: "priority", made using
            the SWIFT network; and "regular", made using the local bank network.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: bank_account_holder_name_is_required
              category: bank_account_holder_name
              message: bank_account_holder_name is required
              params: ''
            - code: bank_account_holder_name_is_too_short
              category: bank_account_holder_name
              message: bank_account_holder_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_account_holder_name_is_too_long
              category: bank_account_holder_name
              message: bank_account_holder_name can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: email_is_too_short
              category: email
              message: email can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: email_is_too_long
              category: email
              message: email can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_address_is_too_short
              category: beneficiary_address
              message: beneficiary_address can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: beneficiary_address_is_too_long
              category: beneficiary_address
              message: beneficiary_address can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: beneficiary_address_is_missing
              category: beneficiary_address
              message: Beneficiary address is missing
              params: ''
            - code: account_number_is_too_short
              category: account_number
              message: account_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: account_number_is_too_long
              category: account_number
              message: account_number can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: account_number_is_missing
              category: account_number
              message: Account number is missing
              params: ''
            - code: account_number_is_invalid
              category: account_number
              message: Account number is in invalid format
              params: ''
            - code: routing_code_value_1_is_too_short
              category: routing_code_value_1
              message: routing_code_value_1 can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: routing_code_value_1_is_too_long
              category: routing_code_value_1
              message: routing_code_value_1 can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: routing_code_value_2_is_too_short
              category: routing_code_value_2
              message: routing_code_value_2 can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: routing_code_value_2_is_too_long
              category: routing_code_value_2
              message: routing_code_value_2 can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: iban_is_too_short
              category: iban
              message: iban can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: iban_is_too_long
              category: iban
              message: iban can not be longer than 34 character(s)
              params: '{ "maxlength" => 34 }'
            - code: iban_is_missing
              category: iban
              message: IBAN is missing
              params: ''
            - code: iban_is_invalid
              category: iban
              message: IBAN is in invalid format
              params: ''
            - code: bic_swift_is_too_short
              category: bic_swift
              message: bic_swift can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bic_swift_is_too_long
              category: bic_swift
              message: bic_swift can not be longer than 11 character(s)
              params: '{ "maxlength" => 11 }'
            - code: bic_swift_is_missing
              category: bic_swift
              message: BIC/SWIFT is missing
              params: ''
            - code: bic_swift_is_invalid
              category: bic_swift
              message: BIC/SWIFT is in invalid format
              params: ''
            - code: bank_address_is_missing
              category: bank_address
              message: Bank address is missing
              params: ''
            - code: bank_address_is_too_short
              category: bank_address
              message: bank_address can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_address_is_too_long
              category: bank_address
              message: bank_address can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: bank_name_is_too_short
              category: bank_name
              message: bank_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_name_is_too_long
              category: bank_name
              message: bank_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: bank_name_is_missing
              category: bank_name
              message: Bank name is missing
              params: ''
            - code: bank_name_is_invalid
              category: bank_name
              message: Bank name is in invalid format
              params: ''
            - code: bank_account_type_not_in_range
              category: bank_account_type
              message: 'bank_account_type should be in range: checking, savings'
              params: '{ "range" => "checking, savings" }'
            - code: bank_account_type_is_missing
              category: bank_account_type
              message: Beneficiary bank account type is missing
              params: ''
            - code: name_is_too_short
              category: name
              message: name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: name_is_too_long
              category: name
              message: name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100  }'
            - code: default_beneficiary_type_is_wrong
              category: default_beneficiary
              message: default_beneficiary should be of boolean type
              params: '{ "type" => "boolean"  }'
            - code: routing_code_type_1_not_in_range
              category: routing_code_type_1
              message: >-
                routing_code_type_1 should be in range: sort_code, bsb_code,
                institution_no, bank_code, branch_code, aba, clabe, cnaps
              params: >-
                { "range" => "sort_code, bsb_code, institution_no, bank_code,
                branch_code, aba, clabe, cnaps" }
            - code: routing_code_type_2_not_in_range
              category: routing_code_type_2
              message: >-
                routing_code_type_2 should be in range: sort_code, bsb_code,
                institution_no, bank_code, branch_code, aba, clabe, cnaps
              params: >-
                { "range => "sort_code, bsb_code, institution_no, bank_code,
                branch_code, aba, clabe, cnaps" }
            - code: beneficiary_country_is_required
              category: beneficiary_country
              message: beneficiary_country is required
              params: ''
            - code: beneficiary_country_is_in_invalid_format
              category: beneficiary_country
              message: beneficiary_country is in invalid format
              params: ''
            - code: beneficiary_entity_type_not_in_range
              category: beneficiary_entity_type
              message: 'beneficiary_entity_type should be in range: individual, company'
              params: '{ "range" => "individual, company" }'
            - code: beneficiary_entity_type_is_missing
              category: beneficiary_entity_type
              message: Beneficiary entity type is missing
              params: ''
            - code: beneficiary_company_name_is_missing
              category: beneficiary_company_name
              message: Beneficiary company name is missing
              params: ''
            - code: beneficiary_first_name_is_missing
              category: beneficiary_first_name
              message: Beneficiary first name is missing
              params: ''
            - code: beneficiary_last_name_is_missing
              category: beneficiary_last_name
              message: Beneficiary last name is missing
              params: ''
            - code: beneficiary_city_is_missing
              category: beneficiary_city
              message: Beneficiary city is missing
              params: ''
            - code: beneficiary_state_or_province_is_missing
              category: beneficiary_state_or_province
              message: Beneficiary state or province is missing
              params: ''
            - code: beneficiary_state_or_province_is_not_supported
              category: beneficiary_state_or_province
              message: Beneficiary state or province is not supported
              params: ''
            - code: beneficiary_postcode_is_missing
              category: beneficiary_postcode
              message: Beneficiary postcode is missing
              params: ''
            - code: beneficiary_date_of_birth_type_is_wrong
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: beneficiary_date_of_birth_is_incorrect
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth is incorrect
              params: ''
            - code: beneficiary_date_of_birth_is_earlier
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be later
              params: ''
            - code: beneficiary_date_of_birth_is_after
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be earlier
              params: ''
            - code: identification_type_is_missing
              category: beneficiary_identification_type
              message: identification_type is missing
              params: ''
            - code: identification_type_is_invalid
              category: beneficiary_identification_type
              message: identification_type is invalid
              params: ''
            - code: identification_value_is_missing
              category: beneficiary_identification_value
              message: identification_value is missing
              params: ''
            - code: identification_value_is_invalid
              category: beneficiary_identification_value
              message: identification_value is invalid
              params: ''
            - code: bank_country_is_required
              category: bank_country
              message: bank_country is required
              params: ''
            - code: bank_country_is_in_invalid_format
              category: bank_country
              message: bank_country is in invalid format
              params: ''
            - code: bank_country_is_not_supported
              category: bank_country
              message: bank_country is not supported
              params: ''
            - code: currency_is_required
              category: currency
              message: currency is required
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: currency is in invalid format
              params: ''
            - code: currency_code_is_invalid
              category: currency
              message: You can not use this currency with beneficiaries
              params: ''
            - code: unique_value_parameters
              category: base
              message: >-
                Following parameters should not have same values:
                routing_code_type_1, routing_code_type_2
              params: '{ "parameters" => "routing_code_type_1, routing_code_type_2" }'
            - code: unsupported_beneficiary_country_code
              category: base
              message: Beneficiary country is not supported
              params: ''
            - code: beneficiary_create_failed
              category: beneficiary
              message: Beneficiary was not created
              params: ''
            - code: beneficiary_details_are_missing
              category: beneficiary
              message: >-
                Following beneficiary details are missing:
                beneficiary_company_name
              params: '{ "missing_details" => ["beneficiary_company_name"] }'
            - code: payment_types_not_in_range
              category: payment_types
              message: 'payment_types should be in range: priority, regular'
              params: '{ "range" => "priority, regular" }'
            - code: sort_code_is_missing
              category: routing_code
              message: Sort code is missing
              params: ''
            - code: sort_code_is_invalid
              category: routing_code
              message: Sort code is in invalid format
              params: ''
            - code: aba_is_missing
              category: routing_code
              message: ABA is missing
              params: ''
            - code: aba_is_invalid
              category: routing_code
              message: ABA is in invalid format
              params: ''
            - code: bsb_code_is_missing
              category: routing_code
              message: BSB code is missing
              params: ''
            - code: bsb_code_is_invalid
              category: routing_code
              message: BSB code is in invalid format
              params: ''
            - code: branch_code_is_missing
              category: routing_code
              message: Branch code is missing
              params: ''
            - code: branch_code_is_invalid
              category: routing_code
              message: Branch code is in invalid format
              params: ''
            - code: institution_no_is_missing
              category: routing_code
              message: Institution no is missing
              params: ''
            - code: institution_no_is_invalid
              category: routing_code
              message: Institution no is in invalid format
              params: ''
            - code: bank_code_is_missing
              category: routing_code
              message: Bank code is missing
              params: ''
            - code: bank_code_is_invalid
              category: routing_code
              message: Bank code is in invalid format
              params: ''
            - code: clabe_is_missing
              category: routing_code
              message: CLABE is missing
              params: ''
            - code: clabe_is_invalid
              category: routing_code
              message: CLABE is in invalid format
              params: ''
            - code: cnaps_is_missing
              category: routing_code
              message: CNAPS number is missing
              params: ''
            - code: cnaps_is_invalid
              category: routing_code
              message: CNAPS number is in invalid format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/CreateBeneficiaryError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/beneficiaries/{id}/delete':
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Delete Beneficiary
      description: >-
        Delete a beneficiary associated with a sub-account. If the deletion is
        successful, the beneficiary's final state is returned.
      operationId: DeleteBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Beneficiary UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: beneficiary_not_found
              category: id
              message: Beneficiary was not found for this id
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/DeleteBeneficiaryError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /beneficiaries/validate:
    post:
      tags:
        - Beneficiaries
      x-api-group: pay
      summary: Validate Beneficiary
      description: >-
        Validate a new beneficiary's bank details, without actually creating a
        record of the beneficiary. On success, returns an object that represents
        the entity that would be created if the beneficiary were saved.
      operationId: ValidateBeneficiary
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: bank_country
          in: formData
          required: true
          type: string
          description: >-
            Two-letter code for the country in which the beneficiary's bank
            account is held.
        - name: currency
          in: formData
          required: true
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: beneficiary_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: beneficiary_country
          in: formData
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
        - name: account_number
          in: formData
          required: false
          type: string
          description: Bank account number.
        - name: routing_code_type_1
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_1
          in: formData
          required: false
          type: string
          description: Routing code for "routing_code_type_1".
        - name: routing_code_type_2
          in: formData
          required: false
          type: string
          enum:
            - sort_code
            - aba
            - bsb_code
            - institution_no
            - bank_code
            - branch_code
            - clabe
            - cnaps
          description: Local payment routing system.
        - name: routing_code_value_2
          in: formData
          required: false
          type: string
          description: Routing code for "routing_code_type_2".
        - name: bic_swift
          in: formData
          required: false
          type: string
          description: BIC/SWIFT code.
        - name: iban
          in: formData
          required: false
          type: string
          description: IBAN code.
        - name: bank_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: bank_name
          in: formData
          required: false
          type: string
          description: Bank name.
        - name: bank_account_type
          in: formData
          required: false
          type: string
          enum:
            - checkings
            - savings
          description: Bank account type.
        - name: beneficiary_entity_type
          in: formData
          required: false
          type: string
          enum:
            - individual
            - company
          description: Legal entity.
        - name: beneficiary_company_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "company".
        - name: beneficiary_first_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_last_name
          in: formData
          required: false
          type: string
          description: Required if "beneficiary_entity_type" is "individual".
        - name: beneficiary_city
          in: formData
          required: false
          type: string
          description: City.
        - name: beneficiary_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: beneficiary_state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: beneficiary_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If "beneficiary_entity_type" is "company", date of registration. If
            "beneficiary_entity_type" is "individual", date of birth. ISO 8601
            format YYYY-MM-DD.
        - name: beneficiary_identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - clave_unica_de_registro_de_poblacion
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - incorporation_number
            - others
          description: >-
            A legal document that verifies the identity of the beneficiary.
            Required documentation will vary depending on the country in which
            the beneficiary's bank account is held.
        - name: beneficiary_identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: 'payment_types[]'
          in: formData
          required: false
          type: array
          items:
            type: string
            enum:
              - priority
              - regular
          default:
            - regular
          description: >-
            Currencycloud supports two types of payments: "priority", made using
            the SWIFT network; and "regular", made using the local bank network.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Beneficiary'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: beneficiary_country_is_required
              category: beneficiary_country
              message: beneficiary_country is required
              params: ''
            - code: beneficiary_country_is_in_invalid_format
              category: beneficiary_country
              message: beneficiary_country is in invalid format
              params: ''
            - code: beneficiary_entity_type_not_in_range
              category: beneficiary_entity_type
              message: 'beneficiary_entity_type should be in range: individual, company'
              params: '{ "range" => "individual, company" }'
            - code: beneficiary_entity_type_is_missing
              category: beneficiary_entity_type
              message: Beneficiary entity type is missing
              params: ''
            - code: beneficiary_company_name_is_missing
              category: beneficiary_company_name
              message: Beneficiary company name is missing
              params: ''
            - code: beneficiary_first_name_is_missing
              category: beneficiary_first_name
              message: Beneficiary first name is missing
              params: ''
            - code: beneficiary_last_name_is_missing
              category: beneficiary_last_name
              message: Beneficiary last name is missing
              params: ''
            - code: beneficiary_city_is_missing
              category: beneficiary_city
              message: Beneficiary city is missing
              params: ''
            - code: beneficiary_state_or_province_is_missing
              category: beneficiary_state_or_province
              message: Beneficiary state or province is missing
              params: ''
            - code: beneficiary_state_or_province_is_not_supported
              category: beneficiary_state_or_province
              message: Beneficiary state or province is not supported
              params: ''
            - code: beneficiary_postcode_is_missing
              category: beneficiary_postcode
              message: Beneficiary postcode is missing
              params: ''
            - code: beneficiary_date_of_birth_type_is_wrong
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: beneficiary_date_of_birth_is_incorrect
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth is incorrect
              params: ''
            - code: beneficiary_date_of_birth_is_earlier
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be later
              params: ''
            - code: beneficiary_date_of_birth_is_after
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be earlier
              params: ''
            - code: account_number_is_too_short
              category: account_number
              message: account_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: account_number_is_too_long
              category: account_number
              message: account_number can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: account_number_is_missing
              category: account_number
              message: Account number is missing
              params: ''
            - code: account_number_is_invalid
              category: account_number
              message: Account number is in invalid format
              params: ''
            - code: routing_code_value_1_is_too_short
              category: routing_code_value_1
              message: routing_code_value_1 can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: routing_code_value_1_is_too_long
              category: routing_code_value_1
              message: routing_code_value_1 can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: routing_code_value_2_is_too_short
              category: routing_code_value_2
              message: routing_code_value_2 can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: routing_code_value_2_is_too_long
              category: routing_code_value_2
              message: routing_code_value_2 can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: iban_is_too_short
              category: iban
              message: iban can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: iban_is_too_long
              category: iban
              message: iban can not be longer than 34 character(s)
              params: '{ "maxlength" => 34 }'
            - code: iban_is_missing
              category: iban
              message: IBAN is missing
              params: ''
            - code: iban_is_invalid
              category: iban
              message: IBAN is in invalid format
              params: ''
            - code: bic_swift_is_too_short
              category: bic_swift
              message: bic_swift can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bic_swift_is_too_long
              category: bic_swift
              message: bic_swift can not be longer than 11 character(s)
              params: '{ "maxlength" => 11 }'
            - code: bic_swift_is_missing
              category: bic_swift
              message: BIC/SWIFT is missing
              params: ''
            - code: bic_swift_is_invalid
              category: bic_swift
              message: BIC/SWIFT is in invalid format
              params: ''
            - code: bank_address_is_missing
              category: bank_address
              message: Bank address is missing
              params: ''
            - code: bank_address_is_too_short
              category: bank_address
              message: bank_address can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_address_is_too_long
              category: bank_address
              message: bank_address can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: bank_name_is_too_short
              category: bank_name
              message: bank_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: bank_name_is_too_long
              category: bank_name
              message: bank_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: bank_name_is_missing
              category: bank_name
              message: Bank name is missing
              params: ''
            - code: bank_name_is_invalid
              category: bank_name
              message: Bank name is in invalid format
              params: ''
            - code: bank_account_type_not_in_range
              category: bank_account_type
              message: 'bank_account_type should be in range: checking, savings'
              params: '{ "range" => "checking, savings" }'
            - code: bank_account_type_is_missing
              category: bank_account_type
              message: Beneficiary bank account type is missing
              params: ''
            - code: routing_code_type_1_not_in_range
              category: routing_code_type_1
              message: >-
                routing_code_type_1 should be in range: sort_code, bsb_code,
                institution_no, bank_code, branch_code, aba, clabe, cnaps
              params: >-
                { "range" => "sort_code, bsb_code, institution_no, bank_code,
                branch_code, aba, clabe, cnaps" }
            - code: routing_code_type_2_not_in_range
              category: routing_code_type_2
              message: >-
                routing_code_type_2 should be in range: sort_code, bsb_code,
                institution_no, bank_code, branch_code, aba, clabe, cnaps
              params: >-
                { "range => "sort_code, bsb_code, institution_no, bank_code,
                branch_code, aba, clabe, cnaps" }
            - code: bank_country_is_required
              category: bank_country
              message: bank_country is required
              params: ''
            - code: bank_country_is_in_invalid_format
              category: bank_country
              message: bank_country is in invalid format
              params: ''
            - code: bank_country_is_not_supported
              category: bank_country
              message: bank_country is not supported
              params: ''
            - code: currency_is_required
              category: currency
              message: currency is required
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: currency is in invalid format
              params: ''
            - code: currency_code_is_invalid
              category: currency
              message: You can not use this currency with beneficiaries
              params: ''
            - code: unique_value_parameters
              category: base
              message: >-
                Following parameters should not have same values:
                routing_code_type_1, routing_code_type_2
              params: '{ "parameters" => "routing_code_type_1, routing_code_type_2" }'
            - code: beneficiary_create_failed
              category: beneficiary
              message: Beneficiary was not created
              params: ''
            - code: beneficiary_details_are_missing
              category: beneficiary
              message: >-
                Following beneficiary details are missing:
                beneficiary_company_name
              params: '{ "missing_details" => ["beneficiary_company_name"] }'
            - code: payment_types_not_in_range
              category: payment_types
              message: 'payment_types should be in range: priority, regular'
              params: '{ "range" => "priority, regular" }'
            - code: sort_code_is_missing
              category: routing_code
              message: Sort code is missing
              params: ''
            - code: sort_code_is_invalid
              category: routing_code
              message: Sort code is in invalid format
              params: ''
            - code: aba_is_missing
              category: routing_code
              message: ABA is missing
              params: ''
            - code: aba_is_invalid
              category: routing_code
              message: ABA is in invalid format
              params: ''
            - code: bsb_code_is_missing
              category: routing_code
              message: BSB code is missing
              params: ''
            - code: bsb_code_is_invalid
              category: routing_code
              message: BSB code is in invalid format
              params: ''
            - code: branch_code_is_missing
              category: routing_code
              message: Branch code is missing
              params: ''
            - code: branch_code_is_invalid
              category: routing_code
              message: Branch code is in invalid format
              params: ''
            - code: institution_no_is_missing
              category: routing_code
              message: Institution no is missing
              params: ''
            - code: institution_no_is_invalid
              category: routing_code
              message: Institution no is in invalid format
              params: ''
            - code: bank_code_is_missing
              category: routing_code
              message: Bank code is missing
              params: ''
            - code: bank_code_is_invalid
              category: routing_code
              message: Bank code is in invalid format
              params: ''
            - code: clabe_is_missing
              category: routing_code
              message: CLABE is missing
              params: ''
            - code: clabe_is_invalid
              category: routing_code
              message: CLABE is in invalid format
              params: ''
            - code: beneficiary_update_failed
              category: beneficiary
              message: Beneficiary was not updated
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/ValidateBeneficiaryError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /contacts/current:
    get:
      tags:
        - Contacts
      x-api-group: manage
      summary: Get Authenticating Contact
      description: Get the contact record for the authenticating user.
      operationId: GetAuthenticatingContact
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /contacts/find:
    get:
      tags:
        - Contacts
      x-api-group: manage
      summary: Find Contacts
      description: Get contacts that match search parameters.
      operationId: FindContacts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_name
          in: query
          required: false
          type: string
          description: Account name.
        - name: account_id
          in: query
          required: false
          type: string
          description: Sub-account UUID.
        - name: first_name
          in: query
          required: false
          type: string
          description: Contact first name.
        - name: last_name
          in: query
          required: false
          type: string
          description: Contact last name.
        - name: email_address
          in: query
          required: false
          type: string
          description: Email address.
        - name: your_reference
          in: query
          required: false
          type: string
          description: User-generated reference code.
        - name: phone_number
          in: query
          required: false
          type: string
          description: Phone number.
        - name: login_id
          in: query
          required: false
          type: string
          description: Currencycloud login ID.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - enabled
            - disabled
          description: Contact status.
        - name: locale
          in: query
          required: false
          type: string
          description: 'Locale code ("en", "en-US", "fr-FR").'
        - name: timezone
          in: query
          required: false
          type: string
          description: 'Timezone ("Europe/London", "America/New_York").'
        - name: page
          in: query
          required: false
          type: string
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: string
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/FindContactsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/contacts/{id}':
    get:
      tags:
        - Contacts
      x-api-group: manage
      summary: Get Contact
      description: Get a contact.
      operationId: GetContact
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: contact_not_found
              category: id
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetContactError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
    post:
      tags:
        - Contacts
      x-api-group: manage
      summary: Update Contact
      description: >-
        Update an existing contact. On success, returns the updated contact
        entity.
      operationId: UpdateContact
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Contact UUID.
        - name: first_name
          in: query
          required: false
          type: string
          description: Contact first name.
        - name: last_name
          in: query
          required: false
          type: string
          description: Contact last name.
        - name: email_address
          in: query
          required: false
          type: string
          description: Email address.
        - name: your_reference
          in: query
          required: false
          type: string
          description: User-generated reference code.
        - name: phone_number
          in: query
          required: false
          type: string
          description: Phone number.
        - name: mobile_phone_number
          in: query
          required: false
          type: string
          description: Mobile phone number.
        - name: login_id
          in: query
          required: false
          type: string
          description: Currencycloud login ID.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - enabled
            - disabled
          description: Contact status.
        - name: locale
          in: query
          required: false
          type: string
          description: 'Locale code ("en", "en-US", "fr-FR").'
        - name: timezone
          in: query
          required: false
          type: string
          description: 'Timezone ("Europe/London", "America/New_York").'
        - name: date_of_birth
          in: query
          required: false
          type: string
          format: date
          description: Date of birth. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: at_least_one_parameter
              category: base
              message: >-
                At least one parameter should be present: first_name, last_name,
                email_address, phone_number, mobile_phone_number, login_id,
                locale, timezone, status
              params: ''
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: first_name_is_too_short
              category: first_name
              message: first_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: first_name_is_too_long
              category: first_name
              message: first_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: last_name_is_too_short
              category: last_name
              message: last_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: last_name_is_too_long
              category: last_name
              message: last_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: email_address_is_too_short
              category: email_address
              message: email_address can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: email_address_is_too_long
              category: email_address
              message: email_address can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: email_address_is_in_invalid_format
              category: email_address
              message: email_address is in invalid format
              params: ''
            - code: phone_number_is_too_short
              category: phone_number
              message: phone_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: phone_number_is_too_long
              category: phone_number
              message: phone_number can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: mobile_phone_number_is_too_short
              category: mobile_phone_number
              message: mobile_phone_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: mobile_phone_number_is_too_long
              category: mobile_phone_number
              message: mobile_phone_number can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: login_id_in_use
              category: login_id
              message: 'login_id already in use: john.smith@company.com'
              params: ''
            - code: login_id_is_too_long
              category: login_id
              message: login_id can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: locale_is_too_short
              category: locale
              message: locale can not be shorter than 2 character(s)
              params: '{ "minlength" => 2 }'
            - code: locale_is_too_long
              category: locale
              message: locale can not be longer than 5 character(s)
              params: '{ "maxlength" => 5 }'
            - code: timezone_is_too_short
              category: timezone
              message: timezone can not be shorter than 2 character(s)
              params: '{ "minlength" => 2 }'
            - code: timezone_is_too_long
              category: timezone
              message: timezone can not be longer than 5 character(s)
              params: '{ "maxlength" => 5 }'
            - code: status_not_in_range
              category: status
              message: 'status should be in range: enabled, not_enabled'
              params: ''
            - code: date_of_birth_type_is_wrong
              category: date_of_birth
              message: date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: contact_not_found
              category: id
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/UpdateContactError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /contacts/create:
    post:
      tags:
        - Contacts
      x-api-group: manage
      summary: Create Contact
      description: >-
        Create a new contact and attach to a sub-account. On success, returns
        the new contact entity.
      operationId: CreateContact
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_id
          in: formData
          required: true
          type: string
          description: Account UUID.
        - name: first_name
          in: formData
          required: true
          type: string
          description: Contact first name.
        - name: last_name
          in: formData
          required: true
          type: string
          description: Contact last name.
        - name: email_address
          in: formData
          required: true
          type: string
          description: Email address.
        - name: phone_number
          in: formData
          required: true
          type: string
          description: Phone number.
        - name: your_reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: mobile_phone_number
          in: formData
          required: false
          type: string
          description: Mobile phone number.
        - name: login_id
          in: formData
          required: false
          type: string
          description: Currencycloud login ID.
        - name: status
          in: formData
          required: false
          type: string
          enum:
            - enabled
            - not_enabled
          description: Contact status.
        - name: locale
          in: formData
          required: false
          type: string
          description: 'Locale code ("en", "en-US", "fr-FR").'
        - name: timezone
          in: formData
          required: false
          type: string
          description: 'Timezone ("Europe/London", "America/New_York").'
        - name: date_of_birth
          in: formData
          required: false
          type: string
          description: Date of birth. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Contact'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: account_id_is_in_invalid_format
              category: account_id
              message: account_id is in invalid format
              params: ''
            - code: first_name_is_too_short
              category: first_name
              message: first_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: first_name_is_too_long
              category: first_name
              message: first_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: last_name_is_too_short
              category: last_name
              message: last_name can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: last_name_is_too_long
              category: last_name
              message: last_name can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: email_address_is_too_short
              category: email_address
              message: email_address can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: email_address_is_too_long
              category: email_address
              message: email_address can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: email_address_is_in_invalid_format
              category: email_address
              message: email_address is in invalid format
              params: ''
            - code: phone_number_is_too_short
              category: phone_number
              message: phone_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: phone_number_is_too_long
              category: phone_number
              message: phone_number can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: mobile_phone_number_is_too_short
              category: mobile_phone_number
              message: mobile_phone_number can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: mobile_phone_number_is_too_long
              category: mobile_phone_number
              message: mobile_phone_number can not be longer than 100 character(s)
              params: '{ "maxlength" => 100 }'
            - code: login_id_is_too_short
              category: login_id
              message: login_id can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: login_id_in_use
              category: login_id
              message: login_id already in use
              params: ''
            - code: login_id_is_too_long
              category: login_id
              message: login_id can not be longer than 50 character(s)
              params: '{ "maxlength" => 50 }'
            - code: locale_is_too_short
              category: locale
              message: locale can not be shorter than 2 character(s)
              params: '{ "minlength" => 2 }'
            - code: locale_is_too_long
              category: locale
              message: locale can not be longer than 5 character(s)
              params: '{ "maxlength" => 5 }'
            - code: timezone_is_too_short
              category: timezone
              message: timezone can not be shorter than 2 character(s)
              params: '{ "minlength" => 2 }'
            - code: timezone_is_too_long
              category: timezone
              message: timezone can not be longer than 5 character(s)
              params: '{ "maxlength" => 5 }'
            - code: status_not_in_range
              category: status
              message: 'status should be in range: enabled, not_enabled'
              params: ''
            - code: date_of_birth_type_is_wrong
              category: date_of_birth
              message: date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: date_of_birth_is_required
              category: date_of_birth
              message: >-
                Date of Birth is a required field. Please provide date of birth
                (YYYY-MM-DD)
              params: ''
          schema:
            $ref: '#/definitions/CreateContactError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /conversions/create:
    post:
      tags:
        - Conversions
      x-api-group: convert
      summary: Create Conversion
      description: 'Create a new conversion. On success, returns the new conversion entity.'
      operationId: CreateConversion
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: buy_currency
          in: formData
          required: true
          type: string
          description: Currency purchased. Three-digit code.
        - name: sell_currency
          in: formData
          required: true
          type: string
          description: Currency sold. Three-digit code.
        - name: fixed_side
          in: formData
          required: true
          type: string
          enum:
            - buy
            - sell
          description: Fix the buy or sell currency.
        - name: amount
          in: formData
          required: true
          type: string
          description: Amount of the fixed buy or sell currency.
        - name: term_agreement
          in: formData
          required: true
          type: boolean
          description: Indicates agreement to terms and conditions.
        - name: conversion_date
          in: formData
          required: false
          type: string
          format: date
          description: Earliest delivery date. ISO 8601 format YYYY-MM-DD.
        - name: client_buy_amount
          in: formData
          required: false
          type: string
          description: Client buy amount.
        - name: client_sell_amount
          in: formData
          required: false
          type: string
          description: Client sell amount.
        - name: reason
          in: formData
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: unique_request_id
          in: formData
          required: false
          type: string
          description: User-generated idempotency key.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Conversion'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_extra_parameters
              category: base
              message: Invalid extra parameters
              params: '{ "parameters" => { "extra_param" => "extra_value" } }'
            - code: buy_currency_is_in_invalid_format
              category: buy_currency
              message: buy_currency is not a valid ISO 4217 currency code
              params: '{ "type" => "currency" }'
            - code: buy_currency_is_required
              category: buy_currency
              message: buy_currency is required
              params: ''
            - code: invalid_buy_currency
              category: buy_currency
              message: buy_currency is invalid
              params: ''
            - code: sell_currency_is_required
              category: sell_currency
              message: sell_currency is required
              params: ''
            - code: sell_currency_is_in_invalid_format
              category: sell_currency
              message: sell_currency is not a valid ISO 4217 currency code
              params: '{ "type" => "currency" }'
            - code: invalid_sell_currency
              category: sell_currency
              message: sell_currency is invalid
              params: ''
            - code: amount_is_required
              category: amount
              message: amount is required
              params: ''
            - code: conversion_above_limit
              category: amount
              message: >-
                Conversion of GBP equivalent 30000.01 exceeds your limit of
                30000.00
              params: >-
                { "amount" => "30000.01", "limit_amount" => "30000.00", "ccy" =>
                "GBP" }
            - code: conversion_below_limit
              category: amount
              message: >-
                Conversion of GBP equivalent 999.99 is less than your lower
                limit of 1000.00
              params: >-
                { "amount" => "999.99", "limit_amount" => "1000.00", "ccy" =>
                "GBP" }
            - code: amount_type_is_wrong
              category: amount
              message: amount should be of numeric type
              params: '{ "type" => "numeric" }'
            - code: reason_is_required
              category: reason
              message: reason is required
              params: ''
            - code: reason_is_too_short
              category: reason
              message: reason can not be shorter than 1 character(s)
              params: '{ "minlength" => 1 }'
            - code: client_rate_is_in_invalid_format
              category: client_rate
              message: client_rate should be of numeric type with 4 dp
              params: '{ "type" => "numeric_with_precision", "precision" => 4 }'
            - code: invalid_client_rate
              category: client_rate
              message: client_rate is invalid
              params: '{ "client_rate" => "1.455543..1.778997" }'
            - code: client_rate_is_required
              category: client_rate
              message: The client_rate is required if you supply currency_pair
              params: ''
            - code: fixed_side_is_required
              category: fixed_side
              message: fixed_side is required
              params: ''
            - code: fixed_side_not_in_range
              category: fixed_side
              message: 'fixed_side should be in range: buy, sell'
              params: '{ "range" => "buy, sell" }'
            - code: term_agreement_is_required
              category: term_agreement
              message: term_agreement is required
              params: ''
            - code: term_agreement_type_is_wrong
              category: term_agreement
              message: term_agreement should be of boolean type
              params: '{ "type" => "boolean" }'
            - code: conversion_create_failed
              category: conversion_create_failed
              message: Conversion create failed
              params: ''
            - code: currency_pair_is_in_invalid_format
              category: currency_pair
              message: currency_pair is not a valid ISO 4217 currency code
              params: '{ "type" => "currency_pair" }'
            - code: invalid_currency_pair
              category: invalid_currency_pair
              message: >-
                The currency_pair should be the real market pair of the
                buy_currency and sell_currency
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_is_not_valid_uuid
              category: on_behalf_of
              message: on_behalf_of should be in UUID format
              params: ''
            - code: on_behalf_of_is_required
              category: on_behalf_of
              message: >-
                You should do this conversion on behalf of someone if you supply
                client_rate
              params: ''
            - code: currency_pair_is_required
              category: currency_pair_is_required
              message: The currency_pair is required if you supply client_rate
              params: ''
            - code: variable_value_dates_not_permitted
              category: variable_value_dates_not_permitted
              message: >-
                Sorry - you are not currently setup to trade with variable value
                dates, please contact us on the phone if you want to change this
                or wish to trade now on the phone.
              params: ''
            - code: client_buy_amount_is_in_invalid_format
              category: client_buy_amount
              message: client_buy_amount should be of numeric type with 2 dp
              params: '{ "type" => "client_buy_amount" }'
            - code: client_sell_amount_is_in_invalid_format
              category: client_sell_amount
              message: client_sell_amount should be of numeric type with 2 dp
              params: '{ "type" => "client_sell_amount" }'
            - code: cannot_fix_client_sell_on_fixed_sell_side
              category: cannot_fix_client_sell_on_fixed_sell_side
              message: >-
                You cannot specify a fixed client_sell_amount when the fixed
                side for a conversion is the sell side
              params: '{ "type" => "client_sell_amount" }'
            - code: client_buy_amount_exceeds_partner_buy_amount
              category: client_buy_amount_exceeds_partner_buy_amount
              message: >-
                The client buy amount specified is greater than the amount that
                you would be buying and is thus invalid
              params: '{ "type" => "client_buy_amount" }'
            - code: partner_sell_amount_exceeds_client_sell_amount
              category: partner_sell_amount_exceeds_client_sell_amount
              message: >-
                The client sell amount specified is less than the amount that
                you would be selling and is thus invalid
              params: '{ "type" => "client_sell_amount" }'
            - code: missing_partner_spread_table_data
              category: missing_partner_spread_table_data
              message: >-
                Sorry, the online partner pricing for the amount of the currency
                pair you are trying to trade has not been set up
              params: ''
            - code: missing_client_spread_table_data
              category: missing_client_spread_table_data
              message: >-
                Sorry, the online client pricing for the amount of the currency
                pair you are trying to trade has not been set up
              params: ''
            - code: fixed_amounts_not_permitted_for_this_user
              category: fixed_amounts_not_permitted_for_this_user
              message: >-
                You are not permitted to specify a fixed client_buy_amount or
                client_sell_amount for this customer
              params: ''
            - code: invalid_client_rate_combination
              category: invalid_client_rate_combination
              message: >-
                You cannot specify a client rate and client currency pair
                alongside a client buy amount or client sell amount
              params: ''
            - code: duplicate_request
              category: duplicate_request
              message: >-
                The unique_request_id provided for this conversion has already
                been used, please provide a new unique_request_id to
                successfully submit this conversion
              params: ''
          schema:
            $ref: '#/definitions/CreateConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /conversions/find:
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Find Conversions
      description: Find conversions based on search parameters.
      operationId: FindConversions
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - awaiting_funds
            - funds_sent
            - funds_arrived
            - trade_settled
            - closed
          description: Conversion status.
        - name: partner_status
          in: query
          required: false
          type: string
          enum:
            - awaiting_funds
            - funds_sent
            - funds_arrived
            - trade_settled
            - closed
          description: 'Conversion status, as displayed to contacts of the sub-account.'
        - name: buy_currency
          in: query
          required: false
          type: string
          description: The currency purchased. Three-digital code.
        - name: sell_currency
          in: query
          required: false
          type: string
          description: The currency sold. Three-digit code.
        - name: 'conversion_ids[]'
          in: query
          required: false
          type: array
          items:
            type: string
          description: One or more conversion UUIDs to filter out of results.
        - name: created_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: created_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: conversion_date_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: conversion_date_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: currency_pair
          in: query
          required: false
          type: string
          description: 'Concatenated string of the two currencies traded, eg. "USDEUR".'
        - name: partner_buy_amount_from
          in: query
          required: false
          type: string
          description: Minimum buy amount (sub-accounts).
        - name: partner_buy_amount_to
          in: query
          required: false
          type: string
          description: Maximum buy amount (sub-accounts).
        - name: partner_sell_amount_from
          in: query
          required: false
          type: string
          description: Minimum sell amount (sub-accounts).
        - name: partner_sell_amount_to
          in: query
          required: false
          type: string
          description: Maximum sell amount (sub-accounts).
        - name: buy_amount_from
          in: query
          required: false
          type: string
          description: Minimum buy amount.
        - name: buy_amount_to
          in: query
          required: false
          type: string
          description: Maximum buy amount.
        - name: sell_amount_from
          in: query
          required: false
          type: string
          description: Minimum sell amount.
        - name: sell_amount_to
          in: query
          required: false
          type: string
          description: Maximum sell amount.
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - all
            - clients
            - own
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: settlement_date_from
          in: query
          required: false
          type: string
          description: >-
            Earliest date when sold currency debited. Any valid ISO 8601 format,
            eg. "2017-12-31T23:59:59+00:00".
        - name: settlement_date_to
          in: query
          required: false
          type: string
          description: >-
            Latest date when sold currency debited. Any valid ISO 8601 format,
            eg. "2017-12-31T23:59:59+00:00".
        - name: unique_request_id
          in: query
          required: false
          type: string
          description: User-generated idempotency key.
        - name: bulk_upload_id
          in: query
          required: false
          type: string
          description: Bulk upload reference code.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: integer
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              conversions:
                type: array
                items:
                  $ref: '#/definitions/Conversion'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/FindConversionsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/conversions/{id}':
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Get Conversion
      description: Get a conversion record.
      operationId: GetConversion
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Conversion UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Conversion'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /conversions/profit_and_loss:
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Retrieve Profit / Loss
      description: >-
        Returns a JSON structure that contains information related to actions on
        conversions that have generated profit or loss, including the profit or
        loss amount
      operationId: ConversionProfitAndLoss
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: account_id
          in: formData
          required: false
          type: string
          description: ID of the Account that the Conversion belongs to.
        - name: contact_id
          in: formData
          required: false
          type: string
          description: ID of the Contact that did the cancellation.
        - name: conversion_id
          in: formData
          required: false
          type: string
          description: ID of the cancelled conversion.
        - name: event_type
          in: formData
          required: false
          type: string
          description: 'Event type, in this case ''self_service_cancellation'''
        - name: event_date_time_from
          in: formData
          required: false
          type: string
          description: >-
            Allows you to return profit and losses will be done from on or after
            a defined date/time. ISO 8601 standard.
        - name: event_date_time_to
          in: formData
          required: false
          type: string
          description: >-
            Allows you to return profit and losses will be done from on or
            before a defined date/time. ISO 8601 standard.
        - name: amount_from
          in: formData
          required: false
          type: string
          description: >-
            Allows you to return profit and losses based on a minimum profit or
            loss amount.
        - name: amount_to
          in: formData
          required: false
          type: string
          description: >-
            Allows you to return profit and losses based on a maximum profit or
            loss amount.
        - name: currency
          in: formData
          required: false
          type: string
          description: The currency of the profit and loss. ISO 4217 standard.
        - name: scope
          in: formData
          required: false
          type: string
          description: >-
            Scope allows contacts to search all profit and losses at all account
            levels. Defaults to own. own - allows to search profit and losses on
            the main account clients - allows to search profit and losses of
            account sub accounts all - allows to search balances profit and
            losses account and subaccounts
        - name: page
          in: formData
          required: false
          type: string
          description: Returns a specific page within the results of a search.
        - name: per_page
          in: formData
          required: false
          type: string
          description: Maximum number of entries to return per page of results.
        - name: order
          in: formData
          required: false
          type: string
          description: The field to order entries by.
        - name: order_asc_desc
          in: formData
          required: false
          type: string
          description: Whether the order is ascending (asc) or descending (desc).
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              conversion_profit_and_losses:
                type: array
                items:
                  $ref: '#/definitions/ConversionCancellation'
              pagination:
                $ref: '#/definitions/Pagination'
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: invalid_extra_parameters
              category: base
              message: Invalid extra parameters extra_parameter
              params: '{ "parameters" => "extra_parameter" }'
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/conversions/{id}/date_change_quote':
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Quote Conversion Date Change
      description: >-
        Returns a JSON structure containing the quote for changing the date of
        the specified conversion.
      operationId: ConversionDateChangeQuote
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Conversion UUID.
        - name: new_settlement_date
          in: query
          required: true
          type: string
          description: Desired new settlement date of conversion
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionDateChange'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /conversions/{id}/date_change:
    post:
      tags:
        - Conversions
      x-api-group: convert
      summary: Conversion Date Change
      description: >-
        Changes the date of the conversion identified by the provided unique id
        {id}
      operationId: ConversionDateChange
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: ID of the conversion that is being changed
        - name: new_settlement_date
          required: true
          type: string
          in: formData
          description: New conversion settlement date
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionDateChange'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: invalid_extra_parameters
              category: base
              message: Invalid extra parameters extra_parameter
              params: '{ "parameters" => "extra_parameter" }'
            - code: new_settlement_date_invalid_in_past
              category: new_settlement_date
              message: New settlement date has to be today or greater than today's date
              params: ''
            - code: new_settlement_date_invalid
              category: new_settlement_date
              message: >-
                Invalid new settlement date, next valid date time is -
                YYYY-MM-DDT15:30:00Z
              params: ''
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/conversions/{id}/split_preview':
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Split Preview
      description: Returns a JSON structure of conversion split preview details.
      operationId: GetConversionSplitPreview
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Conversion UUID.
        - name: amount
          required: true
          type: string
          in: formData
          description: The amount at which to split this conversion.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionSplit'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '403':
          description: Forbidden.
          x-errors:
            - code: permission_denied
              message: You do not have permission 'split_conversion' to perform this operation
              params: ''
          schema:
            $ref: '#/definitions/ForbiddenError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /conversions/{id}/split:
    post:
      tags:
        - Conversions
      x-api-group: convert
      summary: Conversion Split
      description: Returns a JSON structure of conversion split execute details.
      operationId: SplitConversion
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: ID of the conversion that is being cancelled
        - name: amount
          required: true
          type: string
          in: formData
          description: The amount at which to split this conversion.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionSplit'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: invalid_extra_parameters
              category: base
              message: Invalid extra parameters extra_parameter
              params: '{ "parameters" => "extra_parameter" }'
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '403':
          description: Forbidden.
          x-errors:
            - code: permission_denied
              message: You do not have permission 'split_conversion' to perform this operation
              params: ''
          schema:
            $ref: '#/definitions/ForbiddenError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/conversions/{id}/split_history':
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Conversion Split History
      description: Returns a JSON structure of conversion split history details.
      operationId: GetConversionSplitHistory
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Conversion UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionSplitHistory'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '403':
          description: Forbidden.
          x-errors:
            - code: permission_denied
              message: You do not have permission 'split_conversion' to perform this operation
              params: ''
          schema:
            $ref: '#/definitions/ForbiddenError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/conversions/{id}/cancellation_quote':
    get:
      tags:
        - Conversions
      x-api-group: convert
      summary: Quote Conversion Cancellation
      description: >-
        Returns a JSON structure containing the quote for cancelling the
        specified conversion.
      operationId: ConversionCancellationQuote
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Conversion UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionCancellationQuote'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /conversions/{id}/cancel:
    post:
      tags:
        - Conversions
      x-api-group: convert
      summary: Cancel a Conversion
      description: 'Cancels the conversion identified by the provided unique id {id}'
      operationId: CancelConversion
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: ID of the conversion that is being cancelled
        - name: notes
          required: false
          type: string
          in: formData
          description: Notes describing the reason for cancellation.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionProfitAndLoss'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: invalid_extra_parameters
              category: base
              message: Invalid extra parameters extra_parameter
              params: '{ "parameters" => "extra_parameter" }'
          schema:
            $ref: '#/definitions/GetConversionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /ibans/find:
    get:
      tags:
        - IBANs
      x-api-group: collect
      summary: Find IBANs
      description: >-
        Returns a JSON structure with details of the IBANs for the specified
        accounts.
      operationId: FindIBANs
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: scope
          in: query
          required: false
          type: string
          description: >-
            Scope allows the logged in account to search all IBANs at all
            account levels. Defaults to all. own: search for IBANs on the main
            account clients: search for IBANs of account sub accounts all:
            search for IBANs of account and sub-accounts
          enum:
            - own
            - all
            - clients
          default: all
        - name: currency
          in: query
          required: false
          type: string
          description: Currency in which the balance is held. Three-digit currency code.
        - name: account_id
          in: query
          required: false
          type: string
          description: UUID of a specific account you want to see the IBAN for
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              ibans:
                type: array
                items:
                  $ref: '#/definitions/IBAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: ibans_not_found
              category: base
              message: IBANs were not found
              params: ''
            - code: iban_not_found_for_currency
              category: base
              message: IBAN was not found for the selected currency
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: currency is not a valid ISO 4217 currency code
              params: '{ "type" => "currency" }'
            - code: currency_is_not_supported
              category: currency
              message: currency is not supported
              params: ''
            - code: scope_not_in_range
              category: scope
              message: "scope should be in range: own, all, clients"
              params: '{ "range" => "own, all, clients" }'
          schema:
            $ref: '#/definitions/GetIBANsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /payments/create:
    post:
      tags:
        - Payments
      x-api-group: pay
      summary: Create Payment
      description: 'Make a payment. On success, returns the new payment record.'
      operationId: CreatePayment
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: formData
          required: true
          type: string
          description: Currency in which payment is made. Three-digit currency code.
        - name: beneficiary_id
          in: formData
          required: true
          type: string
          description: Beneficiary UUID.
        - name: amount
          in: formData
          required: true
          type: string
          description: Amount.
        - name: reason
          in: formData
          required: true
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: reference
          in: formData
          required: true
          type: string
          description: User-generated reference code.
        - name: payment_date
          in: formData
          required: false
          type: string
          description: >-
            Instructed date of payment. Any valid ISO 8601 format, eg.
            "2017-12-31".
        - name: payment_type
          in: formData
          required: false
          type: string
          enum:
            - priority
            - regular
          description: >-
            Currencycloud supports two types of payments: "priority", made using
            the SWIFT network; and "regular", made using the local bank network.
        - name: conversion_id
          in: formData
          required: false
          type: string
          description: Conversion UUID.
        - name: payer_entity_type
          in: formData
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: payer_company_name
          in: formData
          required: false
          type: string
          description: Required if "payer_entity_type" is "company".
        - name: payer_first_name
          in: formData
          required: false
          type: string
          description: Required if "payer_entity_type" is "individual".
        - name: payer_last_name
          in: formData
          required: false
          type: string
          description: Required if "payer_entity_type" is "individual".
        - name: payer_city
          in: formData
          required: false
          type: string
          description: City.
        - name: payer_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: payer_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: payer_state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: payer_country
          in: formData
          required: false
          type: string
          description: Two-letter country code.
        - name: payer_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If "payer_entity_type" is "company", company registration date. If
            "payer_entity_type" is "individual", date of birth. ISO 8601 format
            YYYY-MM-DD.
        - name: payer_identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: >-
            A legal document that verifies the identity of the payer. Required
            documentation will vary depending on the nationality or registered
            address of the payer.
        - name: payer_identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: unique_request_id
          in: formData
          required: false
          type: string
          description: User-generated idempotency key.
        - name: ultimate_beneficiary_name
          in: formData
          required: false
          type: string
          description: The name of the ultimate beneficiary if different.
        - name: purpose_code
          in: formData
          required: false
          type: string
          description: Payment Purpose Code (Mandatory for all INR payments).
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
        - name: charge_type
          in: formData
          required: false
          type: string
          enum:
          - ours
          - shared
          description: >-
            Payment Charges Setting value (only applicable to SWIFT payments).
            If empty - then account's default value is used.
            Do not specify for regular (local) payments.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_type
              category: type
              message: Invalid Payment type
              params: ''
            - code: currency_length_is_invalid
              category: currency
              message: currency should be 3 character(s) long
              params: ''
            - code: currency_is_required
              category: currency
              message: currency is required
              params: ''
            - code: invalid_currency
              category: currency
              message: You cannot make payments with this currency
              params: ''
            - code: beneficiary_id_is_not_valid_uuid
              category: beneficiary_id
              message: beneficiary_id should be in UUID format
              params: ''
            - code: beneficiary_id_is_required
              category: beneficiary_id
              message: beneficiary_id is required
              params: ''
            - code: beneficiary_date_of_birth_type_is_wrong
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: beneficiary_date_of_birth_is_incorrect
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth is incorrect
              params: ''
            - code: beneficiary_date_of_birth_is_earlier
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be later
              params: ''
            - code: beneficiary_date_of_birth_is_after
              category: beneficiary_date_of_birth
              message: beneficiary_date_of_birth should be earlier
              params: ''
            - code: invalid_beneficiary_id
              category: beneficiary_id
              message: Unknown beneficiary_id
              params: ''
            - code: payment_above_limit
              category: amount
              message: >-
                3000.00 EUR exceeds the maximum amount of 2500.00 EUR for a
                local payment.
              params: ''
            - code: payer_entity_type_not_in_range
              category: payer_entity_type
              message: 'payer_entity_type should be in range: individual, company'
              params: ''
            - code: payer_entity_type_is_missing
              category: payer_entity_type
              message: Payer entity type is missing
              params: ''
            - code: payer_company_name_is_missing
              category: payer_company_name
              message: Payer company name is missing
              params: ''
            - code: payer_first_name_is_missing
              category: payer_first_name
              message: Payer first name is missing
              params: ''
            - code: payer_last_name_is_missing
              category: payer_last_name
              message: Payer last name is missing
              params: ''
            - code: payer_city_is_missing
              category: payer_city
              message: Payer city is missing
              params: ''
            - code: unsupported_payer_country_code
              category: payer_country_code
              message: Payer country is not supported
              params: ''
            - code: payer_state_or_province_is_missing
              category: payer_state_or_province
              message: Payer state or province is missing
              params: ''
            - code: payer_postcode_is_missing
              category: payer_postcode
              message: Payer postcode is missing
              params: ''
            - code: payer_date_of_birth_type_is_wrong
              category: payer_date_of_birth
              message: payer_date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: payer_date_of_birth_is_incorrect
              category: payer_date_of_birth
              message: payer_date_of_birth is incorrect
              params: ''
            - code: payer_date_of_birth_is_earlier
              category: payer_date_of_birth
              message: payer_date_of_birth should be later
              params: ''
            - code: payer_date_of_birth_is_after
              category: payer_date_of_birth
              message: payer_date_of_birth should be earlier
              params: ''
            - code: identification_type_is_missing
              category: payer_identification_type
              message: identification_type is missing
              params: ''
            - code: identification_type_is_invalid
              category: payer_identification_type
              message: identification_type is invalid
              params: ''
            - code: identification_value_is_missing
              category: payer_identification_value
              message: identification_value is missing
              params: ''
            - code: identification_value_is_invalid
              category: payer_identification_value
              message: identification_value is invalid
              params: ''
            - code: invalid_conversion_id
              category: conversion_id
              message: Conversion could not be found
              params: ''
            - code: conversion_is_already_settled
              category: conversion_id
              message: The conversion is already settled
              params: ''
            - code: invalid_payment_date
              category: payment_date
              message: The payment date is invalid
              params: ''
            - code: payment_date_is_too_early
              category: payment_date
              message: The payment date cannot be sooner than the conversion date
              params: ''
            - code: reference_is_too_long
              category: reference
              message: reference can not be longer than 255 character(s)
              params: ''
            - code: charge_type_not_available
              category: charge_type
              message: Not available charge_type has been provided
              params: '{ "charge_type" => "shared, ours" }'
            - code: invalid_charge_type
              category: charge_type
              message:  Invalid banking_charges supplied, must be in range [ours, shared]
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_charge_type_not_available
              category: on_behalf_of
              message: Not available charge_type has been provided for on_behalf_of
              params: '{ "charge_type" => "shared, ours" }'
            - code: duplicate_request
              category: duplicate_request
              message: >-
                The unique_request_id provided for this payment has already been
                used, please provide a new unique_request_id to successfully
                submit this payment
              params: ''
          schema:
            $ref: '#/definitions/CreatePaymentError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /payments/find:
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Find Payments
      description: Search for payment records.
      operationId: FindPayments
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: currency
          in: query
          required: false
          type: string
          description: Currency in which payment made. Three-digit currency code.
        - name: amount
          in: query
          required: false
          type: string
          description: Exact amount.
        - name: amount_from
          in: query
          required: false
          type: string
          description: Minimum amount.
        - name: amount_to
          in: query
          required: false
          type: string
          description: Maximum amount.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - new
            - ready_to_send
            - completed
            - failed
            - released
            - suspended
            - awaiting_authorisation
            - submitted
            - authorised
            - deleted
          description: Payment status.
        - name: reason
          in: query
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: payment_date_from
          in: query
          required: false
          type: string
          format: date
          description: >-
            Earliest instructed payment date. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: payment_date_to
          in: query
          required: false
          type: string
          format: date
          description: >-
            Latest instructed payment date. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: transferred_at_from
          in: query
          required: false
          type: string
          format: date-time
          description: >-
            Earliest date of payment processing. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: transferred_at_to
          in: query
          required: false
          type: string
          format: date-time
          description: >-
            Latest date of payment processing. Any valid ISO 8601 format, eg.
            "2017-12-31T23:59:59+00:00".
        - name: created_at_from
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: created_at_to
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          format: date-time
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: beneficiary_id
          in: query
          required: false
          type: string
          description: Beneficiary UUID.
        - name: conversion_id
          in: query
          required: false
          type: string
          description: Conversion UUID.
        - name: with_deleted
          in: query
          required: false
          type: boolean
          default: false
          description: Include deleted payments.
        - name: payment_group_id
          in: query
          required: false
          type: string
          description: Payment group.
        - name: unique_request_id
          in: query
          required: false
          type: string
          description: User-generated idempotency key.
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - all
            - own
            - clients
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: bulk_upload_id
          in: query
          required: false
          type: string
          description: Bulk upload reference code.
        - name: purpose_code
          in: query
          required: false
          type: string
          description: Payment Purpose Code (Mandatory for all INR payments).
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
        - name: charge_type
          in: query
          required: false
          type: string
          enum:
          - ours
          - shared
          description: >-
            Payment Charges Setting value (only applicable to SWIFT payments).
            Limits search results scope to just payments of the specified charge type.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              payments:
                type: array
                items:
                  $ref: '#/definitions/Payment'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_currency
              category: id
              message: currency has invalid format
              params: ''
            - code: charge_type_not_available
              category: charge_type
              message: Not available charge_type has been provided
              params: '{ "charge_type" => "shared, ours" }'
            - code: invalid_charge_type
              category: charge_type
              message:  Invalid banking_charges supplied, must be in range [ours, shared]
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_charge_type_not_available
              category: on_behalf_of
              message: Not available charge_type has been provided for on_behalf_of
              params: '{ "charge_type" => "shared, ours" }'
            - code: status_not_in_range
              category: status
              message: >-
                status should be in range: new, ready_to_send, completed, failed, released, suspended,
                awaiting_authorisation, submitted, authorised, deleted"
              params: >-
                { "range" => "new, ready_to_send, completed, failed, released, suspended,
                awaiting_authorisation, submitted, authorised, deleted" }
          schema:
            $ref: '#/definitions/FindPaymentsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/payments/{id}':
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Get Payment
      description: Get a payment record.
      operationId: GetPayment
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: with_deleted
          in: query
          required: false
          type: boolean
          description: Include deleted payments.
        - name: purpose_code
          in: query
          required: false
          type: string
          description: Payment Purpose Code (Mandatory for all INR payments).
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_id
              category: id
              message: ID has invalid format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: payment_not_found
              category: id
              message: Payment was not found for this id
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetPaymentError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
    post:
      tags:
        - Payments
      x-api-group: pay
      summary: Update Payment
      description: 'Update a payment. On success, returns the updated payment entity.'
      operationId: UpdatePayment
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: with_deleted
          in: query
          required: false
          type: boolean
          description: Include deleted payments.
        - name: currency
          in: formData
          required: false
          type: string
          description: >-
            Currency in which the payment is being made. Three-digit currency
            code.
        - name: beneficiary_id
          in: formData
          required: false
          type: string
          description: Beneficiary UUID.
        - name: amount
          in: formData
          required: false
          type: string
          description: Payment amount.
        - name: payment_date
          in: formData
          required: false
          type: string
          description: >-
            Instructed date of payment. Any valid ISO 8601 format, eg.
            "2017-12-31".
        - name: reason
          in: formData
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: payment_type
          in: formData
          required: false
          type: string
          enum:
            - priority
            - regular
          description: >-
            Currencycloud supports two types of payments: "priority", made using
            the SWIFT network; and "regular", made using the local bank network.
        - name: reference
          in: formData
          required: false
          type: string
          description: User-generated reference code.
        - name: conversion_id
          in: formData
          required: false
          type: string
          description: Conversion UUID.
        - name: payer_entity_type
          in: formData
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: payer_company_name
          in: formData
          required: false
          type: string
          description: Required if "payer_entity_type" is "company".
        - name: payer_first_name
          in: formData
          required: false
          type: string
          description: Required if "payer_entity_type" is "individual".
        - name: payer_last_name
          in: formData
          required: false
          type: string
          description: Required if payer_entity_type is "individual".
        - name: payer_city
          in: formData
          required: false
          type: string
          description: City.
        - name: payer_address
          in: formData
          required: false
          type: string
          description: First line of address.
        - name: payer_postcode
          in: formData
          required: false
          type: string
          description: Postal code.
        - name: payer_state_or_province
          in: formData
          required: false
          type: string
          description: State or province.
        - name: payer_country
          in: formData
          required: false
          type: string
          description: Two-letter country code.
        - name: payer_date_of_birth
          in: formData
          required: false
          type: string
          description: >-
            If "payer_entity_type" is "company", company registration date. If
            "payer_entity_type" is "individual", date of birth. ISO 8601 format
            YYYY-MM-DD..
        - name: payer_identification_type
          in: formData
          required: false
          type: string
          enum:
            - none
            - drivers_license
            - social_security_number
            - green_card
            - passport
            - visa
            - matricula_consular
            - registro_federal_de_contribuyentes
            - credential_de_elector
            - social_insurance_number
            - citizenship_papers
            - drivers_license_canadian
            - existing_credit_card_details
            - employer_identification_number
            - national_id
            - others
            - incorporation_number
          description: >-
            A legal document that verifies the identity of the payer. Required
            documentation will vary depending on the nationality or registered
            address of the payer.
        - name: payer_identification_value
          in: formData
          required: false
          type: string
          description: >-
            A unique reference code for the identification document, such as a
            passport number.
        - name: payer_details_source
          in: formData
          required: false
          type: string
          enum:
            - account
            - payer
          description: 'Source for payer details: the "account" or "payer" record.'
        - name: ultimate_beneficiary_name
          in: formData
          required: false
          type: string
          description: The name of the ultimate beneficiary if different.
        - name: purpose_code
          in: formData
          required: false
          type: string
          description: Payment Purpose Code (Mandatory for all INR payments).
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
        - name: charge_type
          in: formData
          required: false
          type: string
          enum:
          - ours
          - shared
          description: >-
            Payment Charges Setting value (only applicable to SWIFT payments).
            If empty - then account's default value is used.
            Do not specify for regular (local) payments.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: currency_type_is_wrong
              category: currency
              message: XYZ is not a valid ISO 4217 currency code
              params: ''
            - code: invalid_currency
              category: currency
              message: You cannot make payments with this currency
              params: ''
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: beneficiary_id_is_not_valid_uuid
              category: beneficiary_id
              message: beneficiary_id should be in UUID format
              params: ''
            - code: invalid_beneficiary_id
              category: beneficiary_id
              message: Unknown beneficiary_id
              params: ''
            - code: invalid_beneficiary_currency
              category: beneficiary_currency
              message: >-
                You cannot assign this Beneficiary to the Payment as it is the
                incorrect currency
              params: ''
            - code: amount_type_is_wrong
              category: amount
              message: amount should be of numeric type
              params: '{ "type" => "numeric" }'
            - code: payment_above_limit
              category: amount
              message: >-
                3000.00 EUR exceeds the maximum amount of 2500.00 EUR for a
                local payment.
              params: '{ "amount" => 3000.0, "ccy" => "EUR", "limit" => 2500.0 }'
            - code: invalid_amount_for_order
              category: amount_for_order
              message: The payment amount is more than the value of the order
              params: ''
            - code: payment_type_not_in_range
              category: payment_type
              message: 'payment_type should be in range: priority, regular'
              params: ''
            - code: invalid_conversion_id
              category: conversion_id
              message: Conversion could not be found.
              params: ''
            - code: conversion_id_is_not_valid_uuid
              category: conversion_id
              message: conversion_id should be in UUID format
              params: ''
            - code: invalid_payment_date
              category: payment_date
              message: The payment date is invalid
              params: ''
            - code: payment_date_is_in_invalid_format
              category: payment_date
              message: payment_date should be in ISO 8601 format
              params: ''
            - code: payment_date_is_too_early
              category: payment_date
              message: The payment date cannot be sooner than the conversion date
              params: ''
            - code: reference_is_too_long
              category: reference
              message: reference can not be longer than 255 character(s)
              params: '{ "maxlength" => 255 }'
            - code: payment_can_not_be_edited
              category: can_not_be_edited
              message: >-
                Sorry this Payment has already been processed and you are unable
                to Edit it
              params: ''
            - code: extra_dependent_params
              category: base
              message: >-
                Parameters payer_entity_type, payer_company_name,
                payer_first_name, payer_last_name, payer_address, payer_country,
                payer_postcode, payer_state_or_province, payer_date_of_birth,
                payer_identification_type, payer_identification_value can't be
                provided in the same request with 'payer_details_source' with
                value 'account'
              params: ''
            - code: payer_entity_type_not_in_range
              category: payer_entity_type
              message: 'payer_entity_type should be in range: individual, company'
              params: '{ "range" => "individual, company" }'
            - code: payer_entity_type_is_missing
              category: payer_entity_type
              message: Payer entity type is missing
              params: ''
            - code: payer_company_name_is_missing
              category: payer_company_name
              message: Payer company name is missing
              params: ''
            - code: payer_first_name_is_missing
              category: payer_first_name
              message: Payer first name is missing
              params: ''
            - code: payer_last_name_is_missing
              category: payer_last_name
              message: Payer last name is missing
              params: ''
            - code: payer_city_is_missing
              category: payer_city
              message: Payer city is missing
              params: ''
            - code: payer_state_or_province_is_missing
              category: payer_state_or_province
              message: Payer state or province is missing
              params: ''
            - code: payer_postcode_is_missing
              category: payer_postcode
              message: Payer postcode is missing
              params: ''
            - code: payer_date_of_birth_type_is_wrong
              category: payer_date_of_birth
              message: payer_date_of_birth should be of date type
              params: '{ "type" => "date" }'
            - code: payer_date_of_birth_is_incorrect
              category: payer_date_of_birth
              message: payer_date_of_birth is incorrect
              params: ''
            - code: payer_date_of_birth_is_earlier
              category: payer_date_of_birth
              message: payer_date_of_birth should be later
              params: ''
            - code: payer_date_of_birth_is_after
              category: payer_date_of_birth
              message: payer_date_of_birth should be earlier
              params: ''
            - code: identification_type_is_missing
              category: payer_identification_type
              message: identification_type is missing
              params: ''
            - code: identification_type_is_invalid
              category: payer_identification_type
              message: identification_type is invalid
              params: ''
            - code: identification_value_is_missing
              category: payer_identification_value
              message: identification_value is missing
              params: ''
            - code: identification_value_is_invalid
              category: payer_identification_value
              message: identification_value is invalid
              params: ''
            - code: charge_type_not_available
              category: charge_type
              message: Not available charge_type has been provided
              params: '{ "charge_type" => "shared, ours" }'
            - code: invalid_charge_type
              category: charge_type
              message:  Invalid banking_charges supplied, must be in range [ours, shared]
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: payment_not_found
              category: id
              message: Payment was not found for this id
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_charge_type_not_available
              category: on_behalf_of
              message: Not available charge_type has been provided for on_behalf_of
              params: '{ "charge_type" => "shared, ours" }'
          schema:
            $ref: '#/definitions/UpdatePaymentError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/payments/{id}/confirmation':
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Get a Payment Confirmation
      description: Get confirmation for a payment.
      operationId: GetPaymentConfirmation
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PaymentConfirmation'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_id
              category: id
              message: ID has invalid format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: payment_not_found
              category: id
              message: Payment was not found for this id
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetPaymentSubmissionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/payments/{id}/submission':
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Get Payment Submission
      description: Get MT103 information for a SWIFT payment.
      operationId: GetPaymentSubmission
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PaymentSubmission'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_id
              category: id
              message: ID has invalid format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: payment_not_found
              category: id
              message: Payment was not found for this id
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetPaymentSubmissionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /payments/authorise:
    post:
      tags:
        - Payments
      x-api-group: pay
      summary: Authorise Payment
      description: Authorises a payment pending authorisation.
      operationId: AuthorisePayment
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: 'payment_ids[]'
          in: query
          required: true
          type: array
          items:
            type: string
          description: One or more payment UUID identifiers to be authorised.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PaymentAuthorisations'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: payment_ids_is_required
              category: id
              message: payment_ids is required
              params: ''
            - code: payment_ids_type_is_wrong
              category: id
              message: payment_ids should be of array type
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
          schema:
            $ref: '#/definitions/CreatePaymentAuthorisationError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/payments/{id}/delete':
    post:
      tags:
        - Payments
      x-api-group: pay
      summary: Delete Payment
      description: 'Delete a payment. On success, returns the final payment record state.'
      operationId: DeletePayment
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payment UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payment'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: invalid_id
              category: id
              message: ID has invalid format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: payment_not_found
              category: id
              message: Payment was not found for this id
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/DeletePaymentError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/payments/payment_delivery_date':
    get:
      tags:
        - Payments
      x-api-group: pay
      summary: Get Payment Delivery Date
      description: Gets Payment Delivery Date.
      operationId: GetPaymentDeliveryDate
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: payment_date
          in: query
          required: true
          type: string
          description: The date when the payment will be released. Any valid ISO 8601 format, eg. "2017-12-31".
        - name: payment_type
          in: query
          required: true
          type: string
          enum:
            - priority
            - regular
          description: >-
            Currencycloud supports two types of payments: "priority", made using
            the SWIFT network; and "regular", made using the local bank network.
        - name: currency
          in: query
          required: true
          type: string
          description: The 3-letter ISO code of the currency of the payment
        - name: bank_country
          in: query
          required: true
          type: string
          description: The 2-letter ISO code of the country where the payment is sent
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PaymentDeliveryDate'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: bank_country_is_required
              category: bank_country
              message: bank_country is required
              params: ''
            - code: bank_country_is_in_invalid_format
              category: bank_country
              message: bank_country is in invalid format
              params: ''
            - code: currency_is_required
              category: currency
              message: currency is required
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: Currency is not a valid ISO 4217 currency code
              params: ''
            - code: payment_type_is_required
              category: payment_type
              message: payment_type is required
              params: ''
            - code: payment_type_not_in_range
              category: payment_type
              message: 'payment_type should be in range: priority, regular'
              params: '{ "range" => "priority, regular" }'
            - code: invalid_payment
              category: base
              message: Payment cannot be processed
              params: ''
            - code: invalid_currency
              category: currency
              message: You cannot make payments with this currency
              params: ''
            - code: payment_date_is_required
              category: payment_date
              message: payment_date is required
              params: ''
            - code: invalid_payment_date
              category: payment_date
              message: The payment date is invalid
              params: ''
            - code: payment_date_is_in_invalid_format
              category: payment_date
              message: payment_date should be in ISO 8601 format
              params: ''
          schema:
            $ref: '#/definitions/GetPaymentDeliveryDateError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/payers/{id}':
    get:
      tags:
        - Payers
      x-api-group: pay
      summary: Get Payer
      description: Get a payer record.
      operationId: GetPayer
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Payer UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Payer'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: payer_not_found
              category: id
              message: Payer was not found for this id
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
          schema:
            $ref: '#/definitions/GetPayerError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /rates/detailed:
    get:
      tags:
        - Rates
      x-api-group: convert
      summary: Get Detailed Rates
      description: >-
        Get a detailed quotation to convert money from one currency to another.
        The quotation will be based on the spread table of the authenticating
        user.
      operationId: GetDetailedRates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: buy_currency
          in: query
          required: true
          type: string
          description: Currency purchased. Three-digit code.
        - name: sell_currency
          in: query
          required: true
          type: string
          description: Currency sold. Three-digit code.
        - name: fixed_side
          in: query
          required: true
          type: string
          enum:
            - buy
            - sell
          description: Fix the buy or sell currency.
        - name: amount
          in: query
          required: true
          type: string
          description: Amount of the fixed buy or sell currency.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: conversion_date
          in: query
          required: false
          type: string
          format: date
          description: >-
            Date of delivery of purchase currency. ISO 8601 format YYYY-MM-DD.
            If not specified, deals settle in two working days.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/RateDetailed'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: unique_value_parameters
              category: base
              message: >-
                Following parameters should not have same values: sell_currency,
                buy_currency
              params: '{ "parameters" => "sell_currency, buy_currency" }'
            - code: rate_could_not_be_retrieved
              category: base
              message: Rate could not be retrieved
              params: ''
            - code: ccy_pair_is_not_tradeable
              category: base
              message: Given currency pair is not tradeable
              params: ''
            - code: fixed_side_not_in_range
              category: fixed_side
              message: 'fixed_side should be in range: sell, buy'
              params: '{ "range" => "sell, buy" }'
            - code: fixed_side_is_required
              category: fixed_side
              message: fixed_side is required
              params: ''
            - code: conversion_date_type_is_wrong
              category: conversion_date
              message: conversion_date should be of date type
              params: '{ "type" => "date" }'
            - code: invalid_delivery_date
              category: conversion_date
              message: >-
                The delivery date you have requested cannot be met for this
                currency pair
              params: ''
            - code: sell_currency_is_in_invalid_format
              category: sell_currency
              message: sell_currency is in invalid format
              params: ''
            - code: sell_currency_is_required
              category: sell_currency
              message: sell_currency is required
              params: ''
            - code: amount_type_is_wrong
              category: amount
              message: amount should be of numeric type
              params: '{ "type" => "numeric" }'
            - code: amount_is_required
              category: amount
              message: amount is required
              params: ''
            - code: amount_is_too_small
              category: amount
              message: amount can not be smaller than 1
              params: '{ "minvalue" => 1 }'
            - code: buy_currency_is_in_invalid_format
              category: buy_currency
              message: buy_currency is in invalid format
              params: ''
            - code: buy_currency_is_required
              category: buy_currency
              message: buy_currency is required
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetDetailedRatesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /rates/find:
    get:
      tags:
        - Rates
      x-api-group: convert
      summary: Get Basic Rates
      description: Get basic foreign exchange rate information for multiple currency pairs.
      operationId: GetBasicRates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency_pair
          in: query
          required: true
          type: string
          description: 'Concatenated string of the two currencies traded, eg. "USDEUR".'
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: ignore_invalid_pairs
          in: query
          required: false
          type: boolean
          description: Ignore the validation of currency pairs.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/RatesBasic'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: currency_pair_is_too_short
              category: currency_pair
              message: currency_pair can not be shorter than 6 letter(s)
              params: '{ "minlength" => 6 }'
            - code: currency_pair_is_required
              category: currency_pair
              message: currency_pair is required
              params: ''
            - code: invalid_currency_pair
              category: currency_pair
              message: Invalid currency pair
              params: '{ "currency_pair" => ["AAABBB"] }'
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetBasicRatesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reference/beneficiary_required_details:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Beneficiary Requirements
      description: >-
        Find out what information is required to make payments to beneficiaries
        in specified currencies and countries.
      operationId: GetBeneficiaryRequirements
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: false
          type: string
          description: >-
            Currency in which money is held in the beneficiary's bank account.
            Three-digit currency code.
        - name: bank_account_country
          in: query
          required: false
          type: string
          description: Two-letter country code.
        - name: beneficiary_country
          in: query
          required: false
          type: string
          description: >-
            Two-letter country code. If the beneficiary is a company, the
            country in which the company is registered. If the beneficiary is an
            individual, a country in which the beneficiary holds nationality.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              details:
                type: array
                items:
                  $ref: '#/definitions/BeneficiaryRequirements'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: bank_account_country_is_in_invalid_format
              category: bank_account_country
              message: >-
                Bank account country is not a valid ISO 3166-1 Alpha-2 country
                code
              params: ''
            - code: currency_is_in_invalid_format
              category: currency
              message: Currency is not a valid ISO 4217 currency code
              params: ''
            - code: beneficiary_country_is_in_invalid_format
              category: beneficiary_country
              message: >-
                Beneficiary country is not a valid ISO 3166-1 Alpha-2 country
                code
              params: ''
          schema:
            $ref: '#/definitions/GetBeneficiaryRequirementsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reference/conversion_dates:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Conversion Dates
      description: Get a list of future non-trading dates for specified currency pairs.
      operationId: GetConversionDates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: conversion_pair
          in: query
          required: true
          type: string
          description: 'Concatenated string of the two currencies converted, eg. "USDEUR".'
        - name: start_date
          in: query
          required: false
          type: string
          format: date
          description: Start date of conversion. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConversionDates'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: conversion_pair_is_required
              category: conversion_pair
              message: conversion_pair is required
              params: ''
            - code: invalid_conversion_pair
              category: conversion_pair
              message: The conversion pair specified was invalid
              params: ''
            - code: conversion_pair_is_too_short
              category: conversion_pair
              message: conversion_pair can not be shorter than 6 character(s)
              params: '{ "minlength" => 6 }'
            - code: conversion_pair_is_too_long
              category: conversion_pair
              message: conversion_pair can not be longer than 6 character(s)
              params: '{ "maxlength" => 6 }'
            - code: start_date_is_too_far_in_future
              category: start_date
              message: Date is too far in the future (more than 1 year)
              params: '{ "maxdate" => "2015-04-04T00:00:00Z", "period" => "1 year" }'
            - code: start_date_is_in_invalid_format
              category: start_date
              message: start_date should be in ISO 8601 format
              params: '{ "type" => "date" }'
          schema:
            $ref: '#/definitions/GetConversionDatesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reference/currencies:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Available Currencies
      description: >-
        Get a list of all currencies that can be traded on the Currencycloud
        platform.
      operationId: GetAvailableCurrencies
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AvailableCurrencies'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetAvailableCurrenciesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reference/payer_required_details:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Payer Requirements
      description: >-
        Get information on the minimum details required to create a payer.
        Requirements vary depending on the location of the payer, the type of
        payment to be made (priority or regular), and other factors.
      operationId: GetPayerRequirements
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: payer_country
          in: query
          required: true
          type: string
          description: Two-letter country code.
        - name: payer_entity_type
          in: query
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity.
        - name: payment_type
          in: query
          required: false
          type: string
          enum:
            - priority
            - regular
          description: >-
            Currencycloud supports two types of payments: "priority", made using
            the SWIFT network; and "regular", made using the local bank network.
        - name: currency
          in: query
          required: false
          type: string
          description: 3 character ISO 4217 currency code.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PayerRequirements'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: payer_country_is_required
              category: payer_country
              message: payer_country is required
              params: ''
            - code: payer_country_is_in_invalid_format
              category: payer_country
              message: payer_country is not a valid ISO 3166-1 Alpha-2 country code
              params: '{ "type" => "country_code" }'
            - code: payment_type_not_in_range
              category: payment_type
              message: 'payment_type should be in range: priority, regular'
              params: '{ "range" => "priority, regular" }'
            - code: payer_entity_type_not_in_range
              category: payer_entity_type
              message: 'payer_entity_type should be in range: company, individual'
              params: '{ "range" => "company, individual" }'
            - code: currency_is_too_short
              category: currency
              message: currency can not be shorter than 3 character(s)
              params: '{ "minlength" => 3 }'
            - code: currency_is_too_long
              category: currency
              message: currency can not be longer than 3 character(s)
              params: '{ "maxlength" => 3 }'
          schema:
            $ref: '#/definitions/GetPayerRequirementsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reference/payment_dates:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Payment Dates
      description: >-
        Get a list of invalid payment dates for a given currency. A payment date
        is when a payment will be executed by Currencycloud. Payments cannot be
        made on some days, for example when banks are closed.
      operationId: GetPaymentDates
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: true
          type: string
          description: Currency in which payment made. Three-digit currency code.
        - name: start_date
          in: query
          required: false
          type: string
          format: date
          description: Payment start date. ISO 8601 format YYYY-MM-DD.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/PaymentDates'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: currency_is_required
              category: currency
              message: currency is required
              params: ''
            - code: invalid_currency
              category: currency
              message: The currency specified was invalid
              params: ''
            - code: currency_is_too_short
              category: currency
              message: currency can not be shorter than 3 character(s)
              params: '{ "minlength" => 3 }'
            - code: currency_is_too_long
              category: currency
              message: currency can not be longer than 3 character(s)
              params: '{ "maxlength" => 3 }'
            - code: start_date_is_too_far_in_future
              category: start_date
              message: Date is too far in the future (more than 1 year)
              params: '{ "maxdate" => "2015-04-04T00:00:00Z", "period" => "1 year" }'
            - code: start_date_is_in_invalid_format
              category: start_date
              message: Date is too far in the future (more than 1 year)
              params: '{ "type" => "date" }'
          schema:
            $ref: '#/definitions/GetPaymentDatesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reference/payment_purpose_codes:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Payment Purpose Codes
      description: >-
        Get a list of payment purpose codes for a given currency and entity
        type. When initiating cross-border payments, the central bank of the
        country may require a purpose to be included with your transaction in
        order for your payment to be accepted and processed. If a payment
        purpose code is required but not provided, your payment may be delayed
        or rejected by the beneficiary bank.
      operationId: GetPaymentPurposeCodes
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: true
          type: string
          description: Currency in which payment made. Three-digit currency code.
        - name: entity_type
          in: query
          required: false
          type: string
          enum:
            - company
            - individual
          description: Legal entity type. Can be either 'company' or 'individual'.
        - name: bank_account_country
          in: query
          required: true
          type: string
          description: Two-letter country code of the bank account.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              purpose_codes:
                type: array
                items:
                  $ref: '#/definitions/PaymentPurposeCodes'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: currency_is_required
              category: currency
              message: currency is required
              params: ''
            - code: invalid_currency
              category: currency
              message: The currency specified was invalid
              params: ''
            - code: currency_is_too_short
              category: currency
              message: currency can not be shorter than 3 character(s)
              params: '{ "minlength" => 3 }'
            - code: currency_is_too_long
              category: currency
              message: currency can not be longer than 3 character(s)
              params: '{ "maxlength" => 3 }'
          schema:
            $ref: '#/definitions/GetPaymentPurposeCodesError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reference/settlement_accounts:
    get:
      tags:
        - Reference
      x-api-group: manage
      summary: Get Settlement Accounts
      description: >-
        Get settlement account information - a list of accounts that require
        funding in order to allow for outstanding transactions to be processed.
      operationId: GetSettlementAccounts
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: currency
          in: query
          required: false
          type: string
          description: Three-digit currency code.
        - name: account_id
          in: query
          required: false
          type: string
          description: Account UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlement_accounts:
                type: array
                items:
                  $ref: '#/definitions/SettlementAccount'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: account_not_found
              category: id
              message: Account was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetSettlementAccountsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reports/conversions/create:
    post:
      tags:
        - Reporting
      x-api-group: manage
      summary: Generate Conversion Report
      description: >-
        Returns a JSON structure with details of the conversion report
        requested.
      operationId: GenerateConversionReport
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: UUID of contact to act on behalf of.
        - name: description
          in: formData
          required: false
          type: string
          description: Description that will be applied to report.
        - name: buy_currency
          in: formData
          required: false
          type: string
          description: 3 character ISO 4217 currency code.
        - name: sell_currency
          in: formData
          required: false
          type: string
          description: 3 character ISO 4217 currency code.
        - name: client_buy_amount_from
          in: formData
          required: false
          type: string
          description: .
        - name: client_buy_amount_to
          in: formData
          required: false
          type: string
          description: .
        - name: client_sell_amount_from
          in: formData
          required: false
          type: string
          description: .
        - name: client_sell_amount_to
          in: formData
          required: false
          type: string
          description: .
        - name: partner_buy_amount_from
          in: formData
          required: false
          type: string
          description: Minimum buy amount (sub-accounts).
        - name: partner_buy_amount_to
          in: formData
          required: false
          type: string
          description: Maximum buy amount (sub-accounts).
        - name: partner_sell_amount_from
          in: formData
          required: false
          type: string
          description: Minimum sell amount (sub-accounts).
        - name: partner_sell_amount_to
          in: formData
          required: false
          type: string
          description: Maximum sell amount (sub-accounts).
        - name: client_status
          in: formData
          required: false
          type: string
          enum:
            - awaiting_funds
            - funds_sent
            - funds_arrived
            - trade_settled
            - closed
          description: >-
            The current status of the Conversion - awaiting_funds - funds_sent -
            funds_arrived - trade_settled - closed.
        - name: partner_status
          in: formData
          required: false
          type: string
          enum:
            - awaiting_funds
            - funds_sent
            - funds_arrived
            - trade_settled
            - closed
          description: >-
            The current status of the Conversion - awaiting_funds - funds_sent -
            funds_arrived - trade_settled - closed.
        - name: conversion_date_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when buy currency was delivered.
        - name: conversion_date_to
          in: formData
          required: false
          format: date
          type: string
          description: ISO 8601 Datetime when buy currency was delivered.
        - name: settlement_date_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the sell_currency was debited.
        - name: settlement_date_to
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the sell_currency was debited.
        - name: created_at_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the conversion was created.
        - name: created_at_to
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the conversion was created.
        - name: updated_at_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the conversion was updated.
        - name: updated_at_to
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the conversion was updated.
        - name: unique_request_id
          in: formData
          required: false
          type: string
          description: Unique request ID of conversion
        - name: scope
          in: formData
          required: false
          type: string
          description: Specify which account level will be used; 'own' is a default value.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ReportRequest'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GenerateReportError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reports/payments/create:
    post:
      tags:
        - Reporting
      x-api-group: manage
      summary: Generate Payment Report
      description: Returns a JSON structure with details of the payments report requested.
      operationId: GeneratePaymentReport
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: UUID of contact to act on behalf of.
        - name: description
          in: formData
          required: false
          type: string
          description: Description that will be applied to report.
        - name: currency
          in: formData
          required: false
          type: string
          description: 3 character ISO 4217 currency code.
        - name: amount_from
          in: formData
          required: false
          type: string
          description: Amount of Payment to 2dp.
        - name: amount_to
          in: formData
          required: false
          type: string
          description: Amount of Payment to 2dp.
        - name: status
          in: formData
          required: false
          type: string
          description: Status of the payment.
        - name: payment_date_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment should be paid.
        - name: payment_date_to
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment should be paid.
        - name: transferred_at_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment should be transfered.
        - name: transferred_at_to
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment should be transfered.
        - name: created_at_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment was created.
        - name: created_at_to
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment was created.
        - name: updated_at_from
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment was updated.
        - name: updated_at_to
          in: formData
          required: false
          type: string
          format: date
          description: ISO 8601 Datetime when the payment was updated.
        - name: beneficiary_id
          in: formData
          required: false
          type: string
          description: ID of the beneficiary
        - name: conversion_id
          in: formData
          required: false
          type: string
          description: Conversion unique ID
        - name: with_deleted
          in: formData
          required: false
          type: string
          description: Allow to search within deleted payments too
        - name: payment_group_id
          in: formData
          required: false
          type: string
          description: ID of the payment group
        - name: unique_request_id
          in: formData
          required: false
          type: string
          description: Unique request ID of conversion
        - name: scope
          in: formData
          required: false
          type: string
          description: Specify which account level will be used; 'own' is a default value.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ReportRequest'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GenerateReportError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /reports/report_requests/find:
    get:
      tags:
        - Reporting
      x-api-group: manage
      summary: Find Report Requests
      description: Returns a JSON structure with details of report requests.
      operationId: Find Report Requests
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Your unique short reference.
        - name: description
          in: query
          required: false
          type: string
          description: 'Description, which was provided during the report creation process.'
        - name: account_id
          in: query
          required: false
          type: string
          description: ID of account.
        - name: contact_id
          in: query
          required: false
          type: string
          description: ID of contact.
        - name: created_at_from
          in: query
          required: false
          type: string
          format: date
          description: Start date (for range) when the reports were created.
        - name: created_at_to
          in: query
          required: false
          type: string
          format: date
          description: End date (for range) when the reports were created.
        - name: expiration_date_from
          in: query
          required: false
          type: string
          format: date
          description: Start date (for range) when the report will be (was) expired.
        - name: expiration_date_to
          in: query
          required: false
          type: string
          format: date
          description: End date (for range) when the report will be (was) expired.
        - name: status
          in: query
          required: false
          type: string
          description: Status of the report.
        - name: report_type
          in: query
          required: false
          type: string
          description: 'Type of reports, that we expect to receive in search results.'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          default: created_at
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              report_requests:
                type: array
                items:
                  $ref: '#/definitions/ReportRequest'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: account_not_found
              category: id
              message: Account was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetReportRequestError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/reports/report_requests/{id}':
    get:
      tags:
        - Reporting
      x-api-group: manage
      summary: Retrieve a Report Request
      description: Returns a JSON structure with details of the specified report request.
      operationId: Retrieve a Report Request
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: ID of the report.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: UUID of contact to act on behalf of.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ReportRequest'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: account_not_found
              category: id
              message: Account was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetReportRequestError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/transactions/sender/{id}':
    get:
      tags:
        - Sender
      x-api-group: collect
      summary: Get Sender Details
      description: Returns a JSON structure with details of the sender of funds
      operationId: GetSenderDetails
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: The Related Entity UUID (related_entity_id) of the Transaction.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Sender'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: sender_not_found
              category: id
              message: Sender was not found for this id
              params: ''
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
          schema:
            $ref: '#/definitions/GetSenderError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /settlements/find:
    get:
      tags:
        - Settlements
      x-api-group: convert
      summary: Find Settlements
      description: Get a list of settlements based on search criteria.
      operationId: FindSettlements
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - open
            - released
            - funds_arrived
            - part_paid
            - paid
          description: 'Settlement status, as shown to sub-account contacts.'
        - name: created_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: created_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: released_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: released_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59+00:00".'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/FindSettlementsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/settlements/{id}':
    get:
      tags:
        - Settlements
      x-api-group: convert
      summary: Get Settlement
      description: Get a settlement record.
      operationId: GetSettlement
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: settlement_not_found
              category: id
              message: Settlement was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetSettlementError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /settlements/create:
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Create Settlement
      description: 'Create a new settlement. On success, returns the new settlement entity.'
      operationId: CreateSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: type
          in: formData
          required: false
          type: string
          description: 'Settlement type, eg. "bulk".'
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Settlement'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/CreateSettlementError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/settlements/{id}/add_conversion':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Add Conversion to Settlement
      description: >-
        Add a conversion to an open settlement. On success, returns the updated
        settlement entity.
      operationId: AddConversionToSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: conversion_id
          in: formData
          required: true
          type: string
          description: Conversion UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: conversion_does_not_belong_to_account
              category: conversion_id
              message: Conversion cannot be added to this settlement
              params: ''
            - code: add_closed_conversion_failed
              category: conversion_id
              message: >-
                Cannot add conversion to a settlement as it does not have any
                open amounts
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/AddConversionToSettlementError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/settlements/{id}/delete':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Delete Settlement
      description: >-
        Delete a settlement. Only open settlements can be deleted. Any
        associated conversions will not be deleted, and may be added to other
        settlements.
      operationId: DeleteSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: settlement_not_found
              category: id
              message: Settlement was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/DeleteSettlementError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/settlements/{id}/release':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Release Settlement
      description: >-
        Move a settlement to “released” status. Released settlements are ready
        for processing.
      operationId: ReleaseSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/ReleaseSettlementError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/settlements/{id}/remove_conversion':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Remove Conversion from Settlement
      description: >-
        Remove a conversion from an open settlement. On success, returns the
        updated settlement entity.
      operationId: RemoveConversionFromSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: conversion_id
          in: formData
          required: true
          type: string
          description: Conversion UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Settlement'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/RemoveConversionFromSettlementError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/settlements/{id}/unrelease':
    post:
      tags:
        - Settlements
      x-api-group: convert
      summary: Unrelease Settlement
      description: >-
        Move a settlement status back to an “open” status, allowing conversions
        to be added and removed.
      operationId: UnreleaseSettlement
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Settlement UUID.
        - name: on_behalf_of
          in: formData
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              settlements:
                type: array
                items:
                  $ref: '#/definitions/Settlement'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/UnreleaseSettlementError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /transactions/find:
    get:
      tags:
        - Transactions
      x-api-group: manage
      summary: Find Transactions
      description: Search for transactions.
      operationId: FindTransactions
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: currency
          in: query
          required: false
          type: string
          description: Three-digit currency code.
        - name: amount
          in: query
          required: false
          type: integer
          description: Amount.
        - name: amount_from
          in: query
          required: false
          type: integer
          description: Minimum amount.
        - name: amount_to
          in: query
          required: false
          type: integer
          description: Maximum amount.
        - name: action
          in: query
          required: false
          type: string
          enum:
            - funding
            - conversion
            - payment
            - payment_failure
            - manual_intervention
            - manual_transaction
            - top_up_fee
            - transfer
            - conversion_deposit
          description: The action that triggered the transaction.
        - name: related_entity_type
          in: query
          required: false
          type: string
          enum:
            - conversion
            - payment
            - inbound_funds
            - deposit
            - transfer
          description: The related entity that created the transaction.
        - name: related_entity_id
          in: query
          required: false
          type: string
          description: UUID of the related entity.
        - name: related_entity_short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - completed
            - pending
            - deleted
          description: Transaction status.
        - name: type
          in: query
          required: false
          type: string
          enum:
            - debit
            - credit
          description: Whether the transaction debits or credits the account balance.
        - name: reason
          in: query
          required: false
          type: string
          description: User-generated reason for payment. Freeform text.
        - name: settles_at_from
          in: query
          required: false
          type: string
          format: date
          description: >-
            Earliest processing date. Any valid ISO 8601 format, eg.
            "2017-12-31".
        - name: settles_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Latest processing date. Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: created_at_from
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: created_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: completed_at_from
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: completed_at_to
          in: query
          required: false
          type: string
          format: date
          description: 'Any valid ISO 8601 format, eg. "2017-12-31".'
        - name: beneficiary_id
          in: query
          required: false
          type: string
          description: Beneficiary UUID. Required if "related_entity_type" is "payment".
        - name: currency_pair
          in: query
          required: false
          type: string
          description: >-
            Concatenated string of the two currencies traded, eg. "USDEUR".
            Required if "related_entity_type" is "conversion".
        - name: scope
          in: query
          required: false
          type: string
          enum:
            - all
            - own
            - clients
          default: own
          description: '"Own" account, "clients" sub-accounts, or "all" accounts.'
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          default: created_at
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/Transaction'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: transaction_not_found
              category: id
              message: No Transaction found for 21b552e0-d97c-612d-2335-34203ab3f267
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: related_entity_type_not_in_range
              category: related_entity_type
              message: "related_entity_type should be in range: conversion, payment, inbound_funds, deposit, transfer"
              params: '{ "range" => "conversion, payment, inbound_funds, deposit, transfer" }'
            - code: action_not_in_range
              category: action
              message: >-
                action should be in range: funding, conversion, payment, payment_failure, manual_intervention,
                manual_transaction, top_up_fee, transfer, conversion_deposit
              params: >-
                { "range" => "funding, conversion, payment, payment_failure, manual_intervention,
                manual_transaction, top_up_fee, transfer, conversion_deposit" }
            - code: scope_not_in_range
              category: scope
              message: "scope should be in range: own, all, clients"
              params: '{ "range" => "own, all, clients" }'
          schema:
            $ref: '#/definitions/FindTransactionsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/transactions/{id}':
    get:
      tags:
        - Transactions
      x-api-group: manage
      summary: Get Transaction
      description: Get a transaction record.
      operationId: GetTransaction
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Transaction UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Transaction'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/GetTransactionError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /transfers/find:
    get:
      tags:
        - Transfers
      x-api-group: pay
      summary: Find Transfers
      description: Get transfer records based on search criteria.
      operationId: FindTransfers
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
        - name: short_reference
          in: query
          required: false
          type: string
          description: Short reference code.
        - name: source_account_id
          in: query
          required: false
          type: string
          description: Account UUID of the paying account.
        - name: destination_account_id
          in: query
          required: false
          type: string
          description: Account UUID of the receiving account.
        - name: status
          in: query
          required: false
          type: string
          enum:
            - completed
            - pending
          description: Transfer status.
        - name: currency
          in: query
          required: false
          type: string
          description: Three-digit currency code.
        - name: amount_from
          in: query
          required: false
          type: string
          description: Minimum amount.
        - name: amount_to
          in: query
          required: false
          type: string
          description: Maximum amount.
        - name: created_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: created_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: updated_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: updated_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: completed_at_from
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: completed_at_to
          in: query
          required: false
          type: string
          description: 'Any valid ISO 8601 format, eg. "2017-12-31T23:59:59Z".'
        - name: creator_contact_id
          in: query
          required: false
          type: string
          description: Contact UUID of transfer instructor.
        - name: creator_account_id
          in: query
          required: false
          type: string
          description: Account UUID of transfer instructor.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          default: created_at
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              transfers:
                type: array
                items:
                  $ref: '#/definitions/Transfer'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: source_account_id_is_not_valid_uuid
              category: source_account_id
              message: source_account_id should be in UUID format
              params: ''
            - code: destination_account_id_is_not_valid_uuid
              category: destination_account_id
              message: destination_account_id should be in UUID format
              params: ''
            - code: amount_from_type_is_wrong
              category: amount_from
              message: amount_from should be of numeric type
              params: '{ "type" => "numeric" }'
            - code: amount_to_type_is_wrong
              category: amount_to
              message: amount_to should be of numeric type
              params: '{ "type" => "numeric" }'
            - code: status_not_in_range
              category: status
              message: 'status should be in range: pending, completed'
              params: '{ "range" => "pending, completed" }'
            - code: created_at_from_is_in_invalid_format
              category: created_at_from
              message: created_at_from should be in ISO 8601 format
              params: '{ "type" => "datetime" }'
            - code: created_at_to_is_in_invalid_format
              category: created_at_to
              message: created_at_to should be in ISO 8601 format
              params: '{ "type" => "datetime" }'
            - code: updated_at_from_is_in_invalid_format
              category: updated_at_from
              message: updated_at_from should be in ISO 8601 format
              params: '{ "type" => "datetime" }'
            - code: updated_at_to_is_in_invalid_format
              category: updated_at_to
              message: updated_at_to should be in ISO 8601 format
              params: '{ "type" => "datetime" }'
            - code: completed_at_from_is_in_invalid_format
              category: completed_at_from
              message: completed_at_from should be in ISO 8601 format
              params: '{ "type" => "datetime" }'
            - code: completed_at_to_is_in_invalid_format
              category: completed_at_to
              message: completed_at_to should be in ISO 8601 format
              params: '{ "type" => "datetime" }'
            - code: creator_contact_id_is_not_valid_uuid
              category: creator_contact_id
              message: creator_contact_id should be in UUID format
              params: ''
            - code: creator_account_id_is_not_valid_uuid
              category: creator_account_id
              message: creator_account_id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/FindTransfersError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  '/transfers/{id}':
    get:
      tags:
        - Transfers
      x-api-group: pay
      summary: Get Transfer
      description: Get a money transfer record.
      operationId: GetTransfer
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: id
          in: path
          required: true
          type: string
          description: Transfer UUID.
        - name: on_behalf_of
          in: query
          required: false
          type: string
          description: Contact UUID.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Transfer'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: id_is_not_valid_uuid
              category: id
              message: id should be in UUID format
              params: ''
            - code: on_behalf_of_self
              category: on_behalf_of
              message: You cannot act on behalf of your own Contact
              params: ''
            - code: transfer_not_found
              category: id
              message: Transfer was not found for this ID
              params: ''
            - code: contact_not_found
              category: on_behalf_of
              message: Contact was not found for this id
              params: ''
          schema:
            $ref: '#/definitions/GetTransferError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          schema:
            $ref: '#/definitions/NotFoundError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /transfers/create:
    post:
      tags:
        - Transfers
      x-api-group: pay
      summary: Create Transfer
      description: >-
        Transfer funds from one account to another account. No currency
        conversion is performed, so the sending and receiving accounts must hold
        money in the same currency.
      operationId: CreateTransfer
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: source_account_id
          in: formData
          required: true
          type: string
          description: Account UUID of the paying account.
        - name: destination_account_id
          in: formData
          required: true
          type: string
          description: Account UUID of the receiving account.
        - name: currency
          in: formData
          required: true
          type: string
          description: Three-digit currency code.
        - name: amount
          in: formData
          required: true
          type: string
          description: Amount.
        - name: reason
          in: formData
          required: false
          type: string
          description: User-generated reason for transfer. Freeform text.
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Transfer'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          schema:
            $ref: '#/definitions/CreateTransferError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
  /virtual_accounts/find:
    get:
      tags:
        - VANs
      x-api-group: collect
      summary: Find VANs
      description: >-
        Returns a JSON structure with details of the VANs for the specified
        accounts
      operationId: FindVANs
      produces:
        - application/json
      parameters:
        - name: scope
          in: query
          required: false
          type: string
          description: >-
            Scope allows the logged in account to search all VANs at all account
            levels.  Defaults to all.  Own - search for VANs on the main
            account  Clients - search for VANs of account sub accounts <br> all
            - search for VANs of account and sub-accounts
          enum:
            - own
            - all
            - clients
          default: all
        - name: account_id
          in: query
          required: false
          type: string
          description: UUID of a specific account you want to see the IBAN for
        - name: X-Auth-Token
          in: header
          required: true
          type: string
          description: Authentication token.
        - name: page
          in: query
          required: false
          type: integer
          description: Page number.
        - name: per_page
          in: query
          required: false
          type: integer
          description: Number of results per page.
        - name: order
          in: query
          required: false
          type: string
          description: Any field name to change the sort order.
        - name: order_asc_desc
          in: query
          required: false
          type: string
          enum:
            - asc
            - desc
          default: asc
          description: Sort records in ascending or descending order.
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              vans:
                type: array
                items:
                  $ref: '#/definitions/VAN'
              pagination:
                $ref: '#/definitions/Pagination'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '400':
          description: Client error.
          x-errors:
            - code: vans_not_found
              category: base
              message: VANs were not found
              params: ''
            - code: scope_not_in_range
              category: scope
              message: "scope should be in range: own, all, clients"
              params: '{ "range" => "own, all, clients" }'
          schema:
            $ref: '#/definitions/GetVANsError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '401':
          description: Unauthorized.
          x-errors:
            - code: invalid_supplied_credentials
              category: username
              message: Authentication failed with the supplied credentials
              params: ''
          schema:
            $ref: '#/definitions/UnauthorizedError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '404':
          description: Resource not found.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '429':
          description: Too many requests.
          x-errors:
            - code: too_many_requests
              category: base
              message: >-
                Too many requests have been made to the api. Please refer to the
                Developer Center for more information
              params: ''
          schema:
            $ref: '#/definitions/RateLimitError'
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '500':
          description: Internal server error
          x-errors:
            - code: internal_server_error
              category: base
              message: Internal server error
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        '503':
          description: Service is temporary unavailable
          x-errors:
            - code: service_unavailable
              category: base
              message: Service is temporary unavailable
              params: ''
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
        default:
          description: Unexpected error.
          headers:
            X-Request-Id:
              type: string
              description: A unique reference for the request.
definitions:
  Account:
    type: object
    description: Account.
    properties:
      id:
        type: string
        description: Account ID.
      account_name:
        type: string
      brand:
        type: string
        description: >-
          The value of this field is used for white labeling the Currencycloud
          user interface.
      your_reference:
        type: string
        description: User-generated reference code.
      status:
        type: string
        enum:
          - enabled
          - enabled_no_trading
          - disabled
        description: Account status.
      street:
        type: string
        description: First line of address.
      city:
        type: string
        description: City.
      state_or_province:
        type: string
        description: State or province.
      country:
        type: string
        description: Two-letter country code.
      postal_code:
        type: string
        description: Postal code.
      spread_table:
        type: string
        description: The name of the spread table assigned to the account.
      legal_entity_type:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      identification_type:
        type: string
        description: A legal document that verifies the identity of the account owner.
      identification_value:
        type: string
        description: >-
          A unique reference code for the identification document, such as a
          passport number.
      short_reference:
        type: string
      api_trading:
        type: boolean
      online_trading:
        type: boolean
      phone_trading:
        type: boolean
      process_third_party_funds:
        type: boolean
      settlement_type:
        type: string
    example:
      id: B7DE235A-FF5D-4252-83C2-06A605267FEA
      account_name: Company PLC
      brand: currencycloud
      your_reference: 0012345564ABC
      status: enabled
      street: 1 London Road
      city: London
      state_or_province: ''
      country: GB
      postal_code: AB12 CD1
      spread_table: flat_0.5_percent
      legal_entity_type: company
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
      identification_type: green_card
      identification_value: 123456789
      short_reference: 110104-00004
      api_trading: true
      online_trading: true
      phone_trading: true
      process_third_party_funds: false
      settlement_type: bulk
  AccountPaymentChargesSetting:
    type: object
    description: Account Payment Charges Setting.
    properties:
      charge_settings_id:
        type: string
      account_id:
        type: string
      charge_type:
        type: string
      enabled:
        type: boolean
      default:
        type: boolean
    example:
      charge_settings_id: 2b7db581-a810-0132-a8c2-10b11cb33cfc
      account_id: 2b6db571-a810-0144-a9b2-10a22cb33cf9
      charge_type: shared
      enabled: true
      default: true
  AddConversionToSettlementError:
    type: object
    description: |
      Client error information for the Add Conversion to Settlement endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  AuthenticationToken:
    type: object
    description: Authentication token.
    properties:
      auth_token:
        type: string
        description: >-
          A randomly-generated 64-digit authentication token. Clients must store
          this securely and destroy it when it is no longer needed.
    example:
      auth_token: 043cc6069f5e32757647641460d1d5ed
  AvailableCurrencies:
    type: object
    description: Available currencies.
    properties:
      code:
        type: string
      decimal_places:
        type: integer
      name:
        type: string
      online_trading:
        type: boolean
      can_buy:
        type: boolean
      can_sell:
        type: boolean
    example:
      code: AED
      decimal_places: 2
      name: United Arab Emirates Dirham
      online_trading: true
      can_buy: true
      can_sell: true
  Balance:
    type: object
    description: Balance.
    properties:
      id:
        type: string
        description: Balance UUID.
      account_id:
        type: string
        description: Account UUID.
      currency:
        type: string
        description: Currency code.
      amount:
        type: string
        description: Amount.
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    example:
      id: 18230F1D-648A-406A-AD1F-A09CBC02E9E9
      account_id: TcC
      currency: USD
      amount: '1000.00'
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
  Beneficiary:
    type: object
    description: Beneficiary.
    properties:
      id:
        type: string
        description: Beneficiary UUID.
      bank_account_holder_name:
        type: string
      name:
        type: string
      email:
        type: string
      payment_types:
        type: array
        items:
          type: string
          description: Example - "regular".
      beneficiary_address:
        type: array
        items:
          type: string
          description: Line of address.
      beneficiary_country:
        type: string
        description: Two-letter country code.
      beneficiary_entity_type:
        type: string
        enum:
          - company
          - individual
      beneficiary_company_name:
        type: string
        description: For companies.
      beneficiary_first_name:
        type: string
        description: For individuals.
      beneficiary_last_name:
        type: string
        description: For individuals.
      beneficiary_city:
        type: string
        description: City.
      beneficiary_postcode:
        type: string
        description: Postal code.
      beneficiary_state_or_province:
        type: string
        description: State or province.
      beneficiary_date_of_birth:
        type: string
        description: 'For companies, this is the foundation date of the company.'
      beneficiary_identification_type:
        type: string
        description: A legal document that verifies the identity of the beneficiary.
      beneficiary_identification_value:
        type: string
        description: >-
          A unique reference code for the identification document, such as a
          passport number.
      bank_country:
        type: string
        description: >-
          Two-letter code for the country in which the beneficiary's bank
          account is held.
      bank_name:
        type: string
      bank_account_type:
        type: string
      currency:
        type: string
      account_number:
        type: string
      routing_code_type_1:
        type: string
      routing_code_value_1:
        type: string
      routing_code_type_2:
        type: string
      routing_code_value_2:
        type: string
      bic_swift:
        type: string
      iban:
        type: string
      default_beneficiary:
        type: string
      creator_contact_id:
        type: string
      bank_address:
        type: array
        items:
          type: string
          description: Line of address.
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      beneficiary_external_reference:
        type: string
    example:
      id: a6000ce9-46b8-49a7-9f5b-325ed3f047c2
      bank_account_holder_name: Company PLC
      name: Sample name
      email: ''
      payment_types:
        - regular
      beneficiary_address:
        - 1 My Road
        - London
      beneficiary_country: AU
      beneficiary_entity_type: company
      beneficiary_company_name: Sample Company Name
      beneficiary_first_name: ''
      beneficiary_last_name: ''
      beneficiary_city: ''
      beneficiary_postcode: ''
      beneficiary_state_or_province: ''
      beneficiary_date_of_birth: ''
      beneficiary_identification_type: none
      beneficiary_identification_value: ''
      bank_country: AU
      bank_name: Sample Bank Name
      bank_account_type: checking
      currency: AUD
      account_number: '123456783'
      routing_code_type_1: bsb_code
      routing_code_value_1: '123456'
      routing_code_type_2: ''
      routing_code_value_2: ''
      bic_swift: ''
      iban: ''
      default_beneficiary: 'false'
      creator_contact_id: 58e78791-e0e5-012c-2dee-001e52f3c730
      bank_address:
        - Line 1
        - Line 2
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
      beneficiary_external_reference: B-5847789
  BeneficiaryRequirements:
    type: object
    description: Beneficiary requirements.
    properties:
      payment_type:
        type: string
      acct_number:
        type: string
      bic_swift:
        type: string
      aba:
        type: string
      beneficiary_address:
        type: string
      beneficiary_city:
        type: string
      beneficiary_country:
        type: string
      beneficiary_postcode:
        type: string
      beneficiary_state_or_province:
        type: string
      beneficiary_first_name:
        type: string
      beneficiary_last_name:
        type: string
      beneficiary_entity_type:
        type: string
        enum:
          - company
          - individual
    example:
      payment_type: regular
      acct_number: '^\\d{1,17}$'
      aba: '^[0-9A-Z]{9}$'
      beneficiary_address: '^.{1,255}'
      beneficiary_city: '^.{1,255}'
      beneficiary_country: '^[A-z]{2}$'
      beneficiary_postcode: '^.{1,255}'
      beneficiary_state_or_province: '^.{1,255}'
      beneficiary_first_name: '^.{1,255}'
      beneficiary_last_name: '^.{1,255}'
      beneficiary_entity_type: individual
  Contact:
    type: object
    description: Contact.
    properties:
      login_id:
        type: string
      id:
        type: string
      your_reference:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      account_id:
        type: string
      account_name:
        type: string
      status:
        type: string
      phone_number:
        type: string
      mobile_phone_number:
        type: string
      locale:
        type: string
      timezone:
        type: string
      email_address:
        type: string
      date_of_birth:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    example:
      login_id: john.smith
      id: 543477161-91de-012f-e284-1e0030c7f352
      your_reference: ACME12345
      first_name: John
      last_name: Smith
      account_id: 87077161-91de-012f-e284-1e0030c7f352
      account_name: Company PLC
      status: enabled
      phone_number: 06554 87845
      mobile_phone_number: 07564 534 54
      locale: en-US
      timezone: Europe/London
      email_address: john.smith@company.com
      date_of_birth: '1980-01-22T00:00:00.000Z'
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
  Conversion:
    type: object
    description: Conversion.
    properties:
      id:
        type: string
      account_id:
        type: string
      creator_contact_id:
        type: string
      short_reference:
        type: string
      settlement_date:
        type: string
      conversion_date:
        type: string
      status:
        type: string
      partner_status:
        type: string
      currency_pair:
        type: string
      buy_currency:
        type: string
      sell_currency:
        type: string
      fixed_side:
        type: string
      partner_buy_amount:
        type: string
      partner_sell_amount:
        type: string
      client_buy_amount:
        type: string
      client_sell_amount:
        type: string
      mid_market_rate:
        type: string
      core_rate:
        type: string
      partner_rate:
        type: string
      client_rate:
        type: string
      deposit_required:
        type: boolean
      deposit_amount:
        type: string
      deposit_currency:
        type: string
      deposit_status:
        type: string
      deposit_required_at:
        type: string
      unallocated_funds:
        type: string
      payment_ids:
        type: array
        items:
          type: string
      unique_request_id:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    example:
      id: c9b6b851-10f9-4bbf-881e-1d8a49adf7d8
      account_id: 0386e472-8d2b-45a8-9c14-a393dce5bf3a
      creator_contact_id: ac743762-5860-4b78-9c6a-82c5bca68867
      short_reference: 20140507-VRTNFC
      settlement_date: '2017-12-31T23:59:59.000Z'
      conversion_date: '2017-12-31T23:59:59.000Z'
      status: awaiting_funds
      partner_status: awaiting_funds
      currency_pair: GBPUSD
      buy_currency: GBP
      sell_currency: USD
      fixed_side: buy
      partner_buy_amount: '1000.00'
      partner_sell_amount: '1587.80'
      client_buy_amount: '1000.00'
      client_sell_amount: '1594.90'
      mid_market_rate: '1.5868'
      core_rate: '1.5871'
      partner_rate: '1.5878'
      client_rate: '1.5949'
      deposit_required: true
      deposit_amount: '47.85'
      deposit_currency: GBP
      deposit_status: awaiting_deposit
      deposit_required_at: '2017-12-31T23:59:59.000Z'
      unallocated_funds: '1000.00'
      payment_ids:
        - b934794f-d810-4b4a-b360-5a0f47b7126e
      unique_request_id: 1234567890abc
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
  ConversionCancellationQuote:
    type: object
    description: Projected cost to cancel a conversion.
    properties:
      amount:
        type: string
      currency:
        type: string
      event_date_time:
        type: string
        format: date-time
    example:
      amount: 100
      currency: GBP
      event_date_time: '2018-07-14T17:03:11.000Z'
  ConversionProfitAndLoss:
    type: object
    description: Recognised profit / loss on a conversion
    properties:
      conversion_profit_and_losses:
        type: array
        items:
          $ref: '#/definitions/ConversionCancellation'
      pagination:
        $ref: '#/definitions/Pagination'
    example:
      conversion_profit_and_losses:
        - account_id: 2090939e-b2f7-3f2b-1363-4d235b3f58af
          contact_id: 8a98ebac-6f88-e205-a685-4d235b1b088b
          event_account_id: 2090939e-b2f7-3f2b-1363-4d235b3f58af
          event_contact_id: 8a98ebac-6f88-e205-a685-4d235b1b088b
          conversion_id: 648945d7-1cff-4dae-a432-7d5501c77a8a
          amount: '-0.28'
          currency: GBP
          notes: Cancel the conversion due to personal issues
          event_type: self_service_cancellation
          event_date_time: '2017-11-10T12:18:56.000Z'
        - account_id: 67e1b252-40a7-454d-a097-8f77d385889d
          contact_id: 04d0c252-7b78-4d72-b408-df78841e3ddc
          event_account_id: 67e1b252-40a7-454d-a097-8f77d385889d
          event_contact_id: 04d0c252-7b78-4d72-b408-df78841e3ddc
          conversion_id: 540c2ea3-9916-4efb-9cd9-0f8ce63a5c04
          amount: '-0.83'
          currency: USD
          notes: Cancel due to very important reason
          event_type: self_service_cancellation
          event_date_time: '2017-11-10T12:18:56.000Z'
      pagination:
        total_entries: 2
        total_pages: 1
        current_page: 1
        per_page: 25
        previous_page: -1
        next_page: 2
        order: created_at
        order_asc_desc: asc
  ConversionCancellation:
    type: object
    description: Cancelled Conversion
    properties:
      account_id:
        type: string
      contact_id:
        type: string
      event_account_id:
        type: string
      event_contact_id:
        type: string
      conversion_id:
        type: string
      amount:
        type: string
      currency:
        type: string
      notes:
        type: string
      event_type:
        type: string
      event_date_time:
        type: string
        format: date-time
    example:
      account_id: 2090939e-b2f7-3f2b-1363-4d235b3f58af
      contact_id: 8a98ebac-6f88-e205-a685-4d235b1b088b
      event_account_id: 2090939e-b2f7-3f2b-1363-4d235b3f58af
      event_contact_id: 8a98ebac-6f88-e205-a685-4d235b1b088b
      conversion_id: 648945d7-1cff-4dae-a432-7d5501c77a8a
      amount: '-0.28'
      currency: GBP
      notes: Cancel the conversion due to personal issues
      event_type: self_service_cancellation
      event_date_time: '2017-11-10T12:18:56.000Z'
  ConversionDateChange:
    type: object
    description: Conversion Date change record
    properties:
      profit_loss:
        type: string
      profit_loss_currency:
        type: string
      new_delivery_date:
        type: string
        format: date-time
      new_settlement_date:
        type: string
        format: date-time
      old_delivery_date:
        type: string
        format: date-time
      old_settlement_date:
        type: string
        format: date-time
      event_date_time:
        type: string
        format: date-time
  ConversionDates:
    type: object
    description: Conversion dates.
    properties:
      invalid_conversion_dates:
        type: object
        additionalProperties:
          type: string
          description: >-
            Maps dates (eg. "2017-12-31") to string values that explain why
            trading is not available on the date (eg. "No trading on Sunday").
      first_conversion_date:
        type: string
        format: date
        description: Example - "2017-12-31".
      default_conversion_date:
        type: string
        format: date
        description: Example - "2017-12-31".
    example:
      invalid_conversion_dates:
        '2013-04-18': Good Friday
        '2013-04-19': No trading on Saturday
        '2013-04-20': No trading on Sunday
        '2013-04-21': Easter Monday
        '2013-04-26': No trading on Saturday
        '2013-04-27': No trading on Sunday
        '2013-05-03': No trading on Saturday
        '2013-05-04': No trading on Sunday
        '2013-05-05': Early May Bank Holiday
        '2013-05-10': No trading on Saturday
        '2013-05-11': No trading on Sunday
        '2013-05-17': No trading on Saturday
        '2013-05-18': No trading on Sunday
        '2013-05-24': No trading on Saturday
        '2013-05-25': No trading on Sunday
        '2013-05-26': Spring Bank Holiday
        '2013-05-31': No trading on Saturday
        '2013-06-01': No trading on Sunday
        '2013-06-07': No trading on Saturday
        '2013-06-08': No trading on Sunday
        '2013-06-14': No trading on Saturday
      first_conversion_date: '2013-04-15T00:00:00.000Z'
      default_conversion_date: '2013-04-17T00:00:00.000Z'
  ConversionSplitDetails:
    properties:
      id:
        type: string
      short_reference:
        type: string
      sell_currency:
        type: string
      buy_currency:
        type: string
      buy_amount:
        type: string
      sell_amount:
        type: string
      settles_at:
        type: string
        format: date-time
      delivery_at:
        type: string
        format: date-time
      status:
        type: string
  ConversionSplit:
    type: object
    properties:
      parent_conversion:
        $ref: '#/definitions/ConversionSplitDetails'
      child_conversion:
        $ref: '#/definitions/ConversionSplitDetails'
  ConversionSplitHistory:
    type: object
    properties:
      origin_conversion:
        $ref: '#/definitions/ConversionSplitDetails'
      parent_conversion:
        $ref: '#/definitions/ConversionSplitDetails'
      child_conversions:
        type: array
        items:
          $ref: '#/definitions/ConversionSplitDetails'
  ReportRequest:
    type: object
    description: Report record
    properties:
      id:
        type: string
        description: Report unique ID
      short_reference:
        type: string
        description: Human readable unique ID
      search_params:
        type: object
        default: {}
        description: >-
          Parameters to select specific range of items, that we want to see in
          report
      report_type:
        type: string
      status:
        type: string
      expiration_date:
        type: string
        format: date
        description: ISO 8601 Date of report expiration
      report_url:
        type: string
        description: URL to download CSV report
      account_id:
        type: string
        description: ID of the account
      contact_id:
        type: string
        description: ID of the contact
      created_at:
        type: string
        format: date
        description: ISO 8601 Date when the Report was created
      updated_at:
        type: string
        format: date
        description: ISO 8601 Date when the Report was last updated
    example:
      id: 950dac23-c4af-4a6a-ba19-344560abe2a9
      short_reference: RP-30250607-VDTMFA
      description: 'Description, which was provided during the report creation process'
      search_params:
        short_reference: RP-30250607-VDTMFA
        description: 'Description, which was provided during the report creation process'
        account_id: 9a7ba866-56d1-39c6-8ca2-12cb4141213a
        contact_id: 543a7716c-816e-01af-3214-2e0030f6f25a
        created_at_from: '2014-01-12'
        created_at_to: '2014-01-17'
        expiration_date_from: '2014-01-12'
        expiration_date_to: '2014-01-17'
        status: completed
        report_type: Payment
      report_type: payment
      status: completed
      expiration_date: '2017-03-23T00:00:00.000Z'
      report_url: >-
        https://tcc.s3.amazonaws.com/reports/transaction_reports/000/000/011/transaction_report_23_03_2017.csv?1471682433
      account_id: B7DE235A-FF5D-4252-83C2-06A605267FEA
      contact_id: 543477161-91de-012f-e284-1e0030c7f352
      created_at: '2017-03-16T23:59:59.000Z'
      updated_at: '2017-03-16T23:59:59.000Z'
  CreateAccountError:
    type: object
    description: |
      Client error information for the Create Account endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateBeneficiaryError:
    type: object
    description: |
      Client error information for the Create Beneficiary endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateContactError:
    type: object
    description: |
      Client error information for the Create Contact endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateConversionError:
    type: object
    description: |
      Client error information for the Create Conversion endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreatePaymentAuthorisationError:
    type: object
    description: |
      Client error information for the Create Payment Authorise endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreatePaymentError:
    type: object
    description: |
      Client error information for the Create Payment endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateSettlementError:
    type: object
    description: |
      Client error information for the Create Settlement endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  CreateTransferError:
    type: object
    description: Client error information for the Create Transfer endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  DeleteBeneficiaryError:
    type: object
    description: |
      Client error information for the Delete Beneficiary endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  DeletePaymentError:
    type: object
    description: |
      Client error information for the Delete Payment endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  DeleteSettlementError:
    type: object
    description: |
      Client error information for the Delete Settlement endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindAccountsError:
    type: object
    description: |
      Client error information for the Find Accounts endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindBalancesError:
    type: object
    description: |
      Client error information for the Find Balances endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindBeneficiariesError:
    type: object
    description: |
      Client error information for the Find Beneficiaries endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindContactsError:
    type: object
    description: |
      Client error information for the Find Contacts endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindConversionsError:
    type: object
    description: |
      Client error information for the Find Conversions endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindPaymentsError:
    type: object
    description: |
      Client error information for the Get Payments endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindSettlementsError:
    type: object
    description: |
      Client error information for the Find Settlements endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindTransactionsError:
    type: object
    description: |
      Client error information for the Find Transactions endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  FindTransfersError:
    type: object
    description: |
      Client error information for the Find Transfers endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GenerateReportError:
    type: object
    description: |
      Client error information for the Generate Report endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetAccountError:
    type: object
    description: |
      Client error information for the Get Account endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetAuthenticatingAccountError:
    type: object
    description: |
      Client error information for the Get Authenticating Account endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetAccountPaymentChargesSettingsError:
    type: object
    description: >
      Client error information for the Get Account Payment Charges Settings endpoint.
    required:
    - error_code
    - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
            - code
            - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  ManageAccountPaymentChargesSettingsError:
    type: object
    description: >
      Client error information for the Manage Account Payment Charges Settings endpoint.
    required:
    - error_code
    - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
            - code
            - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetAvailableCurrenciesError:
    type: object
    description: |
      Client error information for the Get Available Currencies endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBalanceError:
    type: object
    description: |
      Client error information for the Get Balance endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBasicRatesError:
    type: object
    description: |
      Client error information for the Get Basic Rates endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBeneficiaryError:
    type: object
    description: |
      Client error information for the Get Beneficiary endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetBeneficiaryRequirementsError:
    type: object
    description: |
      Client error information for the Get Beneficiary Requirements endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetContactError:
    type: object
    description: |
      Client error information for the Get Contact endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetConversionDatesError:
    type: object
    description: |
      Client error information for the Get Conversion Dates endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetConversionError:
    type: object
    description: |
      Client error information for the Get Conversion endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetDetailedRatesError:
    type: object
    description: |
      Client error information for the Get Detailed Rates endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetIBANsError:
    type: object
    description: |
      Client error information for the Get IBANs endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPayerError:
    type: object
    description: |
      Client error information for the Get Payer endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPayerRequirementsError:
    type: object
    description: |
      Client error information for the Get Payer Requirements endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentDatesError:
    type: object
    description: |
      Client error information for the Get Payment Dates endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentPurposeCodesError:
    type: object
    description: |
      Client error information for the Get Payment Purpose Codes endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentError:
    type: object
    description: |
      Client error information for the Get Payment endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentDeliveryDateError:
    type: object
    description: |
      Client error information for the Get Payment Delivery Date endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetPaymentSubmissionError:
    type: object
    description: |
      Client error information for the Get Payment Submission endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetReportRequestError:
    type: object
    description: |
      Client error information for the Get Report Request endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetSenderError:
    type: object
    description: |
      Client error information for the Get Sender endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetSettlementAccountsError:
    type: object
    description: |
      Client error information for the Get Settlement Accounts endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetSettlementError:
    type: object
    description: |
      Client error information for the Get Settlement endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetTransactionError:
    type: object
    description: |
      Client error information for the Get Transaction endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetTransferError:
    type: object
    description: |
      Client error information for the Get Transfer endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  GetVANsError:
    type: object
    description: |
      Client error information for the Get VANs endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  IBAN:
    type: object
    description: IBAN.
    properties:
      uuid:
        type: string
      iban_code:
        type: string
      account_id:
        type: string
      currency:
        type: string
      account_holder_name:
        type: string
      bank_institution_name:
        type: string
      bank_institution_address:
        type: string
      bank_institution_country:
        type: string
      bic_swift:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    example:
      uuid: 01d8c0bc-7f0c-4cdd-bc7e-ef81f68500fe
      iban_code: GB51TCCL00997997989489
      account_id: 87077161-91de-012f-e284-1e0030c7f352
      currency: EUR
      account_holder_name: Account-IGGLNHYTWFKI
      bank_institution_name: The Currency Cloud
      bank_institution_address: '12 Steward Street, The Steward Building, London, E1 6FQ, GB'
      bank_institution_country: United Kingdom
      bic_swift: TCCLGB31
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
  LoginError:
    type: object
    description: |
      Login error.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
    example:
      error_code: auth_invalid_user_login_details
      error_messages:
        api_key:
          - code: api_key_length_is_invalid
            message: api_key should be 64 character(s) long
            params:
              length: 64
  NotFoundError:
    type: object
    description: Resource not found.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  Pagination:
    type: object
    description: Pagination.
    properties:
      total_entries:
        type: integer
      total_pages:
        type: integer
      current_page:
        type: integer
      per_page:
        type: integer
        description: Number of results per page.
      previous_page:
        type: integer
      next_page:
        type: integer
      order:
        type: string
        description: The field name by which the results are sorted.
      order_asc_desc:
        type: string
        enum:
          - asc
          - desc
        default: asc
        description: Whether results are sorted in ascending or descending order.
    example:
      total_entries: 1
      total_pages: 1
      current_page: 1
      per_page: 25
      previous_page: -1
      next_page: 2
      order: created_at
      order_asc_desc: asc
  Payer:
    type: object
    description: Payer.
    properties:
      id:
        type: string
      legal_entity_type:
        type: string
      company_name:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      address:
        type: array
        items:
          type: string
          description: Line of address.
      city:
        type: string
      state_or_province:
        type: string
      country:
        type: string
      identification_type:
        type: string
        description: A legal document that verifies the identity of the payer.
      identification_value:
        type: string
        description: >-
          A unique reference code for the identification document, such as a
          passport number.
      postcode:
        type: string
      date_of_birth:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
    example:
      id: 543477161-91de-012f-e284-1e0030c7f3123
      legal_entity_type: company
      company_name: Acme Corporation
      first_name: ''
      last_name: ''
      address:
        - 164 Bishopsgate
        - London
      city: London
      state_or_province: ''
      country: GB
      identification_type: incorporation_number
      identification_value: 123123
      postcode: EC2M 4LX
      date_of_birth: '2017-12-31T23:59:59.000Z'
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
  PayerRequirements:
    type: object
    description: Payer requirements.
    properties:
      payer_entity_type:
        type: string
      payment_type:
        type: string
      required_fields:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            validation_rule:
              type: string
    example:
      payer_entity_type: company
      payment_type: priority
      required_fields:
        - name: payer_country
          validation_rule: '^[A-z]{2}$'
        - name: payer_city
          validation_rule: '^.{1,255}'
        - name: payer_address
          validation_rule: '^.{1,255}'
        - name: payer_postcode
          validation_rule: '^.{1,255}'
        - name: payer_company_name
          validation_rule: '^.{1,255}'
  Payment:
    type: object
    description: Payment.
    properties:
      id:
        type: string
      short_reference:
        type: string
      beneficiary_id:
        type: string
      conversion_id:
        type: string
      amount:
        type: string
      currency:
        type: string
      status:
        type: string
      payment_type:
        type: string
      reference:
        type: string
      reason:
        type: string
      payment_date:
        type: string
      transferred_at:
        type: string
      authorisation_steps_required:
        type: string
      creator_contact_id:
        type: string
      last_updater_contact_id:
        type: string
      failure_reason:
        type: string
      payer_id:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      payment_group_id:
        type: string
      unique_request_id:
        type: string
      failure_returned_amount:
        type: string
      ultimate_beneficiary_name:
        type: string
      purpose_code:
        type: string
    example:
      id: 543477161-91de-012f-e284-1e0030c7f3123
      short_reference: 140416-GGJBNQ001
      beneficiary_id: 543477161-91de-012f-e284-1e0030c7f352
      conversion_id: 049bab6d-fe2a-42e1-be0f-531c59f838ea
      amount: '1250000.00'
      currency: GBP
      status: ready_to_send
      payment_type: regular
      reference: INVOICE 9876
      reason: Salary for March
      payment_date: '2017-12-31T23:59:59.000Z'
      transferred_at: '2017-12-31T23:59:59.000Z'
      authorisation_steps_required: '0'
      creator_contact_id: ab3477161-91de-012f-e284-1e0030c7f35c
      last_updater_contact_id: ab3477161-91de-012f-e284-1e0030c7f35c
      failure_reason: ''
      payer_id: ''
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
      payment_group_id: 20140428-CJRRJM
      unique_request_id: 1234567890abc
      failure_returned_amount: ''
      ultimate_beneficiary_name: Some beneficiary name
      purpose_code: ''
  PaymentAuthorisations:
    type: object
    description: Payment Authorisations.
    properties:
      authorisations:
        type: array
        items:
          $ref: '#/definitions/PaymentAuthorisation'
  PaymentAuthorisation:
    type: object
    description: Payment Authorisation.
    properties:
      payment_id:
        type: string
      payment_status:
        type: string
      updated:
        type: string
      error:
        type: string
      auth_steps_taken:
        type: string
      auth_steps_required:
        type: string
      short_reference:
        type: string
    example:
      payment_id: 27966e22-5bdc-4675-923d-041c6be5b239
      payment_status: ready_to_send
      updated: true
      error: null
      auth_steps_taken: 3
      auth_steps_required: 0
      short_reference: 180628-FGVXPX001
  PaymentDates:
    type: object
    description: Payment dates.
    properties:
      invalid_payment_dates:
        type: object
        additionalProperties:
          type: string
          description: >-
            Maps dates (eg. "2017-12-31") to string values that explains why
            payments cannot be made on this date (eg. "No trading on Sunday").
      first_payment_date:
        type: string
    example:
      invalid_payment_dates:
        '2013-04-18': Good Friday
        '2013-04-19': No trading on Saturday
        '2013-04-20': No trading on Sunday
        '2013-04-21': Easter Monday
        '2013-04-26': No trading on Saturday
        '2013-04-27': No trading on Sunday
        '2013-05-03': No trading on Saturday
        '2013-05-04': No trading on Sunday
        '2013-05-05': Early May Bank Holiday
        '2013-05-10': No trading on Saturday
        '2013-05-11': No trading on Sunday
        '2013-05-17': No trading on Saturday
        '2013-05-18': No trading on Sunday
        '2013-05-24': No trading on Saturday
        '2013-05-25': No trading on Sunday
        '2013-05-26': Spring Bank Holiday
        '2013-05-31': No trading on Saturday
        '2013-06-01': No trading on Sunday
        '2013-06-07': No trading on Saturday
        '2013-06-08': No trading on Sunday
        '2013-06-14': No trading on Saturday
      first_payment_date: '2013-04-15T00:00:00.000Z'
  PaymentDeliveryDate:
    type: object
    description: Payment Delivery Date
    required:
      - payment_date
      - payment_delivery_date
      - payment_cutoff_time
      - payment_type
      - currency
      - bank_country
    additionalProperties: false
    properties:
      payment_date:
        type: string
      payment_delivery_date:
        type: string
      payment_cutoff_time:
        type: string
      payment_type:
        type: string
      currency:
        type: string
      bank_country:
        type: string
    example:
      payment_date: "2019-02-11"
      payment_delivery_date: "2019-02-11T00:00:00+00:00"
      payment_cutoff_time: "2019-02-11T19:00:00+00:00"
      payment_type: "priority"
      currency: "MXN"
      bank_country: "MX"
  PaymentPurposeCodes:
    type: object
    description: Payment purpose codes.
    properties:
      currency:
        type: string
      entity_type:
        type: string
      purpose_code:
        type: string
      purpose_description:
        type: string
      bank_account_country:
        type: string
    example:
      currency: INR
      entity_type: Company
      purpose_code: delivery
      purpose_description: Delivery fees for goods
      bank_account_country: India
  PaymentConfirmation:
    type: object
    description: Payment confirmation.
    properties:
      id:
        type: string
        description: Unique ID of the Payment Confirmation
      payment_id:
        type: string
      account_id:
        type: string
      short_reference:
        type: string
        description: Short reference of the Payment Confirmation
      status:
        type: string
        description: Status of the Payment Confirmation processing
      confirmation_url:
        type: string
        description: URL to download Payment Confirmation file
      created_at:
        type: string
        format: date-time
        description: Datetime of when the Payment Confirmation was created
      updated_at:
        type: string
        format: date-time
        description: Datetime of when the Payment Confirmation was last updated
      expires_at:
        type: string
        format: date-time
        description: Datetime of when the Payment Confirmation will expire
    example:
      id: 123123121-91de-012f-e284-1e0030c7f3111
      payment_id: 543477161-91de-012f-e284-1e0030c7f3123
      account_id: 543477161-91de-012f-e284-1e0030c7f352
      short_reference: 140416-GGJBNQ001
      status: completed
      confirmation_url: 'https://s3.com/140416-GGJBNQ001.pdf'
      created_at: '2014-01-12T00:00:00+00:00'
      updated_at: '2014-01-12T00:00:00+00:00'
      expires_at: '2014-02-12T00:00:00+00:00'
  PaymentSubmission:
    type: object
    description: Payment submission.
    properties:
      mt103:
        type: string
      status:
        type: string
      submission_ref:
        type: string
    example:
      mt103: >-
        {1:F01TCCLGB20AXXX0090000004}{2:I103BARCGB22XXXXN}{4:
        :20:20160617-ZSYWVY :23B:CRED :32A:160617GBP3000,0 :33B:GBP3000,0
        :50K:/150618-00026 PCOMAPNY address New-York Province 555222 GB
        :53B:/20060513071472 :57C://SC200605 :59:/200605000 First Name Last Name
        e03036bf6c325dd12c58 London GB :70:test reference Test reason Payment
        group: 0160617-ZSYWVY :71A:SHA -}
      status: pending
      submission_ref: MXGGYAGJULIIQKDV
  RatesBasic:
    properties:
      rates:
        type: object
        description: >-
          Maps currency pairs (eg. "EURUSD", "GBPZAR") to rates. The first
          number is the bid amount, and the second is the rate currently offered
          by Currencycloud.
        additionalProperties:
          type: array
          items:
            type: string
            description: >-
              A list of currency pairs that are not currently available for
              exchange via the Currencycloud platform.
        example:
          EURUSD:
            - '1.3803'
            - '1.3809'
          GBPZAR:
            - '17.5271'
            - '17.5279'
  RateDetailed:
    type: object
    description: Detailed rate information.
    properties:
      settlement_cut_off_time:
        type: string
      currency_pair:
        type: string
      client_buy_currency:
        type: string
      client_sell_currency:
        type: string
      client_buy_amount:
        type: string
      client_sell_amount:
        type: string
      fixed_side:
        type: string
      mid_market_rate:
        type: string
      core_rate:
        type: string
      partner_rate:
        type: string
      client_rate:
        type: string
      deposit_required:
        type: string
      deposit_amount:
        type: string
      deposit_currency:
        type: string
    example:
      settlement_cut_off_time: '2017-12-31T23:59:59.000Z'
      currency_pair: GBPUSD
      client_buy_currency: GBP
      client_sell_currency: USD
      client_buy_amount: '1000.00'
      client_sell_amount: '1594.90'
      fixed_side: buy
      mid_market_rate: '1.5868'
      core_rate: '1.587'
      partner_rate: '1.5878'
      client_rate: '1.5949'
      deposit_required: 'true'
      deposit_amount: '316.96'
      deposit_currency: USD
  RateLimitError:
    type: object
    description: Too many requests.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: A unique code that identifies this validation/error.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  ReleaseSettlementError:
    type: object
    description: |
      Client error information for the Release Settlement endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  RemoveConversionFromSettlementError:
    type: object
    description: >
      Client error information for the Remove Conversion from Settlement
      endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  Sender:
    type: object
    description: Sender
    properties:
      id:
        type: string
      amount:
        type: string
      currency:
        type: string
      additional_information:
        type: string
      value_date:
        type: string
        format: date-time
      sender:
        type: string
      receiving_account_number:
        type: string
        description: this is the receiving VAN
      receiving_account_iban:
        type: string
        description: this is the receiving IBAN
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    example:
      id: 21a7edce-fff8-486a-ac28-0dd143375081
      amount: '450.00'
      currency_code: GBP
      free_text: >-
        6320260731508339645906       0000045000TEST NAME      THE CURRENCY
        CLOUD    S 0063106146268242
      value_date: '2018-03-27T00:00:00.000Z'
      sender: 'CITIBANK XFER, POPMONEY'
      source_account_number: 8119645406
      source_account_iban: null
      credit_debit: debit
      created_at: '2018-03-27T10:51:32.000Z'
      updated_at: '2018-03-27T10:51:34.000Z'
  Settlement:
    type: object
    description: Settlement.
    properties:
      id:
        type: string
      short_reference:
        type: string
      status:
        type: string
      conversion_ids:
        type: array
        items:
          type: string
      entries:
        type: object
        additionalProperties:
          type: object
          description: >-
            Maps currency codes (eg. "GBP", "USD") to an object containing send
            and receive amounts.
          properties:
            send_amount:
              type: string
            receive_amount:
              type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      released_at:
        type: string
        format: date-time
    example:
      id: a937f05e-e9fd-442e-a46f-11e84ba37806
      short_reference: 20140101-BCDFGH
      status: open
      conversion_ids:
        - c9b6b851-10f9-4bbf-881e-1d8a49adf7d8
      entries:
        GBP:
          send_amount: '0.00'
          receive_amount: '1000.00'
        USD:
          send_amount: '1587.80'
          receive_amount: '0.00'
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
      released_at: '2017-12-31T23:59:59.000Z'
  SettlementAccount:
    type: object
    description: Settlement accounts.
    properties:
      bank_account_holder_name:
        type: string
      beneficiary_address:
        type: array
        items:
          type: string
          description: Line of address.
      beneficiary_country:
        type: string
      bank_name:
        type: string
      bank_address:
        type: array
        items:
          type: string
          description: Line of address.
      bank_country:
        type: string
        description: Two-letter country code.
      currency:
        type: string
      bic_swift:
        type: string
      iban:
        type: string
      account_number:
        type: string
      routing_code_type_1:
        type: string
      routing_code_value_1:
        type: string
      routing_code_type_2:
        type: string
      routing_code_value_2:
        type: string
    example:
      bank_account_holder_name: The Currency Cloud GBP - Client Seg A/C
      beneficiary_address:
        - 1 Churchill Place London E14 5HP
      beneficiary_country: GB
      bank_name: Barclays Bank Plc.
      bank_address:
        - 164 Bishopsgate London EC2M 4LX
      bank_country: GB
      currency: GBP
      bic_swift: BARCGB22
      iban: GB06 BARC 2006 0513 0714 72
      account_number: '13071472'
      routing_code_type_1: sort_code
      routing_code_value_1: '200605'
      routing_code_type_2: ''
      routing_code_value_2: ''
  Transaction:
    type: object
    description: Transaction.
    properties:
      id:
        type: string
      balance_id:
        type: string
      account_id:
        type: string
      currency:
        type: string
      amount:
        type: string
      balance_amount:
        type: string
      type:
        type: string
      action:
        type: string
      related_entity_type:
        type: string
      related_entity_id:
        type: string
      related_entity_short_reference:
        type: string
      status:
        type: string
      reason:
        type: string
      settles_at:
        type: string
        format: date-time
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      completed_at:
        type: string
        format: date-time
    example:
      id: c5a990eb-d4d7-482f-bfb1-695261fb1e4d
      balance_id: c5f1f54e-d6d8-4140-8110-f5b99bbc80c3
      account_id: 7b9757a8-eee9-4572-86e6-77f4d711eaa6
      currency: USD
      amount: '1000.00'
      balance_amount: '2000.00'
      type: credit
      action: conversion
      related_entity_type: conversion
      related_entity_id: e93e322f-93aa-4d31-b050-449da723db0b
      related_entity_short_reference: 140416-GGJBNQ001
      status: completed
      reason: Reason for Transaction
      settles_at: '2017-12-31T23:59:59.000Z'
      created_at: '2017-12-31T23:59:59.000Z'
      updated_at: '2017-12-31T23:59:59.000Z'
      completed_at: '2017-12-31T23:59:59.000Z'
  Transfer:
    type: object
    description: Transfer.
    properties:
      id:
        type: string
      short_reference:
        type: string
      source_account_id:
        type: string
      destination_account_id:
        type: string
      currency:
        type: string
      amount:
        type: string
      status:
        type: string
      created_at:
        type: string
      updated_at:
        type: string
      completed_at:
        type: string
      creator_account_id:
        type: string
      creator_contact_id:
        type: string
      reason:
        type: string
    example:
      id: 993d63bd-e151-11e6-a5af-080027a79e8f
      short_reference: BT-20170118-VMSCBS
      source_account_id: a7117404-e150-11e6-a5af-080027a79e8f
      destination_account_id: 946f2d58-e150-11e6-a5af-080027a79e8f
      currency: GBP
      amount: '1250.00'
      status: completed
      created_at: '2017-01-18T14:08:34.000Z'
      updated_at: '2017-01-18T14:08:34.000Z'
      completed_at: '2017-01-18T14:08:34.000Z'
      creator_account_id: 30cb8632-e152-11e6-a5af-080027a79e8f
      creator_contact_id: 262e3d2a-e152-11e6-a5af-080027a79e8f
      reason: Director's fees for March
  UnauthorizedError:
    type: object
    description: Authorization error.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
        enum:
          - auth_failed
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
    example:
      error_code: auth_failed
      error_messages:
        api_key:
          - code: invalid_supplied_credentials
            message: Authentication failed with the supplied credentials
            params: {}
  UnreleaseSettlementError:
    type: object
    description: |
      Client error information for the Unrelease Settlement endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdateAccountError:
    type: object
    description: |
      Client error information for the Update Account endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdateBeneficiaryError:
    type: object
    description: |
      Client error information for the Update Beneficiary endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdateContactError:
    type: object
    description: |
      Client error information for the Update Contact endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  UpdatePaymentError:
    type: object
    description: |
      Client error information for the Update Payment endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  ValidateBeneficiaryError:
    type: object
    description: |
      Client error information for the Validate Beneficiary endpoint.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
      error_messages:
        type: object
        description: >-
          Detailed error information for individual input parameters that failed
          validation. Object keys are the names of the invalid input parameters.
          Each parameter may have one or more reasons why it failed.
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents one of the reasons why the input
              parameter failed.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255
  ForbiddenError:
    type: object
    description: Permission error.
    required:
      - error_code
      - error_messages
    properties:
      error_code:
        type: string
        description: A high-level error code for the whole request.
        enum:
          - auth_failed
      error_messages:
        type: object
        description: >-
          Detailed error information on what permissions are missing
          so that the request could not be fulfilled
        additionalProperties:
          type: array
          items:
            type: object
            description: >-
              An object that represents the reasons why the request
              was not permitted.
            required:
              - code
              - message
            properties:
              code:
                type: string
                description: >-
                  A unique code that identifies this error. It can be used for
                  translations.
              message:
                type: string
                description: An explanation of the error in English.
              params:
                type: object
                default: {}
                description: >-
                  Relevant validation rules that failed. This can be used for
                  translations.
                example:
                  minlength: 1
                  maxlength: 255

  VAN:
    type: object
    description: VAN.
    properties:
      id:
        type: string
      account_id:
        type: string
      virtual_account_number:
        type: string
      account_holder_name:
        type: string
      bank_institution_name:
        type: string
      bank_institution_address:
        type: string
      bank_institution_country:
        type: string
      routing_code:
        type: string
      wire_routing_code:
        type: string
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
    example:
      id: 00d272ee-fae5-4f97-b425-993a2d6e3a46
      account_id: 2090939e-b2f7-3f2b-1363-4d235b3f58af
      virtual_account_number: 8303723297
      account_holder_name: Account-ZXOANNAMKPRQ
      bank_institution_name: Community Federal Savings Bank
      bank_institution_address: 'Seventh Avenue, New York, NY 10019, US'
      bank_institution_country: United States
      routing_code: 026073150
      wire_routing_code: 026073008
      created_at: '2014-01-12T00:00:00.000Z'
      updated_at: '2014-01-12T00:00:00.000Z'

